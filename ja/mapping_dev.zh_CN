:*"Cancel"=キャンセル
:*"Add Branch"=ブランチを追加
:*"Discard"=破棄
:*"Git-Flow"=Git フロー
:*"Commit"=コミット
:*"Branch"=ブランチ
:*"Check Out"=チェックアウト
:*"Merge"=マージ
:*"Pull"=プル
:*"Push"=プッシュ
:*"Rebase"=リベース
:*"Save Stash"=スタッシュに保存
:*"Stage"=ステージ
:*"Sync"=同期
:*"Unstage"=アンステージ
:*"Deselect All"=選択を解除
:*"Select All"=全選択
:*"Output"=出力
:*"Repositories"=リポジトリ
:*"Add Tag"=タグを追加
:*"Apply Stash"=スタッシュを適用
:*"Working Tree"=ワーキングツリー
:*"Refresh"=更新
:*"Email"=電子メール
*.btn"< Back"=< 戻る
*.btn"Cancel"=キャンセル
*.btn"Close"=閉じる
*.btn"Finish"=完了
*.btn"Next >"=次へ >
*.btn"OK"=OK
*.hnt"Filter"=フィルタ
dlgCommitView.hiddenOptions.chk=次回から表示しない
dlgCommitView.hiddenOptions.fur=オプションを使用するには、オプションが表示されている必要があります。
dlgCommitView.hiddenOptions.hdl=非表示のオプションは、選択されていないものとして扱われます。
dlgCommitView.hiddenOptions.tle=コミット
dlgDgAbout.edt"Build Date"=Build Date
dlgDgAbout.edt"Email"=電子メール
dlgDgAbout.edt"Java Version"=Java Version
dlgDgAbout.edt"Maximum Heap"=Maximum Heap
dlgDgAbout.edt"Name"=名前
dlgDgAbout.edt"Settings Path"=Settings Path
dlgDgAbout.edt"Version"=バージョン
dlgDgAbout.tab"Credits"=Credits
dlgDgAbout.tab"Information"=Information
dlgDgAbout.tab"Licensee"=Licensee
dlgDgAbout.tle=DeepGitについて
dlgDgSetEncoding.edt"Text File Encoding"=テキストファイルのエンコーディング
dlgDgSetEncoding.hdl=エンコーディング設定
dlgDgSetEncoding.inf=Specify the encoding which should be used for processing and viewing files. Note, that UTF-8 encoding will be auto-detected, regardless of the configuration here.
dlgDgSetEncoding.tle=Set Encoding
dlgDgSetPerspectiveCantSwitch.fur=Selected origin candidate can't be investigated because it doesn't reflect a real change.
dlgDgSetPerspectiveCantSwitch.hdl=Can't switch perspective.
dlgDgSetPerspectiveCantSwitch.tle=Origins Perspective
dlgIgnoreChanged.btn"Discard Changes"=変更を破棄
dlgIgnoreChanged.fur=The changes will be discarded when proceeding!
dlgIgnoreChanged.hdl=Are you sure to remove changed files?
dlgIgnoreChanged.tle=無視
dlgInfo.tle=破棄
dlgProgress.btn"Stop"=停止
dlgProgress.tle"Checking connectivity"=接続を確認中
dlgProgress.tle"Checking push conditions"=Checking push conditions
dlgProgress.tle"JIRA"=JIRA
dlgProgress.tle"Jump To"=Jump To
dlgProgress.tle"Layouting Graph"=Layouting Graph
dlgProgress.tle"Refresh"=更新
dlgProgress.tle"Reveal Commit"=コミットを表示する
dlgProgress.tle"SmartGit Installation Update"=SmartGit Installation Update
dlgProgress.tle"Upgrade"=アップグレード
dlgQBugFileSendingFailed.fur%1=Maybe you need to configure a proxy or our server is temporarily down.\nDetails: $1
dlgQBugFileSendingFailed.hdl%1=クラッシュ・ログを$1に送信できませんでした。
dlgQBugFileSendingFailed.tle=Native Crash Logs
dlgQBugReportSend.btn"Force Exit"=強制終了
dlgQBugReportSend.btn"Report Bug"=バグを報告
dlgQBugReportSend.edt"Comments or Steps to Reproduce"=Comments or Steps to Reproduce
dlgQBugReportSend.edt"Email"=電子メール
dlgQBugReportSend.edt"Reply To"=Reply To
dlgQBugReportSend.tle=Internal Error
dlgQDockManagerClosedView.chk=次回から表示しない
dlgQDockManagerClosedView.fur=To reopen it again, use the corresponding menu item from the Window menu.
dlgQDockManagerClosedView.hdl%1=You've closed the view '$1'.
dlgQDockManagerClosedView.tle=Closed View
dlgQFileSaveAcceptFilterOverwrite.btn"Overwrite"=上書き
dlgQFileSaveAcceptFilterOverwrite.fur=To save to a different file, click 'Cancel'.
dlgQFileSaveAcceptFilterOverwrite.hdl%1=$1 は既に存在します。上書きしますか？
dlgQFileSaveAcceptFilterOverwrite.tle=Overwrite File
dlgQFrameManagerExit.btn"Discard Changes && Exit"=変更を破棄して終了
dlgQFrameManagerExit.fur=There are unsaved changes which would be lost when exiting now!
dlgQFrameManagerExit.hdl=本当にSmartGitを終了しますか?
dlgQFrameManagerExit.tle=終了
dlgQIntegerInputProviderInvalidValue.fur%2=Port must be in the range from $1 to $2.
dlgQIntegerInputProviderInvalidValue.hdl%1=The text in field '$1' is not valid.
dlgQIntegerInputProviderInvalidValue.tle=Input Validation
dlgQProxyConfigure.chk"Proxy requires authentication"=プロキシに認証が必要
dlgQProxyConfigure.edt"Host"=ホスト
dlgQProxyConfigure.edt"Password"=パスワード
dlgQProxyConfigure.edt"Port"=ポート
dlgQProxyConfigure.edt"Username"=ユーザ名
dlgQProxyConfigure.lbl"Note: The password will be stored in plain text in SmartGit's configuration area!"=\
 注：パスワードは、SmartGitの設定領域にプレーンテキストで保存されます。
dlgQProxyConfigure.rbt"Auto-detect the system proxy"=システムプロキシを自動検出
dlgQProxyConfigure.rbt"Don't use a proxy"=プロキシを使わない
dlgQProxyConfigure.rbt"Use following proxy"=以下のプロキシを使用
dlgQProxyConfigure.tle=プロキシ設定
dlgQProxyConnectionFailed.btn"Configure Proxy"=プロキシ設定
dlgQProxyConnectionFailed.btn"Retry"=再試行
dlgQProxyConnectionFailed.fur=詳細: syntevo.com
dlgQProxyConnectionFailed.hdl%1=$1 に接続できませんでした。
dlgQProxyConnectionFailed.tle=接続に失敗しました。
dlgQUpdateCheckForNewVersion.btn"Configure Proxy"=プロキシ設定
dlgQUpdateCheckForNewVersion.btn"Exit"=終了
dlgQUpdateCheckForNewVersion.btn"Retry"=再試行
dlgQUpdateCheckForNewVersion.btn"Skip"=スキップ
dlgQUpdateCheckForNewVersion.hdl=SmartGit needs to check for updates
dlgQUpdateCheckForNewVersion.inf=If necessary, please configure the proxy and retry.
dlgQUpdateCheckForNewVersion.tle=新しいバージョンの確認
dlgQUpdateCheckForNewVersionFailed.fur%1=Details: Failed to connect to '$1'.
dlgQUpdateCheckForNewVersionFailed.hdl=Checking for new versions has failed.
dlgQUpdateCheckForNewVersionFailed.tle=新しいバージョンの確認
dlgQUpdateCheckLatestBuild.btn"Get Latest Build"=最新のビルドを入手する
dlgQUpdateCheckLatestBuild.fur=サポートチームから要請があった場合のみ、最新のビルドを使用してください。
dlgQUpdateCheckLatestBuild.hdl=最新のビルドをダウンロードしますか？
dlgQUpdateCheckLatestBuild.tle=最新ビルドの確認
dlgQUpdateCheckLatestBuildFetchFailed.fur%1=Details: $1
dlgQUpdateCheckLatestBuildFetchFailed.hdl=Initializing upgrade failed.
dlgQUpdateCheckLatestBuildFetchFailed.tle=最新ビルドの確認
dlgQUpdateCheckNewVersion.btn"Download"=ダウンロード
dlgQUpdateCheckNewVersion.fur=It's recommended to update to the new version.
dlgQUpdateCheckNewVersion.hdl=SmartGitの新しいバージョンが利用可能です。
dlgQUpdateCheckNewVersion.tle=新しいバージョンの確認
dlgQUpdateCheckNoNewerLatestBuild.fur=すでに最新のビルドを使用しています。
dlgQUpdateCheckNoNewerLatestBuild.hdl=No newer build found.
dlgQUpdateCheckNoNewerLatestBuild.tle=最新ビルドの確認
dlgQUpdateCheckNowNewerVersion.fur=すでに最新のバージョンを使用しています。
dlgQUpdateCheckNowNewerVersion.hdl=新しいバージョンは見つかりませんでした。
dlgQUpdateCheckNowNewerVersion.tle=新しいバージョンの確認
dlgScAboutUpdateInstallation.btn"Upgrade Installation"=Upgrade Installation
dlgScAboutUpdateInstallation.fur=これには少し時間がかかり、SmartGitを再起動する必要があります。
dlgScAboutUpdateInstallation.hdl%1=インストールディレクトリをバージョン$1にアップグレードしますか？
dlgScAboutUpdateInstallation.tle=Upgrade Installation
dlgScApplicationStarterRestart.btn"Exit"=終了
dlgScApplicationStarterRestart.btn"Remind Later"=Remind Later
dlgScApplicationStarterRestart.btn"Restart"=再起動
dlgScApplicationStarterRestart.fur=The downloaded program update should be applied now.
dlgScApplicationStarterRestart.hdl=SmartGitは再起動が必要です。
dlgScApplicationStarterRestart.tle=再起動
dlgScBugtrackerCredentials.btn"Login"=ログイン
dlgScBugtrackerCredentials.chk"Store password"=パスワードの保存
dlgScBugtrackerCredentials.edt"Password"=パスワード
dlgScBugtrackerCredentials.edt"User Name"=ユーザ名
dlgScBugtrackerCredentials.hdl%1=Login to '$1'
dlgScBugtrackerCredentials.inf=Provide the user name and password for authenticating to JIRA.
dlgScBugtrackerCredentials.tle=Login to JIRA
dlgScBugtrackerCredentials.wrn"HTTP response code $1"=HTTP response code $1
dlgScBugtrackerSslClientCertificate.btn"Login"=ログイン
dlgScBugtrackerSslClientCertificate.chk"Store passphrase"=Store passphrase
dlgScBugtrackerSslClientCertificate.edt"Certificate"=証明書
dlgScBugtrackerSslClientCertificate.edt"Passphrase"=Passphrase
dlgScBugtrackerSslClientCertificate.hdl%1=Select the client certificate for $1
dlgScBugtrackerSslClientCertificate.inf=Select the client certificate file for authenticating to JIRA.
dlgScBugtrackerSslClientCertificate.tle=JIRA Client Certificate
dlgScBugtrackerSslClientCertificate.wrn"$1"=$1
dlgScBugtrackerSslFingerprintNew.btn"Accept"=Accept
dlgScBugtrackerSslFingerprintNew.btn"Reject"=Reject
dlgScBugtrackerSslFingerprintNew.edt"MD5 fingerprint"=MD5 fingerprint
dlgScBugtrackerSslFingerprintNew.edt"SHA fingerprint"=SHA fingerprint
dlgScBugtrackerSslFingerprintNew.edt"Server"=サーバ
dlgScBugtrackerSslFingerprintNew.lbl"Is the following server fingerprint correct?"=\
 Is the following server fingerprint correct?
dlgScBugtrackerSslFingerprintNew.lbl"When in doubt, contact your server administrator."=\
 When in doubt, contact your server administrator.
dlgScBugtrackerSslFingerprintNew.tle=SSL認証
dlgScConflictSolverAdd.edt"Arguments"=引数
dlgScConflictSolverAdd.edt"Command"=コマンド
dlgScConflictSolverAdd.edt"File Pattern"=ファイルパターン
dlgScConflictSolverAdd.hdl=コンフリクトソルバーの追加
dlgScConflictSolverAdd.inf=Define the file pattern \(e.g. \*.txt\) and select the merge tool which should be used to resolve conflicting files matching this pattern.
dlgScConflictSolverAdd.inf"Define the file pattern \(e.g. \*.txt\) and select the merge tool which should be used to resolve conflicting files matching this pattern."=\
 Define the file pattern \(e.g. \*.txt\) and select the merge tool which should be used to resolve conflicting files matching this pattern.
dlgScConflictSolverAdd.lbl"Valid wildcards are ?\u00a0\(one arbitrary character\) and \*\u00a0\(any number of arbitrary characters\). Separate multiple patterns by comma. Example:\u00a0\*.txt,\u00a0\*.html"=\
 有効なワイルドカードは下記のとおりです。複数のパターンはコンマで区切ります。\r例：*.txt,*.html \r ? (任意の1文字) \r * (任意の数の任意の文字)
dlgScConflictSolverAdd.mni"Base File"=Base File
dlgScConflictSolverAdd.mni"Encoding"=Encoding
dlgScConflictSolverAdd.mni"Left File"=Left File
dlgScConflictSolverAdd.mni"Left Title"=Left Title
dlgScConflictSolverAdd.mni"Merged File"=Merged File
dlgScConflictSolverAdd.mni"Merged Title"=Merged Title
dlgScConflictSolverAdd.mni"Right File"=Right File
dlgScConflictSolverAdd.mni"Right Title"=Right Title
dlgScConflictSolverAdd.rbt"Built-in Conflict Solver"=Built-in Conflict Solver
dlgScConflictSolverAdd.rbt"External Conflict Solver"=External Conflict Solver
dlgScConflictSolverAdd.tle=追加
dlgScConflictSolverEdit.edt"Arguments"=引数
dlgScConflictSolverEdit.edt"Command"=コマンド
dlgScConflictSolverEdit.edt"File Pattern"=ファイルパターン
dlgScConflictSolverEdit.hdl=Edit conflict solver
dlgScConflictSolverEdit.inf=Define the file pattern \(e.g. \*.txt\) and select the merge tool which should be used to resolve conflicting files matching this pattern.
dlgScConflictSolverEdit.inf"Define the file pattern \(e.g. \*.txt\) and select the merge tool which should be used to resolve conflicting files matching this pattern."=\
 Define the file pattern \(e.g. \*.txt\) and select the merge tool which should be used to resolve conflicting files matching this pattern.
dlgScConflictSolverEdit.lbl"Valid wildcards are ?\u00a0\(one arbitrary character\) and \*\u00a0\(any number of arbitrary characters\). Separate multiple patterns by comma. Example:\u00a0\*.txt,\u00a0\*.html"=\
 有効なワイルドカードは下記のとおりです。複数のパターンはコンマで区切ります。\r例：*.txt,*.html \r ? (任意の1文字) \r * (任意の数の任意の文字)
dlgScConflictSolverEdit.mni"Base File"=Base File
dlgScConflictSolverEdit.mni"Encoding"=Encoding
dlgScConflictSolverEdit.mni"Left File"=Left File
dlgScConflictSolverEdit.mni"Left Title"=Left Title
dlgScConflictSolverEdit.mni"Merged File"=Merged File
dlgScConflictSolverEdit.mni"Merged Title"=Merged Title
dlgScConflictSolverEdit.mni"Right File"=Right File
dlgScConflictSolverEdit.mni"Right Title"=Right Title
dlgScConflictSolverEdit.rbt"Built-in Conflict Solver"=Built-in Conflict Solver
dlgScConflictSolverEdit.rbt"External Conflict Solver"=External Conflict Solver
dlgScConflictSolverEdit.tle=編集
dlgScConflictSolverInconsistentLineEndings.fur=マージ対象のファイルは、異なる改行コードが混在しています。\r意図的に改行コードを混在させた場合は、上書き保存しないように注意してください。
dlgScConflictSolverInconsistentLineEndings.hdl=ファイルの改行コードが混在(矛盾)しています。
dlgScConflictSolverUnresolvedConflicts.chk=次回から警告しない
dlgScConflictSolverUnresolvedConflicts.fur=すべての競合が解決されたわけではありません。
dlgScConflictSolverUnresolvedConflicts.hdl=Conflict Solverを終了しますか？
dlgScConflictSolverUnresolvedConflicts.tle=Unresolved Conflicts
dlgScCustomizeAccelerators.btn"Assign"=割り当て
dlgScCustomizeAccelerators.btn"Clear"=クリア
dlgScCustomizeAccelerators.btn"Reset"=リセット
dlgScCustomizeAccelerators.col"Accelerator"=Accelerator
dlgScCustomizeAccelerators.col"Default"=デフォルト
dlgScCustomizeAccelerators.col"Menu Item"=Menu Item
dlgScCustomizeAccelerators.edt"Accelerator"=Accelerator
dlgScCustomizeAccelerators.hdl=Customize Accelerators
dlgScCustomizeAccelerators.inf=Double click on the menu item for which the accelerator should be changed, then press the accelerator keys and click the Assign button.
dlgScCustomizeAccelerators.tle=カスタマイズ
dlgScCustomizeToolBar.btn"Add"=追加
dlgScCustomizeToolBar.btn"Remove"=除去
dlgScCustomizeToolBar.chk"Show text below icon"=Show text below icon
dlgScCustomizeToolBar.col"Available"=Available
dlgScCustomizeToolBar.col"Selected"=Selected
dlgScCustomizeToolBar.tle=Configure Toolbar
dlgScDialogAssertionHandler.btn"Send Logs"=ログの送信
dlgScDialogAssertionHandler.edt"Email"=電子メール
dlgScDialogAssertionHandler.edt"Optional comments or steps to reproduce \(in case you still recall\)"=\
 Optional comments or steps to reproduce \(in case you still recall\)
dlgScDialogAssertionHandler.tle=Native Crash Logs
dlgScDialogAssertionHandlerLinkageError.btn"Copy"=コピー
dlgScDialogAssertionHandlerLinkageError.btn"Force Exit"=強制終了
dlgScDialogAssertionHandlerLinkageError.lbl"SmartGit has detected inconsistencies within its installation files \(JAR files\), what has most likely been caused by a faulty installation.\n\nPlease uninstall SmartGit completely, make sure there are no more installation files left \(especially JAR files\), then reinstall.\n\nIf the problem persists, send following log file as an attachment to smartgit@syntevo.com."=\
 SmartGit has detected inconsistencies within its installation files \(JAR files\), what has most likely been caused by a faulty installation.\n\nPlease uninstall SmartGit completely, make sure there are no more installation files left \(especially JAR files\), then reinstall.\n\nIf the problem persists, send following log file as an attachment to smartgit@syntevo.com.
dlgScDialogAssertionHandlerLinkageError.tle=Internal Error
dlgScExternalFileStarterCommandNoFile.fur=Be sure to add arguments to the appropriate input field.
dlgScExternalFileStarterCommandNoFile.hdl=The specified command is no file.
dlgScExternalFileStarterCommandNoFile.tle=Input Validation
dlgScFileComparatorAdd.edt"Arguments"=引数
dlgScFileComparatorAdd.edt"Command"=コマンド
dlgScFileComparatorAdd.edt"File Pattern"=ファイルパターン
dlgScFileComparatorAdd.hdl=外部Diffツールの追加
dlgScFileComparatorAdd.inf=Define the file pattern \(e.g. \*.png\) and select the compare command which should be used to compare files matching the file pattern.
dlgScFileComparatorAdd.inf"Define the file pattern \(e.g. \*.png\) and select the compare command which should be used to compare files matching the file pattern."=\
 ファイルパターン（例：*.png）を定義し、ファイルパターンに一致するファイルを比較するために使用する比較コマンドを選択します。
dlgScFileComparatorAdd.lbl"Valid wildcards are ?\u00a0\(one arbitrary character\) and \*\u00a0\(any number of arbitrary characters\). Separate multiple patterns by comma. Example:\u00a0\*.txt,\u00a0\*.html"=\
 有効なワイルドカードは下記のとおりです。複数のパターンはコンマで区切ります。\r例：*.txt,*.html \r ? (任意の1文字) \r * (任意の数の任意の文字)
dlgScFileComparatorAdd.mni"Base Encoding"=Base Encoding
dlgScFileComparatorAdd.mni"Base File"=Base File
dlgScFileComparatorAdd.mni"Base Title"=Base Title
dlgScFileComparatorAdd.mni"File"=ファイル
dlgScFileComparatorAdd.mni"Left Encoding"=Left Encoding
dlgScFileComparatorAdd.mni"Left File"=左のファイル
dlgScFileComparatorAdd.mni"Left Local File"=Left Local File
dlgScFileComparatorAdd.mni"Left Title"=Left Title
dlgScFileComparatorAdd.mni"Right Encoding"=Right Encoding
dlgScFileComparatorAdd.mni"Right File"=右のファイル
dlgScFileComparatorAdd.mni"Right Local File"=Right Local File
dlgScFileComparatorAdd.mni"Right Title"=Right Title
dlgScFileComparatorAdd.rbt"Built-in file compare"=Built-in file compare
dlgScFileComparatorAdd.rbt"External diff tool:"=外部Diffツール:
dlgScFileComparatorAdd.rbt"External viewer \(invoked for both compared files\):"=\
 External viewer \(invoked for both compared files\):
dlgScFileComparatorAdd.tle=追加
dlgScFileComparatorEdit.edt"Arguments"=引数
dlgScFileComparatorEdit.edt"Command"=コマンド
dlgScFileComparatorEdit.edt"File Pattern"=ファイルパターン
dlgScFileComparatorEdit.hdl=外部Diffツールの編集
dlgScFileComparatorEdit.inf=Define the file pattern \(e.g. \*.png\) and select the compare command which should be used to compare files matching the file pattern.
dlgScFileComparatorEdit.inf"Define the file pattern \(e.g. \*.png\) and select the compare command which should be used to compare files matching the file pattern."=\
 ファイルパターン（例：*.png）を定義し、ファイルパターンに一致するファイルを比較するために使用する比較コマンドを選択します。
dlgScFileComparatorEdit.lbl"Valid wildcards are ?\u00a0\(one arbitrary character\) and \*\u00a0\(any number of arbitrary characters\). Separate multiple patterns by comma. Example:\u00a0\*.txt,\u00a0\*.html"=\
 有効なワイルドカードは下記のとおりです。複数のパターンはコンマで区切ります。\r例：*.txt,*.html \r ? (任意の1文字) \r * (任意の数の任意の文字)
dlgScFileComparatorEdit.mni"Base Encoding"=Base Encoding
dlgScFileComparatorEdit.mni"Base File"=Base File
dlgScFileComparatorEdit.mni"Base Title"=Base Title
dlgScFileComparatorEdit.mni"File"=File
dlgScFileComparatorEdit.mni"Left Encoding"=Left Encoding
dlgScFileComparatorEdit.mni"Left File"=Left File
dlgScFileComparatorEdit.mni"Left Local File"=Left Local File
dlgScFileComparatorEdit.mni"Left Title"=Left Title
dlgScFileComparatorEdit.mni"Right Encoding"=Right Encoding
dlgScFileComparatorEdit.mni"Right File"=Right File
dlgScFileComparatorEdit.mni"Right Local File"=Right Local File
dlgScFileComparatorEdit.mni"Right Title"=Right Title
dlgScFileComparatorEdit.rbt"Built-in file compare"=Built-in file compare
dlgScFileComparatorEdit.rbt"External diff tool:"=外部Diffツール:
dlgScFileComparatorEdit.rbt"External viewer \(invoked for both compared files\):"=\
 External viewer \(invoked for both compared files\):
dlgScFileComparatorEdit.tle=編集
dlgScFileCompareFileChanged.btn"Discard"=破棄
dlgScFileCompareFileChanged.btn"Save"=保存
dlgScFileCompareFileChanged.fur=保存しない場合、変更内容が失われます。
dlgScFileCompareFileChanged.hdl=変更内容を保存しますか？
dlgScFileCompareFileChanged.tle=ファイルが変更されています
dlgScFileCompareSaveAll.btn"Save"=保存
dlgScFileCompareSaveAll.chk"Left file"=左のファイル
dlgScFileCompareSaveAll.chk"Right file"=右のファイル
dlgScFileCompareSaveAll.hdl=ファイルの変更を保存
dlgScFileCompareSaveAll.inf=どのファイル内容を保存しますか?
dlgScFileCompareSaveAll.tle=変更を保存
dlgScFilePatternsEdit.edt"File Pattern"=ファイルパターン
dlgScFilePatternsEdit.hdl=Language: C#
dlgScFilePatternsEdit.inf=ファイルパターンは、ファイル言語を決定するために使用され、シンタックスカラーリングに使用されます。
dlgScFilePatternsEdit.lbl"Valid wildcards are ?\u00a0\(one arbitrary character\) and \*\u00a0\(any number of arbitrary characters\). Separate multiple patterns by comma. Example:\u00a0\*.txt,\u00a0\*.html"=\
 有効なワイルドカードは下記のとおりです。複数のパターンはコンマで区切ります。\r例：*.txt,*.html \r ? (任意の1文字) \r * (任意の数の任意の文字)
dlgScFilePatternsEdit.tle=File Patterns
dlgScFindAction.edt"Action name"=アクション名
dlgScFindAction.tle=コマンドを検索
dlgScHostKeyVerifier.btn"Accept"=Accept
dlgScHostKeyVerifier.btn"Reject"=Reject
dlgScHostKeyVerifier.edt"Fingerprint"=Fingerprint
dlgScHostKeyVerifier.edt"Server"=Server
dlgScHostKeyVerifier.fur=If you are unsure, contact your administrator.
dlgScHostKeyVerifier.hdl=Please confirm the SSH server fingerprint.
dlgScHostKeyVerifier.tle=SSH Server Verification
dlgScJiraCommitMessageSelect.btn"Refresh"=更新
dlgScJiraCommitMessageSelect.btn"Reset to default"=デフォルトにリセット
dlgScJiraCommitMessageSelect.btn"Select"=選択
dlgScJiraCommitMessageSelect.col"Fix Version"=Fix Version
dlgScJiraCommitMessageSelect.col"Key"=キー
dlgScJiraCommitMessageSelect.col"Status"=Status
dlgScJiraCommitMessageSelect.col"Summary"=Summary
dlgScJiraCommitMessageSelect.hdl=Select commit message by JIRA issue
dlgScJiraCommitMessageSelect.inf=The selected issue summary will be used as commit message.
dlgScJiraCommitMessageSelect.lbl"Enter the JQL-Queries which will be loaded in the specified order: every query on a new line, \$\{projects\} will be substituted by the JIRA project key\(s\) which is derived or explicitly specified in your .gitbugtraq file.\n\nYou can compose a JQL query directly in JIRA, using Issues\|Search and go to Advanced view there."=\
 Enter the JQL-Queries which will be loaded in the specified order: every query on a new line, \$\{projects\} will be substituted by the JIRA project key\(s\) which is derived or explicitly specified in your .gitbugtraq file.\n\nYou can compose a JQL query directly in JIRA, using Issues\|Search and go to Advanced view there.
dlgScJiraCommitMessageSelect.lbl"Load All Issues"=Load All Issues
dlgScJiraCommitMessageSelect.lbl"Query Configuration"=Query Configuration
dlgScJiraCommitMessageSelect.tle=Select Issue
dlgScJiraResolveIssue.btn"Don't Resolve"=Don't Resolve
dlgScJiraResolveIssue.btn"Resolve"=Resolve
dlgScJiraResolveIssue.edt"Resolution"=Resolution
dlgScJiraResolveIssue.edt"Summary"=Summary
dlgScJiraResolveIssue.hdl%1=Resolve issue $1
dlgScJiraResolveIssue.inf=Select whether to resolve this issue and for which version to mark as resolved.
dlgScJiraResolveIssue.tle=Resolve JIRA Issue
dlgScMasterPasswordChange.edt"Current Master Password"=現在のマスターパスワード
dlgScMasterPasswordChange.edt"New Master Password"=新しいマスターパスワード
dlgScMasterPasswordChange.edt"Retype New Master Password"=新しいマスターパスワードの再入力
dlgScMasterPasswordChange.hdl=マスターパスワードの変更・再設定
dlgScMasterPasswordChange.inf=マスターパスワードを変更する場合は、現在のパスワードを入力してください。マスターパスワードを使用しない場合は、新しいパスワードを空白にします。
dlgScMasterPasswordChange.lbl"When setting a new master password, all stored passwords and passphrases will be lost and need to be re-entered when required!"=\
 新しいマスターパスワードを設定すると、保存されているすべてのパスワードとパスフレーズが失われ、必要に応じて再入力する必要があります。
dlgScMasterPasswordChange.rbt"Change master password"=マスターパスワードの変更
dlgScMasterPasswordChange.rbt"Set new master password"=新しいマスターパスワードの設定
dlgScMasterPasswordChange.tle=マスターパスワードの変更
dlgScMasterPasswordCreate.edt"Master Password"=マスターパスワード
dlgScMasterPasswordCreate.edt"Retype Again"=Retype Again
dlgScMasterPasswordCreate.hdl=暗号化されたパスワードストアのマスターパスワードを設定する
dlgScMasterPasswordCreate.inf=マスターパスワードは、サーバーとの認証に使用されるパスワードやパスフレーズを保護するために使用されます。
dlgScMasterPasswordCreate.lbl"Not using a master password makes your passwords and passphrases readable for everyone who has access to the password file located at $1. Use this option only if you are sure that this file is safe."=\
 マスターパスワードを使用しないと、$1にあるパスワードファイルにアクセスできるすべての人が、パスワードやパスフレーズを読むことができます。
dlgScMasterPasswordCreate.lbl"This master password is case-sensitive and should contain lowercase and uppercase characters, digits and other characters. Longer passwords are in general more secure than shorter ones."=\
 このマスターパスワードは、大文字と小文字を区別し、小文字、大文字、数字、その他の文字を含む必要があります。一般的に、長いパスワードは短いパスワードよりも安全です。
dlgScMasterPasswordCreate.rbt"Don't use a master password"=マスターパスワードを使用しない
dlgScMasterPasswordCreate.rbt"Use the following master password"=Use the following master password
dlgScMasterPasswordCreate.tle=マスターパスワード
dlgScMasterPasswordEnter.edt"Master Password"=マスターパスワード
dlgScMasterPasswordEnter.hdl=マスターパスワードの入力
dlgScMasterPasswordEnter.inf=保存されたパスワードまたはパスフレーズがパスワードストアから要求されました。
dlgScMasterPasswordEnter.tle=パスワード
dlgScPropertiesReset.btn"Reset"=リセット
dlgScPropertiesReset.fur=新しい値は、SmartGitを再起動すると有効になります。
dlgScPropertiesReset.hdl%1=Do you want to reset $1 system properties to their defaults?
dlgScPropertiesReset.tle=Reset Properties
dlgScPropertyEdit.edt"Value"=値
dlgScPropertyEdit.hdl=Edit low-level property value
dlgScPropertyEdit.inf%1=Set the value for property '$1'
dlgScPropertyEdit.rbt"false"=false
dlgScPropertyEdit.rbt"true"=true
dlgScPropertyEdit.tle=Edit Property
dlgScRegisterFormLicenseConfirmDetails.edt"Add-on"=アドオン
dlgScRegisterFormLicenseConfirmDetails.edt"Address"=住所
dlgScRegisterFormLicenseConfirmDetails.edt"Email"=電子メール
dlgScRegisterFormLicenseConfirmDetails.edt"Free Updates Until"=無料アップデート期間
dlgScRegisterFormLicenseConfirmDetails.edt"Name"=名前
dlgScRegisterFormLicenseConfirmDetails.edt"Support Until"=サポート期限
dlgScRegisterFormLicenseConfirmDetails.edt"User Count"=ユーザ数
dlgScRegisterFormLicenseConfirmDetails.tle=SmartGit License
dlgScRegisterFreeUpdatesExpiredLicense.btn"Purchase Update"=アップデートを購入
dlgScRegisterFreeUpdatesExpiredLicense.fur=古いバージョンのSmartGitを使用することもできますし、アップデートライセンスを購入することもできます。
dlgScRegisterFreeUpdatesExpiredLicense.hdl=The free update period for this license does not cover this version.
dlgScRegisterFreeUpdatesExpiredLicense.tle=SmartGit License
dlgScRegisterRequestRejected.fur=ライセンスサーバーが要求を拒否しました。電子メールで受け取った最新のライセンスファイルを手動で登録するか、後ほどもう一度お試しください。
dlgScRegisterRequestRejected.hdl=Failed to update license file.
dlgScRegisterRequestRejected.tle=SmartGit License
dlgScSetupLicense.btn"Configure Proxy"=プロキシ設定
dlgScSetupLicense.btn"Purchase Update"=アップデートを購入
dlgScSetupLicense.btn"Purchase"=購入
dlgScSetupLicense.btn"Register"=登録
dlgScSetupLicense.edt"License File"=ライセンスファイル
dlgScSetupLicense.hdl=ライセンスファイルを登録
dlgScSetupLicense.inf=購入後にメールで送られてきたSmartGitのライセンスファイルを指定してください。
dlgScSetupLicense.tle=SmartGit License
dlgScSetupLicenseNeedsRestart.btn"Exit Later"=後で終了
dlgScSetupLicenseNeedsRestart.btn"Restart Now"=今すぐ再起動
dlgScSetupLicenseNeedsRestart.fur=今すぐ、または後で手動で行うことができます。
dlgScSetupLicenseNeedsRestart.hdl=ライセンスの変更を有効にするには、SmartGitを再起動する必要があります。
dlgScSetupLicenseNeedsRestart.tle=SmartGit License
dlgScSpellCheckDictionaryAdd.hdl=スペルチェッカー辞書の追加
dlgScSpellCheckDictionaryAdd.inf=Specify the MySpell dictionary file to use, e.g. \*.dic from Mozilla Firefox' or Thunderbird's "dictionary" directory\). The name is used when switching between different dictionaries.
dlgScSpellCheckDictionaryAdd.tle=追加
dlgScSpellCheckDictionaryEdit.hdl=Edit spell checker dictionary
dlgScSpellCheckDictionaryEdit.inf=Specify the MySpell dictionary file to use, e.g. \*.dic from Mozilla Firefox' or Thunderbird's "dictionary" directory\). The name is used when switching between different dictionaries.
dlgScSpellCheckDictionaryEdit.tle=編集
dlgScSpellCheckDictionary(Add|Edit).edt"Dictionary File"=辞書ファイル
dlgScSpellCheckDictionary(Add|Edit).edt"Name"=名前
dlgScSpellCheckDictionary(Add|Edit).inf"Specify the MySpell dictionary file to use, e.g. \*.dic from Mozilla Firefox' or Thunderbird's \"dictionary\" directory\). The name is used when switching between different dictionaries."=\
 使用するMySpell辞書ファイルを指定します（例：Mozilla FirefoxまたはThunderbirdの「辞書」ディレクトリにある*.dic）\r名前は、異なる辞書を切り替える際に使用されます。
dlgScSslFingerprint.btn"Accept"=Accept
dlgScSslFingerprint.btn"Reject"=Reject
dlgScSslFingerprint.edt"SHA fingerprint"=SHA fingerprint
dlgScSslFingerprint.edt"Server"=サーバ
dlgScSslFingerprint.lbl"The server fingerprint has changed! Is the change correct?"=\
 The server fingerprint has changed! Is the change correct?
dlgScSslFingerprint.lbl"This might indicate a security problem! When in doubt, contact your server administrator."=\
 This might indicate a security problem! When in doubt, contact your server administrator.
dlgScSslFingerprint.tle=Server Fingerprint
dlgScTextComponentLineSeparator.btn"Select"=Select
dlgScTextComponentLineSeparator.hdl=Select Line-Endings
dlgScTextComponentLineSeparator.inf=Choose the line-endings to use for writing the file.
dlgScTextComponentLineSeparator.rbt"CR \(old Mac OS\)"=CR \(old Mac OS\)
dlgScTextComponentLineSeparator.rbt"CR+LF \(Windows\)"=CR+LF \(Windows\)
dlgScTextComponentLineSeparator.rbt"LF \(Unix, Mac OS X\)"=LF \(Unix, Mac OS X\)
dlgScTextComponentLineSeparator.tle=Line-Endings
dlgScTextFinderFindFromStart.btn"Find from Beginning"=Find from Beginning
dlgScTextFinderFindFromStart.fur=No occurrences have been found until the end of the document.
dlgScTextFinderFindFromStart.hdl=Do you want to continue from the beginning of the document?
dlgScTextFinderFindFromStart.tle=テキストの検索
dlgScTextFinderNothingFound.hdl=No \(more\) occurrences have been found.
dlgScTextFinderNothingFound.tle=テキストの検索
dlgScTextMultiComponentGoToLine.edt"Line Number"=行番号
dlgScTextMultiComponentGoToLine.tle=指定の行へ移動
dlgScTextMultiComponentSyntaxHighlightingSelection.tle=シンタックスハイライトの選択
dlgScTextReplace.btn"< Find"=< 検索
dlgScTextReplace.btn"Find >"=検索 >
dlgScTextReplace.btn"Replace"=置換
dlgScTextReplace.chk"Case-sensitive"=Case-sensitive
dlgScTextReplace.chk"Regular Expression search"=Regular Expression search
dlgScTextReplace.chk"Replace With:"=Replace With:
dlgScTextReplace.edt"Text to Find"=Text to Find
dlgScTextReplace.tle=検索と置換
dlgScTextSettings.chk"Coalesce nearby change blocks"=Coalesce nearby change blocks
dlgScTextSettings.chk"Split leading/trailing added or removed lines into separate blocks"=\
 Split leading/trailing added or removed lines into separate blocks
dlgScTextSettings.chk"Trim equal start/end of Inner-Line changes"=\
 Trim equal start/end of Inner-Line changes
dlgScTextSettings.edt"Inner-Line Comparison"=Inner-Line Comparison
dlgScTextSettings.edt"Show Whitespaces"=Show Whitespaces
dlgScTextSettings.edt"Show whitespaces"=空白文字を表示
dlgScTextSettings.edt"Tab Size"=タブサイズ(スペース文字数)
dlgScTextSettings.rbt"All"=全て
dlgScTextSettings.rbt"Alphanumeric words"=Alphanumeric words
dlgScTextSettings.rbt"C identifiers"=C identifiers
dlgScTextSettings.rbt"Character-based"=Character-based
dlgScTextSettings.rbt"Java identifiers"=Java identifiers
dlgScTextSettings.rbt"None"=なし
dlgScTextSettings.rbt"Off"=Off
dlgScTextSettings.rbt"Trailing and changed"=Trailing and changed
dlgScTextSettings.tab"Compare"=比較
dlgScTextSettings.tab"General"=一般
dlgScTextSettings.tle=設定
dlgScUpdateInstallationUpgrade.btn"Upgrade Now"=Upgrade Now
dlgScUpdateInstallationUpgrade.fur%1=The new version $1 has been downloaded which needs to be installed.
dlgScUpdateInstallationUpgrade.hdl=今すぐSmartGitをアップグレードしますか？
dlgScUpdateInstallationUpgrade.tle=Upgrade SmartGit
dlgSelectDiff.col"Command"=Command
dlgSelectDiff.hdl=Select the diff tool
dlgSelectDiff.inf=Select which matching diff tool should be used.
dlgSelectDiff.tle=File Compare
dlgSgAbortBisectingConfirm.btn"Abort Bisect"=Abort Bisect
dlgSgAbortBisectingConfirm.fur=Your working tree is in 'bisecting' state. You may abort it to get out of this state.\n\nAborting will checkout the branch or commit before starting bisect.
dlgSgAbortBisectingConfirm.hdl=Do you want to reset your working tree?
dlgSgAbortBisectingConfirm.tle=中断
dlgSgAbortCherryPickingConfirm.btn"Abort Cherry-Pick"=Abort Cherry-Pick
dlgSgAbortCherryPickingConfirm.fur=Your working tree is in 'cherry-picking' state. You may abort it to get out of this state and freshly start over with the cherry-picking afterwards.\n\nAborting will clean any local modification \(by invoking 'git reset --hard'\)!
dlgSgAbortCherryPickingConfirm.hdl=Do you want to reset your working tree?
dlgSgAbortCherryPickingConfirm.tle=中断
dlgSgAbortMergingConfirm.btn"Abort Merge"=マージを中止
dlgSgAbortMergingConfirm.fur=Your working tree is in 'merging' state. You may abort it to get out of this state and freshly start over with the merge afterwards.\n\nAborting will try to reconstruct the pre-merge state \(by invoking 'git merge --abort'\)!
dlgSgAbortMergingConfirm.hdl=Do you want to abort the current merge?
dlgSgAbortMergingConfirm.tle=破棄
dlgSgAbortRebasingConfirm.btn"Abort Rebase"=Abort Rebase
dlgSgAbortRebasingConfirm.fur=Your working tree is in 'rebasing' state. You may abort rebasing; if you just want to skip the current patch, use Branch \| Rebase \| Rebase HEAD To instead.\n\nAborting will clean any local modification \(by invoking 'git reset --hard'\)!
dlgSgAbortRebasingConfirm.hdl=Do you want to abort the rebasing?
dlgSgAbortRebasingConfirm.tle=破棄
dlgSgAbortRevertingConfirm.btn"Abort Revert"=Abort Revert
dlgSgAbortRevertingConfirm.fur=Your working tree is in 'reverting' state. You may abort it to get out of this state and freshly start over with the revert afterwards.\n\nAborting will clean any local modification \(by invoking 'git reset --hard'\)!
dlgSgAbortRevertingConfirm.hdl=Do you want to reset your working tree?
dlgSgAbortRevertingConfirm.tle=破棄
dlgSgAbout.btn"Register"=登録
dlgSgAbout.edt"Add-on"=アドオン
dlgSgAbout.edt"Address"=アドレス
dlgSgAbout.edt"Build Date"=Build Date
dlgSgAbout.edt"Email"=電子メール
dlgSgAbout.edt"Free Updates Until"=無料アップデート期間
dlgSgAbout.edt"Java Version"=Java Version
dlgSgAbout.edt"Maximum Heap"=Maximum Heap
dlgSgAbout.edt"Name"=名前
dlgSgAbout.edt"Settings Path"=Settings Path
dlgSgAbout.edt"Support Until"=サポート期限
dlgSgAbout.edt"User Count"=ユーザ数
dlgSgAbout.edt"Version"=Version
dlgSgAbout.tab"Credits"=Credits
dlgSgAbout.tab"Information"=Information
dlgSgAbout.tab"Licensee"=Licensee
dlgSgAbout.tle=SmartGitについて
dlgSgAuthenticationRemoveAllCredentials.btn"Remove All"=全て削除
dlgSgAuthenticationRemoveAllCredentials.fur=You will have to re-enter all authentication details.
dlgSgAuthenticationRemoveAllCredentials.hdl=既知の認証情報をすべて削除しますか？
dlgSgAuthenticationRemoveAllCredentials.tle=全て削除
dlgSgAuthenticationShowPassword.edt"Password"=パスワード
dlgSgBisectStartConfirm.btn"Start Bisect with Bad HEAD"=Start Bisect with Bad HEAD
dlgSgBisectStartConfirm.btn"Start Bisect"=Start Bisect
dlgSgBisectStartConfirm.fur=You need to mark 1 commit as good and 1 commit as bad before Git can start the binary search.
dlgSgBisectStartConfirm.hdl=Should the bisect be started with a bad commit?
dlgSgBisectStartConfirm.tle=Start Bisect
dlgSgBitbucketGenerateToken.edt"Code"=コード
dlgSgBitbucketGenerateToken.edt"Link"=リンク
dlgSgBitbucketGenerateToken.hdl=Enter the generated code
dlgSgBitbucketGenerateToken.inf=Authenticate at Bitbucket and enter the generated token
dlgSgBitbucketGenerateToken.lbl"Your browser should have opened automatically, let you authenticate with your preferred account at Bitbucket and grant access to SmartGit. If this didn't happen, manually open following link:"=\
 Your browser should have opened automatically, let you authenticate with your preferred account at Bitbucket and grant access to SmartGit. If this didn't happen, manually open following link:
dlgSgBitbucketGenerateToken.tle=Request Access Token
dlgSgBranchAddCheckout.btn"Add Branch && Checkout"=ブランチを追加しチェックアウト
dlgSgBranchAddCheckout.btn"Add Branch"=ブランチを追加
dlgSgBranchAddCheckout.edt"Branch"=ブランチ
dlgSgBranchAddCheckout.err"Choose a different branch, the current branch can't be used."=\
 Choose a different branch, the current branch can't be used.
dlgSgBranchAddCheckout.err"Enter the name of the local branch."=\
 ローカルブランチの名前を入力してください。
dlgSgBranchAddCheckout.err"The name must not end with a slash or dot."=\
 The name must not end with a slash or dot.
dlgSgBranchAddCheckout.hdl"Add branch at commit $1"=Add branch at commit $1
dlgSgBranchAddCheckout.hdl"Add branch at current HEAD commit"=\
 現在のHEADコミットにブランチを追加
dlgSgBranchAddCheckout.inf=作成するローカルブランチの名前を入力してください。
dlgSgBranchAddCheckout.tle=ブランチを追加
dlgSgBranchAddCheckoutOverwriteExisting.btn"Overwrite"=上書き
dlgSgBranchAddCheckoutOverwriteExisting.fur=Click 'Cancel' to choose a different branch name.
dlgSgBranchAddCheckoutOverwriteExisting.hdl%1=The branch '$1' already exists. Do you want to overwrite it?
dlgSgBranchAddCheckoutOverwriteExisting.tle=ブランチを追加
dlgSgBranchDeleteCurrentNotPossible.fur=By default, SmartGit disallows to delete the current branch. To skip this restriction, set low-level property 'branch.delete.allowToDeleteCurrentBranch'.
dlgSgBranchDeleteCurrentNotPossible.hdl=You can't delete the current branch.
dlgSgBranchDeleteCurrentNotPossible.tle=削除
dlgSgBranchDeleteLocalConfirmMultiple.btn"Delete"=削除
dlgSgBranchDeleteLocalConfirmMultiple.chk"Delete from remote repository"=Delete from remote repository
dlgSgBranchDeleteLocalConfirmMultiple.chk"Delete tracked branches"=Delete tracked branches
dlgSgBranchDeleteLocalConfirmMultiple.fur=It might be complicated to restore deleted branches.\n\nYou may only delete a branch from your local list of remote branches, but this may bring back the branch with the next fetch.
dlgSgBranchDeleteLocalConfirmMultiple.hdl%1=$1個のローカルブランチを削除しますか？
dlgSgBranchDeleteLocalConfirmMultiple.tle=削除
dlgSgBranchDeleteLocalConfirmSingle.btn"Delete"=削除
dlgSgBranchDeleteLocalConfirmSingle.chk"Delete from remote repository '$1'"=Delete from remote repository '$1'
dlgSgBranchDeleteLocalConfirmSingle.chk"Delete tracked branch '$1'"=Delete tracked branch '$1'
dlgSgBranchDeleteLocalConfirmSingle.fur=プッシュされていない変更が失われたり、ブランチの復元が複雑になったりする可能性があります。
dlgSgBranchDeleteLocalConfirmSingle.hdl%1=ローカルブランチ'$1'を削除しますか？
dlgSgBranchDeleteLocalConfirmSingle.tle=削除
dlgSgBranchDeleteRemoteConfirmSingle.btn"Delete"=削除
dlgSgBranchDeleteRemoteConfirmSingle.chk%1=Delete from remote '$1'
dlgSgBranchDeleteRemoteConfirmSingle.fur=You may only delete a branch from your local list of remote branches, but this may bring back the branch with the next fetch.
dlgSgBranchDeleteRemoteConfirmSingle.hdl%1=リモートブランチ'$1'を削除しますか？
dlgSgBranchDeleteRemoteConfirmSingle.tle=削除
dlgSgBranchTrackingResetConfirm.btn"Stop Tracking"=Stop Tracking
dlgSgBranchTrackingResetConfirm.fur=The necessary configuration will be performed in the .git/config file.
dlgSgBranchTrackingResetConfirm.tle=Stop Tracking
dlgSgBranchTrackingSetConfirm.btn"Configure"=設定
dlgSgBranchTrackingSetConfirm.fur=The necessary configuration will be performed in the .git/config file.
dlgSgBranchTrackingSetConfirm.hdl%2=Do you want to configure '$1' to track '$2'?
dlgSgBranchTrackingSetConfirm.tle=Set Tracked Branch
dlgSgBugReportSettings.btn"Exit"=終了
dlgSgBugReportSettings.chk"Automatically send 'crash footprints' after an internal error has occurred"=\
 内部エラー発生後、自動的に「クラッシュフットプリント」を送信
dlgSgBugReportSettings.err"Sending 'crash footprints' is required for preview builds, because their main purposes is to get as much as possible bugs reported and fixed before release."=\
 プレビュービルドには「クラッシュフットプリント」を送信する必要があります。\rこれは、プレビュービルドの主な目的が、リリース前にできるだけ多くのバグを報告して修正することであるためです。
dlgSgBugReportSettings.hdl=Crash Reporting
dlgSgBugReportSettings.inf=SmartGitの品質向上のために、機密情報を含まない「クラッシュフットプリント」を自動的に送信してください。このオプションは後から環境設定で変更することができます。
dlgSgBugReportSettings.lbl"A 'crash footprint' contains details about your machine \(e.g. version of operating system\), SmartGit's version/build number, the JVM state and where the internal error occurred.\n\nIt contains NO POTENTIALLY SENSITIVE INFORMATION like user names, email addresses, file contents, file paths or server names."=\
 クラッシュフットプリント」には、お客様のマシンの詳細（オペレーティングシステムのバージョンなど）、SmartGitのバージョン/ビルド番号、JVMの状態、内部エラーが発生した場所などが含まれていますが、ユーザー名、メールアドレス、ファイルの内容、ファイルパス、サーバー名などの機密情報は含まれていません。
dlgSgBugReportSettings.tle=SmartGit
dlgSgCheckoutFastForwardMerge.btn"Fast-Forward-Merge"=Fast-Forward マージ
dlgSgCheckoutFastForwardMerge.btn"Just Checkout"=Just Checkout
dlgSgCheckoutFastForwardMerge.fur=Fast-forward-merging automatically moves the branch forward to the tracked remote branch.
dlgSgCheckoutFastForwardMerge.hdl%1=Do you want to fast-forward-merge remote changes after checking out '$1'?
dlgSgCheckoutFastForwardMerge.tle=チェックアウト
dlgSgCheckoutLocalBranchConfirm.btn"Checkout"=チェックアウト
dlgSgCheckoutLocalBranchConfirm.chk=次回から表示しない
dlgSgCheckoutLocalBranchConfirm.fur%1=この操作により '$1' が現在のブランチになります。
dlgSgCheckoutLocalBranchConfirm.hdl%1=ブランチ '$1' をチェックアウトしますか？
dlgSgCheckoutLocalBranchConfirm.tle=チェックアウト
dlgSgCheckoutTarget.btn"Checkout"=チェックアウト
dlgSgCheckoutTarget.chk"Track remote branch '$1'"=Track remote branch '$1'
dlgSgCheckoutTarget.chk"Track remote branch"=Track remote branch
dlgSgCheckoutTarget.chk"Track remote branch:"=Track remote branch:
dlgSgCheckoutTarget.hdl"Check out commit"=コミットをチェックアウト
dlgSgCheckoutTarget.hdl"Check out remote branch"=リモートブランチをチェックアウト
dlgSgCheckoutTarget.hdl"Checkout commit"=Checkout commit
dlgSgCheckoutTarget.hdl"Checkout remote branch"=Checkout remote branch
dlgSgCheckoutTarget.inf=Be careful when checking out a commit instead of a local branch: commits on top of a commit can get lost easily.
dlgSgCheckoutTarget.rbt"Checkout local branch '$1'"=Checkout local branch '$1'
dlgSgCheckoutTarget.rbt"Checkout local branch:"=Checkout local branch:
dlgSgCheckoutTarget.rbt"Create local branch:"=ローカルブランチを作成:
dlgSgCheckoutTarget.rbt"Don't create local branch \(just work read-only\)"=\
 ローカルブランチを作成しない \(読み取り専用で作業\)
dlgSgCheckoutTarget.tle=チェックアウト
dlgSgCheckoutTarget.wrn"Be careful when checking out a commit instead of a local branch: commits on top of a commit can get lost easily."=\
 Be careful when checking out a commit instead of a local branch: commits on top of a commit can get lost easily.
dlgSgCheckoutTarget.wrn"Local branch '$1' is behind checkout target '$2'."=\
 Local branch '$1' is behind checkout target '$2'.
dlgSgCheckoutTarget.wrn"Local branch '$1' is diverged from checkout target '$2'."=\
 Local branch '$1' is diverged from checkout target '$2'.
dlgSgCheckoutTargetAlreadyExistsOverwrite.btn"Overwrite"=上書き
dlgSgCheckoutTargetAlreadyExistsOverwrite.fur=Click 'Cancel' to choose a different branch name.
dlgSgCheckoutTargetAlreadyExistsOverwrite.hdl%1=The branch '$1' already exists. Do you want to overwrite it?
dlgSgCheckoutTargetAlreadyExistsOverwrite.tle=チェックアウト
dlgSgCherryPickConfirmation.btn"Cherry-Pick && Commit"=Cherry-Pick && Commit
dlgSgCherryPickConfirmation.btn"Cherry-Pick"=チェリーピック
dlgSgCherryPickConfirmation.chk=Append source SHA to commit message
dlgSgCherryPickConfirmation.fur=This will cherry-pick the selected commit into the Working Tree.
dlgSgCherryPickConfirmation.hdl=Do you want to cherry-pick?
dlgSgCherryPickConfirmation.tle=チェリーピック
dlgSgCherryPickFailedBecauseOfConflicts.chk=次回から表示しない
dlgSgCherryPickFailedBecauseOfConflicts.fur=You may need to resolve the conflicts before proceeding.
dlgSgCherryPickFailedBecauseOfConflicts.hdl=Cherry-picking failed because of conflicts.
dlgSgCherryPickFailedBecauseOfConflicts.tle=チェリーピック
dlgSgCherryPickUnpushedCommits.btn"Cherry-Pick"=チェリーピック
dlgSgCherryPickUnpushedCommits.fur=At least one of the selected commits has not been pushed yet, hence cherry-pick is only local and won't be translated to SVN \(mergeinfo\).
dlgSgCherryPickUnpushedCommits.hdl=Do you want to cherry-pick unpushed commits?
dlgSgCherryPickUnpushedCommits.tle=チェリーピック
dlgSgClean.btn"Clean Working Tree"=Clean Working Tree
dlgSgClean.chk"Remove only ignored files"=Remove only ignored files
dlgSgClean.chk"Remove untracked directories"=Remove untracked directories
dlgSgClean.hdl=Remove untracked files
dlgSgClean.inf=Select which untracked files should be removed.
dlgSgClean.tle=Clean Working Tree
dlgSgClone.chk"Create upstream remote"=Create upstream remote
dlgSgClone.chk"Fetch all Heads and Tags"=Fetch all Heads and Tags
dlgSgClone.chk"Fetch all commits"=Fetch all commits
dlgSgClone.chk"Include Submodules"=Include Submodules
dlgSgClone.chk"Just initialize clone \(expert mode, not officially supported!\)"=\
 Just initialize clone \(expert mode, not officially supported!\)
dlgSgClone.chk"Map SVN trunk, tags and branches to Git"=\
 Map SVN trunk, tags and branches to Git
dlgSgClone.chk"Skip large files \(\"partial clone\"\)"=Skip large files \("partial clone"\)
dlgSgClone.edt"Check Out Branch"=ブランチをチェックアウト
dlgSgClone.edt"Fetch Only the Latest"=Fetch Only the Latest
dlgSgClone.edt"Fetch Only"=フェッチのみ
dlgSgClone.edt"Fetch only the latest"=Fetch only the latest
dlgSgClone.edt"Local Directory"=Local Directory
dlgSgClone.edt"Omit files larger than"=Omit files larger than
dlgSgClone.edt"Path"=Path
dlgSgClone.edt"Repository URL"=リポジトリ URL
dlgSgClone.err"Please select an empty, local directory for the new repository."=\
 Please select an empty, local directory for the new repository.
dlgSgClone.err"Please specify the URL of the remote repository to be cloned."=\
 Please specify the URL of the remote repository to be cloned.
dlgSgClone.err"Please specify the root directory of a local repository."=\
 Please specify the root directory of a local repository.
dlgSgClone.inf"Customize how and what to clone."=\
 Customize how and what to clone.
dlgSgClone.inf"Specify the Git or SVN repository to clone."=\
 Specify the Git or SVN repository to clone.
dlgSgClone.inf"Specify the Git, Mercurial or SVN repository to clone."=\
 Specify the Git, Mercurial or SVN repository to clone.
dlgSgClone.inf"Specify the local directory for the new repository."=\
 Specify the local directory for the new repository.
dlgSgClone.inf"Specify the repository to clone."=クローンを作成するリポジトリを指定します。
dlgSgClone.mni"Add Hosting Provider"=ホスティングプロバイダーを追加
dlgSgClone.rbt"Clone all revisions \(recommended\)"=Clone all revisions \(recommended\)
dlgSgClone.rbt"Clone from revision:"=Clone from revision:
dlgSgClone.rbt"Local Git or Mercurial repository"=Local Git or Mercurial repository
dlgSgClone.rbt"Local Git repository"=Local Git repository
dlgSgClone.rbt"Local repository"=ローカルリポジトリ
dlgSgClone.rbt"Remote Git or SVN repository"=Remote Git or SVN repository
dlgSgClone.rbt"Remote Git, Mercurial or SVN repository"=\
 Remote Git, Mercurial or SVN repository
dlgSgClone.rbt"Remote repository"=リモートリポジトリ
dlgSgClone.tle=クローン
dlgSgCloneRepositoryType.btn"Git"=Git
dlgSgCloneRepositoryType.btn"Mercurial"=Mercurial
dlgSgCloneRepositoryType.btn"SVN"=SVN
dlgSgCloneRepositoryType.fur=The specified URL protocol is ambiguous and may refer to different types of repositories.
dlgSgCloneRepositoryType.hdl=Select the type of repository you are going to clone.
dlgSgCloneRepositoryType.tle=クローン
dlgSgCloneSvnDetachedHeadSuccess.fur=SmartGit now continues to fetch all other revisions in the background. You may safely start working with the repository now; only log-related operations will be affected by this intermediate state.\n\nOnce SmartGit has finished the background part of the clone, it will let you know in the notifications area \(status bar\) and you can complete the clone there.
dlgSgCloneSvnDetachedHeadSuccess.hdl=HEAD revision has been successfully cloned.
dlgSgCloneSvnDetachedHeadSuccess.tle=クローン
dlgSgCommit.btn"Commit && Push"=コミット&&プッシュ
dlgSgCommit.btn"Commit"=コミット
dlgSgCommit.btn"Select from Log"=ログから選択
dlgSgCommit.btn"Select"=選択
dlgSgCommit.chk"Add 'Signed-off-by' signature"=コミットメッセージにSigned-off-by 署名を追加する
dlgSgCommit.chk"Amend last commit instead of creating new one"=\
 新規にコミットせず、前回のコミットを修正する
dlgSgCommit.chk"Amend last commit"=前回のコミットを修正
dlgSgCommit.chk"Bypass commit hook"=コミットフックをバイパスする
dlgSgCommit.col"Directory"=ディレクトリ
dlgSgCommit.col"Name"=名前
dlgSgCommit.edt"Commit Message"=コミットメッセージ
dlgSgCommit.edt"Create"=作成
dlgSgCommit.err"Enter a commit message describing \(the reason for\) the commit."=\
 Enter a commit message describing \(the reason for\) the commit.
dlgSgCommit.hdl=Commit local or staged changes
dlgSgCommit.inf=Select the files you want to commit and provide a commit message.
dlgSgCommit.lbl"More Options"=追加のオプション
dlgSgCommit.mni"Deselect All"=選択を解除
dlgSgCommit.mni"JIRA"=JIRA
dlgSgCommit.mni"Log"=ログ
dlgSgCommit.mni"Select All"=全選択
dlgSgCommit.mni"Select from Log"=ログから選択
dlgSgCommit.mni"Show Changes"=比較する
dlgSgCommit.mni"Toggle"=トグル
dlgSgCommit.rbt"Local Changes"=Local Changes
dlgSgCommit.rbt"Merge commit \(multiple parents\)"=Merge commit \(multiple parents\)
dlgSgCommit.rbt"Simple commit \(one parent, \"squash\"\)"=Simple commit \(one parent, "squash"\)
dlgSgCommit.rbt"Staged Changes"=Staged Changes
dlgSgCommit.tle=コミット
dlgSgCommit.wrn"All staged changes have been selected for commit, as this is necessary in 'Reverting' state."=\
 All staged changes have been selected for commit, as this is necessary in 'Reverting' state.
dlgSgCommit.wrn"When modifying or splitting a commit, you first need to commit all local changes before being able to continue the rebase."=\
 When modifying or splitting a commit, you first need to commit all local changes before being able to continue the rebase.
dlgSgCommitAmendAlreadyPushedCommit.btn"Amend"=修正する
dlgSgCommitAmendAlreadyPushedCommit.fur=プッシュしたコミットを修正した場合、後で強制的にプッシュする必要があります。\rこの場合、他のユーザーの変更を上書きしてしまう可能性があります。
dlgSgCommitAmendAlreadyPushedCommit.hdl=すでにプッシュされているコミットを修正しますか？
dlgSgCommitAmendAlreadyPushedCommit.tle=コミット
dlgSgCommitCantAmend.fur=Can't modify an already pushed commit. If you know what you are doing and want to enable it, select the option 'Allow modifying pushed commits' in the preferences.
dlgSgCommitCantAmend.hdl=Can't amend commit.
dlgSgCommitCantAmend.tle=コミット
dlgSgCommitContinueRebaseOrCreateAdditionalCommit.btn"Continue Rebase"=Continue Rebase
dlgSgCommitContinueRebaseOrCreateAdditionalCommit.btn"Create Commit"=コミットを作成
dlgSgCommitContinueRebaseOrCreateAdditionalCommit.fur=The repository is in 'rebasing' state. Instead of creating an additional commit as part of your rebased commits, you will usually just want continue the rebase.
dlgSgCommitContinueRebaseOrCreateAdditionalCommit.hdl=Do you want to continue the rebase or create an additional commit?
dlgSgCommitContinueRebaseOrCreateAdditionalCommit.tle=リベース
dlgSgCommitIndexAllWorkingTreeChanges.btn"Commit All Working Tree Changes"=作業ツリーの全ての変更をコミットする
dlgSgCommitIndexAllWorkingTreeChanges.chk=次回から表示しない
dlgSgCommitIndexAllWorkingTreeChanges.fur=まだステージングされていないファイルがあります。\r個々の変更をステージングするには、［キャンセル］をクリックしてください。\rそれ以外の場合は、作業ツリーの全ての変更がステージングされ、コミットされます。
dlgSgCommitIndexAllWorkingTreeChanges.hdl=すべての作業ツリーの変更をコミットしますか？
dlgSgCommitIndexAllWorkingTreeChanges.tle=コミット
dlgSgCommitIndexNoFilesFound.fur=Neither staged files nor locally changed files were found.
dlgSgCommitIndexNoFilesFound.hdl=There is nothing to commit.
dlgSgCommitIndexNoFilesFound.tle=コミット
dlgSgCommitNoFilesFoundNotAllowEmpty.fur=Neither staged files nor locally changed files were found.
dlgSgCommitNoFilesFoundNotAllowEmpty.hdl=There is nothing to commit.
dlgSgCommitNoFilesFoundNotAllowEmpty.tle=コミット
dlgSgCommitSelectMessageFromLog.btn"Branches"=ブランチ
dlgSgCommitSelectMessageFromLog.btn"Select"=選択
dlgSgCommitSelectMessageFromLog.chk"Add 'fixup!' prefix for easier automatic squashing using Interactive Rebase"=\
 Add 'fixup!' prefix for easier automatic squashing using Interactive Rebase
dlgSgCommitSelectMessageFromLog.hdl=Select a commit
dlgSgCommitSelectMessageFromLog.inf=Choose the commit whose message should be used.
dlgSgCommitSelectMessageFromLog.mni"Author"=Author
dlgSgCommitSelectMessageFromLog.mni"Branches and Tags"=Branches and Tags
dlgSgCommitSelectMessageFromLog.mni"Committer"=コミッタ
dlgSgCommitSelectMessageFromLog.mni"Copy ID"=IDをコピー
dlgSgCommitSelectMessageFromLog.mni"Copy Message"=メッセージをコピー
dlgSgCommitSelectMessageFromLog.mni"File Content \(very expensive\)"=File Content \(very expensive\)
dlgSgCommitSelectMessageFromLog.mni"File \(expensive\)"=File \(expensive\)
dlgSgCommitSelectMessageFromLog.mni"Forget Pattern"=Forget Pattern
dlgSgCommitSelectMessageFromLog.mni"ID"=ID
dlgSgCommitSelectMessageFromLog.mni"Message"=メッセージ
dlgSgCommitSelectMessageFromLog.mni"Refresh"=更新
dlgSgCommitSelectMessageFromLog.mni"Regular Expressions"=Regular Expressions
dlgSgCommitSelectMessageFromLog.mni"Remember Pattern"=Remember Pattern
dlgSgCommitSelectMessageFromLog.tle=Select Commit Message
dlgSgCommitToDetachedHead.btn"Commit Anyway"=Commit Anyway
dlgSgCommitToDetachedHead.fur=リポジトリの HEAD は現在、ブランチを指しておらず、コミット(SHA)を直接参照しています。コミットする際に、新しく作成したコミットはSHAでしか到達できないため、簡単に見失ってしまう可能性があります。今すぐコミットするのではなく、まず現在のHEADにブランチを作成し、その後にコミットしてください。
dlgSgCommitToDetachedHead.hdl=Do you want to commit to a detached HEAD?
dlgSgCommitToDetachedHead.tle=コミット
dlgSgCompareTwoFiles.btn"Compare with Each Other"=ファイル同士の比較
dlgSgCompareTwoFiles.btn"Compare with Repository"=リポジトリとの比較
dlgSgCompareTwoFiles.fur=ファイルはリポジトリの内容と比較したり、ファイル同士で比較することができます。
dlgSgCompareTwoFiles.hdl=選択された2つのファイルを比較しますか？
dlgSgCompareTwoFiles.tle=比較
dlgSgConflictSolverStageForCommit.btn"Don't Stage"=Don't Stage
dlgSgConflictSolverStageForCommit.btn"Stage"=ステージ
dlgSgConflictSolverStageForCommit.fur=Staging is necessary to resolve the file's conflict status.
dlgSgConflictSolverStageForCommit.hdl=Do you want to stage the file for commit now?
dlgSgConflictSolverStageForCommit.tle=Stage for Commit
dlgSgCustomizeProjectUi.btn"Add"=追加
dlgSgCustomizeProjectUi.btn"Assign"=割り当て
dlgSgCustomizeProjectUi.btn"Clear"=クリア
dlgSgCustomizeProjectUi.btn"Remove"=除去
dlgSgCustomizeProjectUi.btn"Reset"=リセット
dlgSgCustomizeProjectUi.chk"Show text below icon"=Show text below icon
dlgSgCustomizeProjectUi.col"Accelerator"=Accelerator
dlgSgCustomizeProjectUi.col"Available"=Available
dlgSgCustomizeProjectUi.col"Default"=デフォルト
dlgSgCustomizeProjectUi.col"Menu Item"=Menu Item
dlgSgCustomizeProjectUi.col"Selected"=Selected
dlgSgCustomizeProjectUi.edt"Accelerator"=Accelerator
dlgSgCustomizeProjectUi.mni"Regular Expressions"=Regular Expressions
dlgSgCustomizeProjectUi.tab"Accelerators"=Accelerators
dlgSgCustomizeProjectUi.tab"Toolbar"=Toolbar
dlgSgCustomizeProjectUi.tle=カスタマイズ
dlgSgDeleteFileTrash.hdl%1='$1'を削除しますか？
dlgSgDeleteFilesTrash.hdl%1=選択した$1個のファイルを削除しますか？
dlg(SgDeleteFileTrash|SgDeleteFilesTrash).btn"Delete"=削除
dlg(SgDeleteFileTrash|SgDeleteFilesTrash).btn"Move to Trash"=ゴミ箱へ移動
dlg(SgDeleteFileTrash|SgDeleteFilesTrash).fur=「削除」をクリックすると、削除されたファイルを復元するためにファイル復元ツールが必要になる場合があります。
dlg(SgDeleteFileTrash|SgDeleteFilesTrash).tle=削除
dlgSgDiscard.btn"Discard to Stash"=Discard to Stash
dlgSgDiscard.btn"Discard"=破棄
dlgSgDiscard.col"Directory"=ディレクトリ
dlgSgDiscard.col"Name"=名前
dlgSgDiscard.edt"Revert to"=Revert to
dlgSgDiscard.hdl=Discard local or staged changes
dlgSgDiscard.inf=Select the files for which changes should be discarded and whether to set them back to Index or HEAD state.
dlgSgDiscard.rbt"HEAD"=HEAD
dlgSgDiscard.rbt"Index"=Index
dlgSgDiscard.tle=破棄
dlgSgDiscardNoFilesFound.fur=Neither staged files nor locally changed files were found.
dlgSgDiscardNoFilesFound.hdl=There is nothing to discard.
dlgSgDiscardNoFilesFound.tle=破棄
dlgSgDiscardRevertToHead.hdl%1=Do you want to reset $1 files back to their HEAD state?
dlgSgDiscardRevertToIndex.hdl%1=Do you want to reset $1 files back to their Index state?
dlgSgDiscardRevertTo(Head|Index).btn"Discard"=破棄
dlgSgDiscardRevertTo(Head|Index).fur=The content might be hard to restore!
dlgSgDiscardRevertTo(Head|Index).tle=破棄
dlgSgErrorUtilsClientException.fur=リモートリポジトリから読み取れませんでした。
dlgSgErrorUtilsClientException.fur"Commit '$1' was not found in repository."=\
 Commit '$1' was not found in repository.
dlgSgErrorUtilsClientException.fur"Could not determine URL for submodule $1. Is it correctly initialized?"=\
 Could not determine URL for submodule $1. Is it correctly initialized?
dlgSgErrorUtilsClientException.fur"Repository '$1' is not valid."=Repository '$1' is not valid.
dlgSgErrorUtilsClientException.fur"svn: $1"=svn: $1
dlgSgErrorUtilsClientException.hdl=コマンドの実行に失敗しました。
dlgSgErrorUtilsClientException.tle=コマンドの失敗
dlgSgExitConfirmation.btn"Exit Now"=終了する
dlgSgExitConfirmation.chk=次回から表示しない
dlgSgExitConfirmation.fur=最後のウィンドウを閉じることで、SmartGitが終了します。
dlgSgExitConfirmation.hdl=SmartGitを終了しますか？
dlgSgExitConfirmation.tle=終了
dlgSgFileCompareNoChanges.btn"Open"=開く
dlgSgFileCompareNoChanges.chk=次回から表示しない
dlgSgFileCompareNoChanges.fur=ファイルの内容を確認するには、「開く」をクリックしてください。
dlgSgFileCompareNoChanges.hdl=Open the file compare though no changes will be shown?
dlgSgFileCompareNoChanges.tle=ファイルの比較
dlgSgFindObject.edt"Repository Path, Commit ID or Ref"=\
 Repository Path, Commit ID or Ref
dlgSgFindObject.tle=オブジェクトを検索
dlgSgFlowBranchDivergedHandlerFastForward.btn"Fast-Forward"=Fast-Forward
dlgSgFlowBranchDivergedHandlerFastForward.fur%3=The local branch '$1' is behind its tracked branch '$2'. You may fast-forward now or do it manually later, e.g. by checking out the branch '$3'.
dlgSgFlowBranchDivergedHandlerFastForward.hdl%2=Should branch '$1' be fast-forwarded to '$2'?
dlgSgFlowBranchDivergedHandlerFastForward.tle=Start Feature
dlgSgFlowBranchDivergedHandlerReplaceRemote.btn"Replace"=置換
dlgSgFlowBranchDivergedHandlerReplaceRemote.fur%2=The local branch '$1' seems to contain more recent but rewritten commits of remote branch '$2'.\n\nIf you are not sure whether the local branch is actually more recent than the remote branch, you should better cancel this operation and investigate local and remote changes in more detail.
dlgSgFlowBranchDivergedHandlerReplaceRemote.hdl%2=Should branch '$1' replace remote branch '$2'?
dlgSgFlowBranchDivergedHandlerReplaceRemote.tle=Finish Feature
dlgSgFlowBranchDivergedHandlerResetToRemote.btn"Reset"=リセット
dlgSgFlowBranchDivergedHandlerResetToRemote.fur%2=The remote branch '$1' seems to contain more recent but rewritten commits of local branch '$2'.\n\nIf you are not sure whether the remote branch is actually more recent than the local branch, you should better cancel this operation and investigate local and remote changes in more detail.
dlgSgFlowBranchDivergedHandlerResetToRemote.hdl%2=Should branch '$1' be reset to remote branch '$2'?
dlgSgFlowBranchDivergedHandlerResetToRemote.tle=Finish Feature
dlgSgFlowConfigure.btn"Reset to Defaults"=デフォルトにリセット
dlgSgFlowConfigure.edt"Develop Branch"=Develop Branch
dlgSgFlowConfigure.edt"Feature Branches"=Feature Branches
dlgSgFlowConfigure.edt"Git-Flow Type"=Git-Flow Type
dlgSgFlowConfigure.edt"Hot-Fix Branches"=Hot-Fix Branches
dlgSgFlowConfigure.edt"Main Development Branch"=Main Development Branch
dlgSgFlowConfigure.edt"Master Branch"=Master Branch
dlgSgFlowConfigure.edt"Prefix for Feature Branches"=Prefix for Feature Branches
dlgSgFlowConfigure.edt"Release Branches"=Release Branches
dlgSgFlowConfigure.edt"Remote"=リモート
dlgSgFlowConfigure.edt"Support Branches"=Support Branches
dlgSgFlowConfigure.edt"Version Tags"=Version Tags
dlgSgFlowConfigure.hdl=Configure the branch naming scheme
dlgSgFlowConfigure.inf=Configure how your feature, release and hotfix branches should be named.
dlgSgFlowConfigure.rbt"Full \(feature, release, hotfix, support branches\)"=\
 Full \(feature, release, hotfix, support branches\)
dlgSgFlowConfigure.rbt"Light \(just feature branches\)"=Light \(just feature branches\)
dlgSgFlowConfigure.tle=Git-Flowの設定
dlgSgFlowConfigureChangeOrSwitchOff.btn"Change Configuration"=Change Configuration
dlgSgFlowConfigureChangeOrSwitchOff.btn"Switch-Off Git-Flow"=Switch-Off Git-Flow
dlgSgFlowConfigureChangeOrSwitchOff.fur=Git-Flow is already configured for this repository. You may change the Git-Flow configuration or switch-off the Git-Flow features. In both cases, the file ~/.git/config will be modified accordingly.
dlgSgFlowConfigureChangeOrSwitchOff.hdl=Do you want to change or switch-off the Git-Flow configuration?
dlgSgFlowConfigureChangeOrSwitchOff.tle=Git-Flowの設定
dlgSgFlowFeatureFinish.btn"Finish"=完了
dlgSgFlowFeatureFinish.btn"Select from Log"=ログから選択
dlgSgFlowFeatureFinish.btn"Select"=選択
dlgSgFlowFeatureFinish.chk"Delete feature branch"=Delete feature branch
dlgSgFlowFeatureFinish.chk"Fetch latest commits and remove remote feature branch"=\
 Fetch latest commits and remove remote feature branch
dlgSgFlowFeatureFinish.edt"Commit Message"=コミットメッセージ
dlgSgFlowFeatureFinish.hdl=Finish current feature
dlgSgFlowFeatureFinish.inf"Choose how to finish the current feature. This operation will integrate the feature into the '$1' branch."=\
 Choose how to finish the current feature. This operation will integrate the feature into the '$1' branch.
dlgSgFlowFeatureFinish.inf"Choose how to finish the feature branch '$1'. This operation will integrate the feature into the '$2' branch."=\
 Choose how to finish the feature branch '$1'. This operation will integrate the feature into the '$2' branch.
dlgSgFlowFeatureFinish.mni"JIRA"=JIRA
dlgSgFlowFeatureFinish.mni"Log"=ログ
dlgSgFlowFeatureFinish.rbt"Create merge commit"=マージコミットを作成
dlgSgFlowFeatureFinish.rbt"Create simple commit \(squash\)"=Create simple commit \(squash\)
dlgSgFlowFeatureFinish.rbt"Rebase onto '$1'"=Rebase onto '$1'
dlgSgFlowFeatureFinish.tle=Finish Feature
dlgSgFlowFeatureStart.btn"Start"=開始
dlgSgFlowFeatureStart.edt"Base"=ベース
dlgSgFlowFeatureStart.edt"Feature Name"=Feature Name
dlgSgFlowFeatureStart.err"A feature with this name already exists. Choose a different name."=\
 この名前のfeatureはすでに存在しています。別の名前を選択してください。
dlgSgFlowFeatureStart.err"Invalid feature name: The name must not end with a slash or dot."=\
 Invalid feature name: The name must not end with a slash or dot.
dlgSgFlowFeatureStart.hdl=Start a new feature
dlgSgFlowFeatureStart.inf%1=Enter the name of the new feature branch. This operation will fork a new branch from the '$1' branch.
dlgSgFlowFeatureStart.lbl"Resulting Branch: $1"=Resulting Branch: $1
dlgSgFlowFeatureStart.tle=Start Feature
dlgSgFlowHotfixFinish.btn"Finish"=完了
dlgSgFlowHotfixFinish.btn"Select from Log"=ログから選択
dlgSgFlowHotfixFinish.chk"Create version tag"=Create version tag
dlgSgFlowHotfixFinish.chk"Create version tag:"=Create version tag:
dlgSgFlowHotfixFinish.chk"Delete hotfix branch"=Delete hotfix branch
dlgSgFlowHotfixFinish.chk"Fetch latest '$1' commits"=Fetch latest '$1' commits
dlgSgFlowHotfixFinish.chk"Merge to develop"=develop にマージする
dlgSgFlowHotfixFinish.chk"Push results and remove remote hotfix branch"=\
 Push results and remove remote hotfix branch
dlgSgFlowHotfixFinish.edt"Commit Message"=コミットメッセージ
dlgSgFlowHotfixFinish.hdl=Finish a hotfix
dlgSgFlowHotfixFinish.inf"Choose how to finish the current hotfix. This operation will merge the hotfix into the '$1' and '$2' branches."=\
 Choose how to finish the current hotfix. This operation will merge the hotfix into the '$1' and '$2' branches.
dlgSgFlowHotfixFinish.inf"Choose how to finish the hotfix branch '$1'. This operation will merge the hotfix into the '$2' and '$3' branches."=\
 Choose how to finish the hotfix branch '$1'. This operation will merge the hotfix into the '$2' and '$3' branches.
dlgSgFlowHotfixFinish.inf"Choose how to finish the hotfix branch '$1'."=\
 Choose how to finish the hotfix branch '$1'.
dlgSgFlowHotfixFinish.tle=Finish Hotfix
dlgSgFlowHotfixStart.btn"Start"=開始
dlgSgFlowHotfixStart.chk"Fetch from '$1' branch"=Fetch from '$1' branch
dlgSgFlowHotfixStart.chk"Fetch from base branch"=Fetch from base branch
dlgSgFlowHotfixStart.edt"Base"=ベース
dlgSgFlowHotfixStart.edt"Hotfix Name"=Hotfix Name
dlgSgFlowHotfixStart.hdl=Start a new hotfix
dlgSgFlowHotfixStart.inf%1=Enter the name of the new hotfix branch. This operation will fork a new branch from the '$1' branch.
dlgSgFlowHotfixStart.lbl"Resulting Branch: $1"=Resulting Branch: $1
dlgSgFlowHotfixStart.tle=Start Hotfix
dlgSgFlowIntegrateDevelop.btn"Integrate"=Integrate
dlgSgFlowIntegrateDevelop.chk"Fetch latest '$1' commits from remote repository"=\
 Fetch latest '$1' commits from remote repository
dlgSgFlowIntegrateDevelop.hdl%1=Integrate commits from '$1'
dlgSgFlowIntegrateDevelop.inf"Merge or rebase commits from the main development line to the current feature."=\
 Merge or rebase commits from the main development line to the current feature.
dlgSgFlowIntegrateDevelop.inf"Merge or rebase commits from the main development line to the feature branch '$1'."=\
 Merge or rebase commits from the main development line to the feature branch '$1'.
dlgSgFlowIntegrateDevelop.rbt"Merge from '$1'"='$1' からマージ
dlgSgFlowIntegrateDevelop.rbt"Rebase current feature onto '$1'"=Rebase current feature onto '$1'
dlgSgFlowIntegrateDevelop.tle=Integrate Develop
dlgSgFlowReleaseFinish.btn"Finish"=完了
dlgSgFlowReleaseFinish.btn"Select from Log"=ログから選択
dlgSgFlowReleaseFinish.chk"Create version tag"=Create version tag
dlgSgFlowReleaseFinish.chk"Create version tag:"=Create version tag:
dlgSgFlowReleaseFinish.chk"Delete release branch"=Delete release branch
dlgSgFlowReleaseFinish.chk"Fetch latest '$1' and '$2' commits"=\
 Fetch latest '$1' and '$2' commits
dlgSgFlowReleaseFinish.chk"Push results and remove remote release branch"=\
 Push results and remove remote release branch
dlgSgFlowReleaseFinish.edt"Commit Message"=コミットメッセージ
dlgSgFlowReleaseFinish.hdl=Finish a release
dlgSgFlowReleaseFinish.inf"Choose how to finish the release branch '$1'. This operation will merge the current release into the '$2' and '$3' branches."=\
 Choose how to finish the release branch '$1'. This operation will merge the current release into the '$2' and '$3' branches.
dlgSgFlowReleaseFinish.inf"Choose how to finish the release branch '$1'."=\
 Choose how to finish the release branch '$1'.
dlgSgFlowReleaseFinish.tle=Finish Release
dlgSgFlowReleaseStart.btn"Start"=開始
dlgSgFlowReleaseStart.chk"Fetch from base branch"=Fetch from base branch
dlgSgFlowReleaseStart.edt"Base"=ベース
dlgSgFlowReleaseStart.edt"Release Name"=Release Name
dlgSgFlowReleaseStart.hdl=Start a new release
dlgSgFlowReleaseStart.inf%1=Enter the name of the new release branch. This operation will fork a new branch from the '$1' branch.
dlgSgFlowReleaseStart.lbl"Resulting Branch: $1"=Resulting Branch: $1
dlgSgFlowReleaseStart.tle=Start Release
dlgSgGarbageCollector.btn"Run Garbage Collector"=ガベージコレクタ
dlgSgGarbageCollector.chk"Also prune recently created objects"=Also prune recently created objects
dlgSgGarbageCollector.chk"Expire reflog now \(will also delete stashes!\)"=\
 Expire reflog now \(will also delete stashes!\)
dlgSgGarbageCollector.chk"Optimize repository more aggressively \(may take a while\)"=\
 Optimize repository more aggressively \(may take a while\)
dlgSgGarbageCollector.hdl=ガベージコレクタ
dlgSgGarbageCollector.inf=Gitガベージコレクタを実行すると、到達できないオブジェクトが削除され、ローカルリポジトリが最適化されます。\rディスク消費量が削減され、パフォーマンスが向上します。
dlgSgGarbageCollector.tle=ガベージコレクタ
dlgSgGitHubGenerateToken.btn"Authenticate"=Authenticate
dlgSgGitHubGenerateToken.edt"Account"=アカウント
dlgSgGitHubGenerateToken.edt"Code"=コード
dlgSgGitHubGenerateToken.edt"Link"=リンク
dlgSgGitHubGenerateToken.edt"Password"=パスワード
dlgSgGitHubGenerateToken.hdl=GitHub用の新しいAPIトークンの生成
dlgSgGitHubGenerateToken.inf=OAuthまたは認証情報を用いてGitHubで認証します。
dlgSgGitHubGenerateToken.lbl"Your browser should have opened automatically, let you authenticate with your preferred account at GitHub and grant access to SmartGit. If this didn't happen, manually open following link:"=\
 ブラウザが自動的に起動し、GitHubのアカウントで認証され、SmartGitへのアクセスが許可されるはずです。認証されなかった場合は、手動で以下のリンクを開いてください。
dlgSgGitHubGenerateToken.rbt"Authenticate using OAuth \(recommended\)"=Authenticate using OAuth \(recommended\)
dlgSgGitHubGenerateToken.rbt"Authenticate with your GitHub account and password"=\
 Authenticate with your GitHub account and password
dlgSgGitHubGenerateToken.tle=APIトークンを生成
dlgSgGitHubPullRequestCreate.btn"Create"=作成
dlgSgGitHubPullRequestCreate.chk"Draft \(don\'t notify code owners yet\)"=\
 Draft \(don\'t notify code owners yet\)
dlgSgGitHubPullRequestCreate.edt"$1 \u21d2"=$1 \u21d2
dlgSgGitHubPullRequestCreate.edt"Title and Description"=Title and Description
dlgSgGitHubPullRequestCreate.hdl=プルリクエストを作成
dlgSgGitHubPullRequestCreate.inf=別のリポジトリやブランチにプルリクエストを送信します。
dlgSgGitHubPullRequestCreate.tle=プルリクエストを作成
dlgSgGitHubPullRequestMerge.btn"Merge"=マージ
dlgSgGitHubPullRequestMerge.btn"Select from Log"=ログから選択
dlgSgGitHubPullRequestMerge.edt"Commit Message"=コミットメッセージ
dlgSgGitHubPullRequestMerge.hdl=Merge a Pull Request
dlgSgGitHubPullRequestMerge.inf=選択したプルリクエストをどのようにマージしますか?
dlgSgGitHubPullRequestMerge.lbl"If you have integrated the Pull Request manually, choose this option to close the Pull Request on the server."=\
 If you have integrated the Pull Request manually, choose this option to close the Pull Request on the server.
dlgSgGitHubPullRequestMerge.lbl"If your are fine with the Pull Request changes, choose this option to perform the merge directly on the GitHub server."=\
 If your are fine with the Pull Request changes, choose this option to perform the merge directly on the GitHub server.
dlgSgGitHubPullRequestMerge.lbl"To locally check how a Pull Request integrates with the latest commits, choose this option."=\
 プルリクエストが最新のコミットとどのように統合されるかをローカルで確認するには、このオプションを選択します。
dlgSgGitHubPullRequestMerge.rbt"Mark as merged on GitHub Server"=\
 Mark as merged on GitHub Server
dlgSgGitHubPullRequestMerge.rbt"Merge on GitHub Server"=GitHub Serverでマージ
dlgSgGitHubPullRequestMerge.rbt"Merge to Local Repository"=ローカルリポジトリにマージ
dlgSgGitHubPullRequestMerge.tle=Merge Pull Request
dlgSgGitLabGenerateToken.edt"Link"=リンク
dlgSgGitLabGenerateToken.edt"Token"=トークン
dlgSgGitLabGenerateToken.hdl=Enter the generated token
dlgSgGitLabGenerateToken.inf=Authenticate at GitLab and enter the generated token.
dlgSgGitLabGenerateToken.lbl"Your browser should have opened automatically, let you authenticate with your preferred account at GitLab and grant access to SmartGit. If this didn't happen, manually open following link:"=\
 ブラウザが自動的に起動し、GitLabのアカウントで認証され、SmartGitへのアクセスが許可されるはずです。認証されなかった場合は、手動で次のリンクを開いてください。
dlgSgGitLabGenerateToken.tle=Request Access Token
dlgSgGitLabMergeRequestCreate.btn"Create"=作成
dlgSgGitLabMergeRequestCreate.edt"$1 \u21d2"=$1 \u21d2
dlgSgGitLabMergeRequestCreate.edt"Title and Description"=タイトルと説明
dlgSgGitLabMergeRequestCreate.hdl=マージリクエストを作成
dlgSgGitLabMergeRequestCreate.inf=別のリポジトリやブランチにマージリクエストを送信します。
dlgSgGitLabMergeRequestCreate.tle=マージリクエストを作成
dlgSgGitLabSettingsInvalidToken.fur=Use a Personal Access Token from your GitLab account.
dlgSgGitLabSettingsInvalidToken.hdl=Please enter a Personal Access Token for your GitLab account.
dlgSgGitLabSettingsInvalidToken.tle=Input Validation
dlgSgHeadMessageListenerReplaceMessage.btn"Don't Replace"=Don't Replace
dlgSgHeadMessageListenerReplaceMessage.btn"Replace This Time"=Replace This Time
dlgSgHeadMessageListenerReplaceMessage.chk=Never replace if a message is already entered
dlgSgHeadMessageListenerReplaceMessage.fur=コミットメッセージの入力欄が空の場合は、HEADのコミットメッセージが自動的に再利用されます。
dlgSgHeadMessageListenerReplaceMessage.hdl=Replace entered commit message with the HEAD commit's message?
dlgSgHeadMessageListenerReplaceMessage.tle=コミット
dlgSgHistoryEditAuthor.btn"Set Author"=作者を設定
dlgSgHistoryEditAuthor.edt"Email"=電子メール
dlgSgHistoryEditAuthor.edt"User Name"=ユーザ名
dlgSgHistoryEditAuthor.hdl=Authorを編集
dlgSgHistoryEditAuthor.inf=新しいコミットの作者とそのメールアドレスを入力します。
dlgSgHistoryEditAuthor.tle=Autherを編集
dlgSgHistoryEditChooseCommitMessage.btn"From Commit"=From Commit
dlgSgHistoryEditChooseCommitMessage.btn"From Failed Command"=From Failed Command
dlgSgHistoryEditChooseCommitMessage.fur=A previous Edit Commit Message command invocation failed for this commit. Decide whether to use the commit message from the failed run or the commit's message.
dlgSgHistoryEditChooseCommitMessage.hdl=Which commit message you like to use?
dlgSgHistoryEditChooseCommitMessage.tle=Edit Commit Message
dlgSgHistoryEditMessage.btn"Select from Log"=ログから選択
dlgSgHistoryEditMessage.btn"Select"=選択
dlgSgHistoryEditMessage.btn"Set Message"=メッセージをセットする
dlgSgHistoryEditMessage.edt"Commit Message"=コミットメッセージ
dlgSgHistoryEditMessage.hdl=コミットメッセージを編集
dlgSgHistoryEditMessage.inf=新しいコミットメッセージを入力します。
dlgSgHistoryEditMessage.mni"Copy"=Copy
dlgSgHistoryEditMessage.mni"Cut"=Cut
dlgSgHistoryEditMessage.mni"JIRA"=JIRA
dlgSgHistoryEditMessage.mni"Log"=ログ
dlgSgHistoryEditMessage.mni"Paste"=Paste
dlgSgHistoryEditMessage.tle=コミットメッセージを編集
dlgSgHistoryModifySplitConfirm.btn"Modify"=変更
dlgSgHistoryModifySplitConfirm.btn"Split"=Split
dlgSgHistoryModifySplitConfirm.fur='Modify' will stop after the commit.\n\n'Split' will put the changes into the Index. You may discard some changes that should go into the second commit.\n\nAfter you've done the changes, process the remaining commits by continuing the rebase.
dlgSgHistoryModifySplitConfirm.hdl%1=コミットした $1 を修正又は分割しますか?
dlgSgHistoryModifySplitConfirm.tle=Modify or Split Commit
dlgSgHistoryPushCommitsReplaceRemoteBranch.btn"Force Push"=強制プッシュ
dlgSgHistoryPushCommitsReplaceRemoteBranch.fur=リモートブランチへのプッシュは fast-forward できないので、強制的にプッシュする必要があります。リモートブランチでのコミットは失われます。
dlgSgHistoryPushCommitsReplaceRemoteBranch.hdl%1=Do you want to replace the remote branch by commit $1?
dlgSgHistoryPushCommitsReplaceRemoteBranch.tle=Push Up To
dlgSgHistoryPushCommitsUpToCommit.btn"Push"=プッシュ
dlgSgHistoryPushCommitsUpToCommit.fur=All commits up to the selected commit will be pushed to the remote repository.
dlgSgHistoryPushCommitsUpToCommit.hdl%1=Do you want to push changes up to commit $1?
dlgSgHistoryPushCommitsUpToCommit.tle=Push Up To
dlgSgHistoryPushedCommitsModifyPushedCommits.btn"Modify Pushed Commits"=既にプッシュされたコミットを修正する
dlgSgHistoryPushedCommitsModifyPushedCommits.fur=既にプッシュされているコミットは、他のユーザーにも知られており、そのユーザーが自分のコミットを構築する際に使用されている可能性があります。\rこのようなコミットを変更すると、後で予期せぬ衝突が起こる可能性があります。
dlgSgHistoryPushedCommitsModifyPushedCommits.hdl=既にプッシュされているコミットを修正しますか?
dlgSgHistoryPushedCommitsModifyPushedCommits.tle=Journal
dlgSgHistorySquash.btn"Select from Log"=ログから選択
dlgSgHistorySquash.btn"Select"=選択
dlgSgHistorySquash.btn"Squash Commits"=Squash Commits
dlgSgHistorySquash.edt"Authorship"=Authorship
dlgSgHistorySquash.edt"Commit Message"=コミットメッセージ
dlgSgHistorySquash.hdl=Squash multiple commits
dlgSgHistorySquash.inf=The selected commits will be replaced by one squashed commit containing all changes of the individual commits.
dlgSgHistorySquash.mni"JIRA"=JIRA
dlgSgHistorySquash.mni"Log"=ログ
dlgSgHistorySquash.tle=Squash Commits
dlgSgHostingProviderAdd.btn"Add"=追加
dlgSgHostingProviderAdd.btn"Generate API Token"=APIトークンを生成
dlgSgHostingProviderAdd.btn"Generate Token"=トークンを生成
dlgSgHostingProviderAdd.chk"Use OAuth token for repository authentication \(instead of password\)"=\
 リポジトリの認証に（パスワードではなく）OAuthトークンを使用する
dlgSgHostingProviderAdd.chk"Use SSH instead of HTTPS to access repositories"=\
 リポジトリへのアクセスにHTTPSではなくSSHを使用する
dlgSgHostingProviderAdd.chk"Use SSL client certificates \(usually not required\)"=\
 SSLクライアント証明書の使用（通常は必要ありません）
dlgSgHostingProviderAdd.chk"Use a GitHub Enterprise instance"=GitHub Enterpriseインスタンスの使用
dlgSgHostingProviderAdd.chk"Use a custom Azure DevOps server"=\
 Use a custom Azure DevOps server
dlgSgHostingProviderAdd.chk"Use a custom GitLab server"=カスタムGitLabサーバーの使用
dlgSgHostingProviderAdd.edt"Account"=アカウント
dlgSgHostingProviderAdd.edt"Certificate Password"=証明書のパスワード
dlgSgHostingProviderAdd.edt"Client Certificate"=Client Certificate
dlgSgHostingProviderAdd.edt"Domain"=Domain
dlgSgHostingProviderAdd.edt"Password"=パスワード
dlgSgHostingProviderAdd.edt"Server URL \(including collection\)"=Server URL \(including collection\)
dlgSgHostingProviderAdd.edt"Server URL"=サーバURL
dlgSgHostingProviderAdd.edt"Token"=トークン
dlgSgHostingProviderAdd.edt"User Name"=ユーザ名
dlgSgHostingProviderAdd.hdl=ホスティングプロバイダーの新規アカウント設定
dlgSgHostingProviderAdd.inf=新規アカウントを設定するホスティングプロバイダーを選択します。
dlgSgHostingProviderAdd.lbl"For example: https://azure.devops.server/DefaultCollection"=For example: https://azure.devops.server/DefaultCollection
dlgSgHostingProviderAdd.lbl"The \(API\) token is a special auto-generated credential which SmartGit will use to authenticate at GitHub. It adds another layer of security, as you can easily revoke access by removing the token from the GitHub front-end."=\
 APIトークンとは、SmartGitがGitHubでの認証に使用する、自動生成された特別なクレデンシャルです。\rこのトークンを GitHub のフロントエンドから削除すれば、簡単にアクセスを取り消すことができるので、もうひとつのセキュリティ層となります。
dlgSgHostingProviderAdd.lbl"The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your Azure DevOps account settings."=\
 The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your Azure DevOps account settings.
dlgSgHostingProviderAdd.lbl"The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your GitLab account settings."=\
 トークンには、自動生成された OAuth トークン (以下の 'トークンを生成' を使用します) か、あるいは GitLab のアカウント設定で自分で生成した 'personal access token' を使用します。
dlgSgHostingProviderAdd.lbl"Use the same login information as for the assembla website."=\
 Use the same login information as for the assembla website.
dlgSgHostingProviderAdd.lbl"Use the same login information as for the beanstalk website and make sure that for 'My Profile' - 'Account' - 'Account Settings' - 'Developer API' is enabled."=\
 Use the same login information as for the beanstalk website and make sure that for 'My Profile' - 'Account' - 'Account Settings' - 'Developer API' is enabled.
dlgSgHostingProviderAdd.lbl"Use the same login information as for the codebasehq website."=\
 Use the same login information as for the codebasehq website.
dlgSgHostingProviderAdd.lbl"Use the same login information as for the unfuddle website."=\
 Use the same login information as for the unfuddle website.
dlgSgHostingProviderAdd.tle=ホスティングプロバイダーを追加
dlgSgHostingProviderEdit.btn"Generate API Token"=APIトークンを生成
dlgSgHostingProviderEdit.btn"Generate Token"=トークンを生成
dlgSgHostingProviderEdit.chk"Use OAuth token for repository authentication \(instead of password\)"=\
 リポジトリの認証に（パスワードではなく）OAuthトークンを使用する
dlgSgHostingProviderEdit.chk"Use SSH instead of HTTPS to access repositories"=\
 リポジトリへのアクセスにHTTPSではなくSSHを使用する
dlgSgHostingProviderEdit.chk"Use a GitHub Enterprise instance"=GitHub Enterpriseインスタンスの使用
dlgSgHostingProviderEdit.chk"Use a custom GitLab server"=カスタムGitLabサーバーの使用
dlgSgHostingProviderEdit.edt"Certificate Password"=証明書のパスワード
dlgSgHostingProviderEdit.edt"Client Certificate"=Client Certificate
dlgSgHostingProviderEdit.edt"Name"=名前
dlgSgHostingProviderEdit.edt"Server URL"=サーバURL
dlgSgHostingProviderEdit.edt"Token"=トークン
dlgSgHostingProviderEdit.err"Please enter a Personal Access Token for your GitLab account."=\
 Please enter a Personal Access Token for your GitLab account.
dlgSgHostingProviderEdit.err"Please enter an OAuth 'refresh' token."=\
 Please enter an OAuth 'refresh' token.
dlgSgHostingProviderEdit.err"Please enter the API token."=Please enter the API token.
dlgSgHostingProviderEdit.err"Please specify the private key file."=\
 秘密鍵ファイルを指定してください。
dlgSgHostingProviderEdit.hdl%1=Configure $1 account
dlgSgHostingProviderEdit.inf%1=Please specify your credentials to connect to $1.
dlgSgHostingProviderEdit.lbl"The \(API\) token is a special auto-generated credential which SmartGit will use to authenticate at GitHub. It adds another layer of security, as you can easily revoke access by removing the token from the GitHub front-end."=\
 APIトークンとは、SmartGitがGitHubでの認証に使用する、自動生成された特別なクレデンシャルです。\rこのトークンを GitHub のフロントエンドから削除すれば、簡単にアクセスを取り消すことができるので、もうひとつのセキュリティ層となります。
dlgSgHostingProviderEdit.lbl"The token may either be an autogenerated OAuth-token \(use 'Generate Token' below\) or a 'personal access token' which you can generate yourself in your GitLab account settings."=\
 トークンには、自動生成された OAuth トークン (以下の 'トークンを生成' を使用します) か、あるいは GitLab のアカウント設定で自分で生成した 'personal access token' を使用します。
dlgSgHostingProviderEdit.tle=GitLab
dlgSgHostingProviderSelectRepository.btn"Select"=選択
dlgSgHostingProviderSelectRepository.col"Name"=名前
dlgSgHostingProviderSelectRepository.col"Namespace"=Namespace
dlgSgHostingProviderSelectRepository.col"Repository"=リポジトリ
dlgSgHostingProviderSelectRepository.tle=GitHub Projects
dlgSgHttpPasswordAuthenticationFailedCause1.fur%3=The OAuth-access token could not be requested. Most likely your $1 configuration has changed and SmartGit's stored OAuth credentials are invalid.\n\nTo resolve, recreate the $2 hosting provider in the Preferences.\n\nDetails:\n\n$3
dlgSgHttpPasswordAuthenticationFailedCause1.hdl%1=$1 OAuth認証に失敗しました
dlgSgHttpPasswordAuthenticationFailedCause1.tle=HTTP authentication
dlgSgHttpPasswordCredentials.btn"Login"=ログイン
dlgSgHttpPasswordCredentials.chk"Store password"=パスワードの保存
dlgSgHttpPasswordCredentials.edt"Password"=パスワード
dlgSgHttpPasswordCredentials.edt"User Name"=ユーザ名
dlgSgHttpPasswordCredentials.hdl%1=Login to '$1'
dlgSgHttpPasswordCredentials.inf=Provide the user name and password for authenticating to the repository.
dlgSgHttpPasswordCredentials.tle=ログイン
dlgSgIgnoreDirectoryConfirm.btn"Ignore"=無視
dlgSgIgnoreDirectoryConfirm.edt"Ignore File"=Ignore File
dlgSgIgnoreDirectoryConfirm.fur=このディレクトリ名は、.ignore ファイルに追加されます。 .ignore ファイルが存在しない場合は、作成されます。
dlgSgIgnoreDirectoryConfirm.hdl%1=ディレクトリ'$1'を無視しますか？
dlgSgIgnoreDirectoryConfirm.tle=無視
dlgSgIgnoreEdit.btn"Edit"=編集
dlgSgIgnoreEdit.hdl=Edit Git ignore file
dlgSgIgnoreEdit.inf=Select the Git ignore file to edit.
dlgSgIgnoreEdit.mni"Copy Path"=パスをコピー
dlgSgIgnoreEdit.mni"Reveal"=Reveal
dlgSgIgnoreEdit.tle=無視リストを編集
dlgSgIgnoreFile.btn"Ignore"=無視
dlgSgIgnoreFile.btn"Remove && Ignore"=Remove && Ignore
dlgSgIgnoreFile.edt"Ignore File"=Ignore File
dlgSgIgnoreFile.err"The pattern must match all selected file names. For instance, '$1' is not matched."=\
 The pattern must match all selected file names. For instance, '$1' is not matched.
dlgSgIgnoreFile.hdl=無視するファイルを指定する
dlgSgIgnoreFile.inf=選択したファイルだけを無視するか、指定したパターンに一致するすべてのファイルを無視するかを選択します。\r追跡されたファイルは以降のバージョン管理の対象から除外されます。
dlgSgIgnoreFile.lbl"Use ? to match a single or \* to match multiple arbitrary characters. The pattern will be saved in the .gitignore file of the same directory."=\
 単一の文字にマッチする場合は ? を、複数の任意の文字にマッチする場合は * を使用します。このパターンは、同じディレクトリの .gitignore ファイルに保存されます。
dlgSgIgnoreFile.rbt"Ignore as pattern \(e.g. '\*.obj'\):"=パターンで無視する \(例：\*.obj\):
dlgSgIgnoreFile.rbt"Ignore explicitly \(e.g. 'Makefile'\)"=明示的に無視する \(例：'Makefile'\)
dlgSgIgnoreFile.tle=無視
dlgSgIndexEditorSaveOrDiscard.btn"Discard"=破棄
dlgSgIndexEditorSaveOrDiscard.btn"Save"=保存
dlgSgIndexEditorSaveOrDiscard.fur=Your changes will be lost, if you don't save them now.
dlgSgIndexEditorSaveOrDiscard.hdl=変更内容を保存しますか？
dlgSgIndexEditorSaveOrDiscard.tle=閉じる
dlgSgJournalFormCommitCantBeModified.fur=Not part of your head's primary-parent history
dlgSgJournalFormCommitCantBeModified.hdl=At least one selected commit can't be modified.
dlgSgJournalFormCommitCantBeModified.tle=Autherを編集
dlgSgLfsInstallConfirm.btn"Install"=インストール
dlgSgLfsInstallConfirm.fur=This will configure hooks and filters required for LFS.
dlgSgLfsInstallConfirm.hdl=Would you like to initialize this repository for Large File Support \(LFS\)?
dlgSgLfsInstallConfirm.tle=LFS Install
dlgSgLfsTrack.edt"Pattern"=Pattern
dlgSgLfsTrack.err"File '$1' does not match the specified pattern."=\
 File '$1' does not match the specified pattern.
dlgSgLfsTrack.hdl=Mark a file or pattern as tracked
dlgSgLfsTrack.inf=Specify the file name pattern that should be handled by Large File Support \(LFS\).
dlgSgLfsTrack.tle=LFS Track
dlgSgLocalChangesFormTakeBlockListenerRevertWorkingTreeFile.btn"Revert"=Revert
dlgSgLocalChangesFormTakeBlockListenerRevertWorkingTreeFile.fur%1=You are about to apply lines from the Index to the working tree file '$1'. The modifications will be saved immediately.
dlgSgLocalChangesFormTakeBlockListenerRevertWorkingTreeFile.hdl=Do you really want to revert changes in the working tree file?
dlgSgLocalChangesFormTakeBlockListenerRevertWorkingTreeFile.tle=Revert Working Tree File
dlgSgLocalCommandHeadNotValid.fur=It's not possible to perform the requested operation without a valid HEAD.
dlgSgLocalCommandHeadNotValid.hdl=HEAD does not point to a valid commit.
dlgSgLocalCommandHeadNotValid.tle=Push
dlgSgLogCheckoutFileAs.btn"Save After"=Save After
dlgSgLogCheckoutFileAs.btn"Save Before"=Save Before
dlgSgLogCheckoutFileAs.edt"Target File"=ターゲットファイル
dlgSgLogCheckoutFileAs.hdl=Save the repository file
dlgSgLogCheckoutFileAs.inf"Select the local file to saved to."=\
 Select the local file to saved to.
dlgSgLogCheckoutFileAs.inf"Select whether to save the file state Before or After the selected commit."=\
 Select whether to save the file state Before or After the selected commit.
dlgSgLogCheckoutFileAs.tle=ファイルを別名で保存
dlgSgLogCommentDeleteConfirm.hdl%1=本当にコメント'$1'を削除しますか？
dlgSgLogCommentsDeleteConfirm.hdl%1=$1のコメントを本当に削除しますか？
dlgSgLogComment(|s)DeleteConfirm.btn"Delete Comment"=コミットを削除
dlgSgLogComment(|s)DeleteConfirm.fur=Comments can't be restored after deletion.
dlgSgLogComment(|s)DeleteConfirm.tle=Delete Comment
dlgSgLogCompareSelectedFilesAgainstEachOther.btn"Compare Separately"=Compare Separately
dlgSgLogCompareSelectedFilesAgainstEachOther.btn"Compare With Each Other"=ファイル同士の比較
dlgSgLogCompareSelectedFilesAgainstEachOther.fur=You may compare the selected files against each other or open up two separate compares for each file against its previous state.
dlgSgLogCompareSelectedFilesAgainstEachOther.hdl=Do you want to compare the selected files against each other?
dlgSgLogCompareSelectedFilesAgainstEachOther.tle=比較
dlgSgLogCompareWithWorkingTree.btn"Compare After"=後と比較
dlgSgLogCompareWithWorkingTree.btn"Compare Before"=前と比較
dlgSgLogCompareWithWorkingTree.edt"Working Tree File"=ワーキングツリーファイル
dlgSgLogCompareWithWorkingTree.hdl=リポジトリファイルとローカルファイルの比較
dlgSgLogCompareWithWorkingTree.inf=選択したコミットの前または後の状態のリポジトリファイルと比較するかどうかを選択します。
dlgSgLogCompareWithWorkingTree.tle=Compare with Working Tree
dlgSgLogGraphRootSwitch.chk"Include tracked remote branches"=Include tracked remote branches
dlgSgLogGraphRootSwitch.hdl=Select shown branches
dlgSgLogGraphRootSwitch.inf=Select the branches for which to show commits in the graph.
dlgSgLogGraphRootSwitch.tle=Select Branches
dlgSgLogOpenFailedRepository.fur=Is the repository still valid?
dlgSgLogOpenFailedRepository.hdl=Repository could not be opened.
dlgSgLogOpenFailedRepository.tle=ログ
dlgSgLogOpenFailedSubmodule.fur=Is the repository still valid?
dlgSgLogOpenFailedSubmodule.hdl=Submodule could not be opened.
dlgSgLogOpenFailedSubmodule.tle=ログ
dlgSgLogOpenNewWindow.btn"Existing Window"=既存のウィンドウ
dlgSgLogOpenNewWindow.btn"New Window"=新しいウィンドウ
dlgSgLogOpenNewWindow.fur=There is already an existing Log window which can be revealed.
dlgSgLogOpenNewWindow.hdl=Do you want to open a new Log window?
dlgSgLogOpenNewWindow.tle=ログ
dlgSgLogOpenSubmoduleLinkOrRepository.btn"History of Updates"=History of Updates
dlgSgLogOpenSubmoduleLinkOrRepository.btn"Submodule Log"=Submodule Log
dlgSgLogOpenSubmoduleLinkOrRepository.fur=サブモジュールの更新履歴には、親リポジトリから見たサブモジュールリンク ('GITLINK') の変更が表示されます。サブモジュールリポジトリのログには、サブモジュールリポジトリ自身で発生したすべてのコミットが表示されます。
dlgSgLogOpenSubmoduleLinkOrRepository.hdl=Do you want to show the history of submodule updates or the Log for the submodule repository?
dlgSgLogOpenSubmoduleLinkOrRepository.tle=ログを開く
dlgSgLogRefActionsDeleteConfirm.btn"Delete Branch"=ブランチを削除
dlgSgLogRefActionsDeleteConfirm.fur=プッシュされていない変更が失われたり、ブランチの復元が複雑になったりする可能性があります。
dlgSgLogRefActionsDeleteConfirm.hdl%1=本当にローカルブランチ'$1'を削除しますか？
dlgSgLogRefActionsDeleteConfirm.tle=Delete Local Branch
dlgSgLogRefreshRepositoryInvalid.btn"Close Repository"=Close Repository
dlgSgLogRefreshRepositoryInvalid.btn"Remove Repository"=Remove Repository
dlgSgLogRefreshRepositoryInvalid.fur%1=This could mean that the repository at\n\n$1was removed or renamed outside SmartGit.
dlgSgLogRefreshRepositoryInvalid.hdl%1=The opened repository '$1' became invalid.
dlgSgLogRefreshRepositoryInvalid.tle=更新
dlgSgMerge.btn"Branches"=ブランチ
dlgSgMerge.btn"Create Merge-Commit"=マージリクエストを作成
dlgSgMerge.btn"Merge to Working Tree"=作業ツリーへマージ
dlgSgMerge.hdl=マージ
dlgSgMerge.inf=マージするブランチやコミットを選択し、それらをどのように作業ツリーにマージするかを決定します。
dlgSgMerge.tle=マージ
dlgSgMergeHowToMerge.btn"Create Merge-Commit"=マージリクエストを作成
dlgSgMergeHowToMerge.btn"Fast-Forward"=Fast-Forward
dlgSgMergeHowToMerge.btn"Merge to Working Tree"=作業ツリーへマージ
dlgSgMergeHowToMerge.fur=Fast-forward merge は、現在のブランチ (HEAD) を選択されたコミットに進めることを意味します。\r別の方法として、マージコミットを作成したり、作業ツリーにマージしたりすることもできます。\r後者の場合、変更内容を確認し、後でマージコミットや通常の\(squash\)コミットを作成することができます。
dlgSgMergeHowToMerge.hdl%1=ブランチ '$1' からどのようにマージしますか?
dlgSgMergeHowToMerge.tle=マージ
dlgSgMergeNoop.fur=Merging a commit into itself is technically allowed by Git but it's a no-op and will not give a new commit nor any other meaningful changes.
dlgSgMergeNoop.hdl=There is nothing to merge.
dlgSgMergeNoop.tle=Merge
dlgSgOpenRepository.edt"Repository"=リポジトリ
dlgSgOpenRepository.err"Please specify the root directory of a Git or Mercurial repository."=\
 Please specify the root directory of a Git or Mercurial repository.
dlgSgOpenRepository.hdl=既存のリポジトリを追加、または新しいリポジトリを作成
dlgSgOpenRepository.inf=既存のリポジトリを追加する場合はローカルのGitまたはMercurialリポジトリを指定します。\r新規にリポジトリを作成する場合は、空のディレクトリを指定します。
dlgSgOpenRepository.tle=リポジトリの追加又は作成
dlgSgOpenRepositoryInitializeChooseVcs.btn"Git"=Git
dlgSgOpenRepositoryInitializeChooseVcs.btn"Mercurial"=Mercurial
dlgSgOpenRepositoryInitializeChooseVcs.fur=The specified directory does not appear to be a valid Git or Mercurial repository.
dlgSgOpenRepositoryInitializeChooseVcs.hdl=What VCS should be used to initialize 'swt'?
dlgSgOpenRepositoryInitializeChooseVcs.tle=リポジトリの追加又は作成
dlgSgOutput.chk"Don't show again for these $1 warnings"=\
 Don't show again for these $1 warnings
dlgSgOutput.chk"Don't show again for this warning"=\
 Don't show again for this warning
dlgSgOutput.lbl"Branches need merging first."=Branches need merging first.
dlgSgOutput.lbl"If in question, please ask your repository administrator."=\
 If in question, please ask your repository administrator.
dlgSgOutput.tle"Command Failed"=コマンドの失敗
dlgSgOutput.tle"Command Output"=Command Output
dlgSgOutput.tle"Command Succeeded"=Command Succeeded
dlgSgPingRepositoryFailed.fur%1=Please check the repository URL.\n\n$1
dlgSgPingRepositoryFailed.hdl%1=Could not connect to the repository '$1'.
dlgSgPingRepositoryFailed.tle=クローン
dlgSgPreferences.btn"Add"=追加
dlgSgPreferences.btn"Assign"=割り当て
dlgSgPreferences.btn"Change Master Password"=マスターパスワードの変更
dlgSgPreferences.btn"Clear Cache"=キャッシュをクリア
dlgSgPreferences.btn"Clear"=クリア
dlgSgPreferences.btn"Copy"=コピー
dlgSgPreferences.btn"Edit"=編集
dlgSgPreferences.btn"Export"=エクスポート
dlgSgPreferences.btn"I accept the risk!"=リスクを受け入れて続行する
dlgSgPreferences.btn"Import"=インポート
dlgSgPreferences.btn"Move Down"=下へ
dlgSgPreferences.btn"Move Up"=上へ
dlgSgPreferences.btn"Re-Add Defaults"=Re-Add Defaults
dlgSgPreferences.btn"Remove All"=全て削除
dlgSgPreferences.btn"Remove"=除去
dlgSgPreferences.btn"Reset to Defaults"=デフォルトにリセット
dlgSgPreferences.btn"Reset"=リセット
dlgSgPreferences.btn"Show Password"=パスワードを表示
dlgSgPreferences.cdl"Authentication"=認証
dlgSgPreferences.cdl"Background Commands"=バックグラウンド処理
dlgSgPreferences.cdl"Built-in Text Editors"=内蔵テキストエディタ
dlgSgPreferences.cdl"Commands"=コマンド
dlgSgPreferences.cdl"Conflict Solvers"=コンフリクトソルバー
dlgSgPreferences.cdl"Diff Tools"=Diffツール
dlgSgPreferences.cdl"Executables"=Executables
dlgSgPreferences.cdl"Git Executable"=Git 実行ファイル
dlgSgPreferences.cdl"Hosting Providers"=ホスティングプロバイダ
dlgSgPreferences.cdl"Keyboard Shortcuts"=キーボード ショートカット
dlgSgPreferences.cdl"Log"=ログ
dlgSgPreferences.cdl"Low-level Properties"=ローレベルプロパティ
dlgSgPreferences.cdl"Privacy"=プライバシー
dlgSgPreferences.cdl"Proxy"=プロキシ
dlgSgPreferences.cdl"Refresh"=更新
dlgSgPreferences.cdl"SmartGit Updates"=SmartGitの更新
dlgSgPreferences.cdl"Spell Checker"=スペルチェッカー
dlgSgPreferences.cdl"Tools"=ツール
dlgSgPreferences.cdl"User Interface"=ユーザインタフェース
dlgSgPreferences.chk"Add untracked files"=追跡されていないファイルの追加
dlgSgPreferences.chk"Allow all commands on stash and pull request commits"=\
 スタッシュとプルリクエストのコミットにすべてのコマンドを許可する
dlgSgPreferences.chk"Allow modifying pushed commits \(e.g. forced-push\)"=\
 プッシュされたコミットの修正を許可する (例: force-push)
dlgSgPreferences.chk"Allow to open multiple Log windows for the same repository/file"=\
 同一のリポジトリ/ファイルに対して複数のログウィンドウを開くことを許可する
dlgSgPreferences.chk"Also detect renames for untracked and missing files"=\
 トラックされていないファイルや行方不明のファイルのリネームも検出します。
dlgSgPreferences.chk"Ask for master password on startup"=\
 起動時にマスターパスワードの入力を求める
dlgSgPreferences.chk"Autoindent new lines"=改行時のオートインデント
dlgSgPreferences.chk"Automatically save stash on common commands, if they fail due to local changes"=\
 一般的なコマンドがローカルの変更により失敗した場合、自動的にstashで変更内容を退避する
dlgSgPreferences.chk"Automatically send 'crash footprints' after an internal error has occurred"=\
 内部エラー発生後、自動的に「クラッシュフットプリント」を送信
dlgSgPreferences.chk"Automatically set up tracking for new branches"=\
 新規ブランチの追跡を自動的に設定
dlgSgPreferences.chk"Begin of line: jump to first non-whitespace character"=\
 行頭：最初の非ホワイトスペース文字にジャンプする
dlgSgPreferences.chk"Closed 'favorite' repositories"=閉じた「お気に入り」リポジトリ
dlgSgPreferences.chk"Compare with working tree, even if all changes are staged"=\
 すべての変更がステージングされていても、作業ツリーと比較する
dlgSgPreferences.chk"Detect local changes in closed 'favorite' repositories"=\
 閉じた「お気に入り」リポジトリのローカルな変更の検出
dlgSgPreferences.chk"Detect remote changes"=リモートの変更の検出
dlgSgPreferences.chk"Detect renames \(for added and removed files, as command line Git does\)"=\
 リネームの検出（コマンドラインGitと同様に、追加されたファイルと削除されたファイルの検出）
dlgSgPreferences.chk"Distinguish between content and EOL-only changes \(slightly more expensive\)"=\
 コンテンツとEOLのみの変更を区別する（やや高コストな処理）
dlgSgPreferences.chk"Enable integration for configured hosting providers \(pull requests, comments\)"=\
 設定済みのホスティングプロバイダーの統合を可能にする（プルリクエスト、コメント）
dlgSgPreferences.chk"Focus next change after accepting change \(Take Left/Take Right\)"=\
 変更を確認した後、次の変更点にフォーカスする \(左に移動/右に移動\)
dlgSgPreferences.chk"For Preview versions, automatically download the latest build"=\
 プレビューバージョンの場合、最新のビルドを自動的にダウンロードします。
dlgSgPreferences.chk"For ambiguous protocols like 'https', show dialog to choose between Git and SVN clone"=\
 http のような曖昧なプロトコルでは、GitとSVNのクローンを選択するダイアログを表示します。
dlgSgPreferences.chk"Highlight current line in text content"=\
 現在の行をハイライトする
dlgSgPreferences.chk"Home and end: operate on line, not the document"=\
 Home , End キー : ドキュメントではなく、行に対して操作する
dlgSgPreferences.chk"Include untracked files"=追跡されていないファイルの追加
dlgSgPreferences.chk"Left and right cursor moves: limit to current line"=\
 左右のカーソル移動：現在の行に制限
dlgSgPreferences.chk"Open repositories when idle"=アイドル時にリポジトリを開く \(Open repositories when idle\)
dlgSgPreferences.chk"Open the last used repositories"=最後に使ったリポジトリを開く
dlgSgPreferences.chk"Periodically invoke Git's garbage collection when idle"=\
 アイドル時にGitのガベージコレクションを定期的に呼び出す
dlgSgPreferences.chk"Preselect 'Staged' if files are staged, even if a file without staged changes is selected"=\
 ファイルがステージングされている場合、ステージングされていない変更のないファイルが選択されていても、「ステージング」を事前に選択する。
dlgSgPreferences.chk"Proxy requires authentication"=プロキシに認証が必要
dlgSgPreferences.chk"Push all tags"=全てのタグをプッシュ
dlgSgPreferences.chk"Refresh file system also while SmartGit is in background"=\
 SmartGit がバックグラウンド動作している間、ファイルシステムを更新する
dlgSgPreferences.chk"Remember from last used single Log or Working Tree window"=\
 最後に使用したウィンドウタイプ(ロググラフ or ワーキングツリー)を記憶する
dlgSgPreferences.chk"Remove leading and trailing whitespace from commit message"=\
 コミットメッセージから先頭と末尾のホワイトスペースを削除する
dlgSgPreferences.chk"Remove missing files"=見つからないファイルの削除
dlgSgPreferences.chk"Restore all confirmation dialogs"=すべての確認ダイアログを復元する
dlgSgPreferences.chk"Send 'crash footprints' after an internal error has occurred"=\
 Send 'crash footprints' after an internal error has occurred
dlgSgPreferences.chk"Send usage statistics"=使用状況の統計情報の送信
dlgSgPreferences.chk"Show also the resolve dialog for external conflict solvers"=\
 外部の競合ソルバーの解決ダイアログも表示する
dlgSgPreferences.chk"Show chooser dialog if multiple entries match"=\
 複数のエントリーが一致した場合、選択ダイアログを表示
dlgSgPreferences.chk"Show line length guides \(only useful for monospaced-font\)"=\
 コミットメッセージ入力欄に行の長さのガイドを表示する（等幅フォントの場合に有用）
dlgSgPreferences.chk"Show verbose date for last days, e.g. Yesterday"=\
 過去の日の詳細な日付を表示する（例：Yesterday
dlgSgPreferences.chk"Show welcome dialog if no repository has been reopened"=\
 リポジトリが再オープンされていない場合、ウェルカムダイアログを表示する。
dlgSgPreferences.chk"Swap 'ours' and 'theirs' on Rebase conflicts for easier understanding"=\
 リベースの競合で'ours'と'theirs'を入れ替えて理解しやすくする。
dlgSgPreferences.chk"Tab enters and Backspace deletes multiple leading spaces"=\
 Tabキーで複数のスペースを入力し、Backspaceキーで先頭の複数個のスペースを削除する
dlgSgPreferences.chk"Trim whitespace"=空白を削除する
dlgSgPreferences.chk"Use background color for file table to indicate certain states"=\
 ファイルテーブルの背景色で状態を示す
dlgSgPreferences.chk"Use font configured in User Interface > Built-in Text Editors"=\
 「ユーザーインターフェース」→「内蔵テキストエディタ」で設定したフォントを使用する。
dlgSgPreferences.chk"Use gravatar.com to show images for the users"=\
 gravatar.comを使用してユーザーアイコンを表示する
dlgSgPreferences.chk"Use indentation from previous non-empty line"=\
 空白でない前の行のインデントを使用
dlgSgPreferences.chk"Use pre-installed \(\"system\"\) Git-Flow\*"=プリインストールされた\("system"\) Git-Flowの使用\*
dlgSgPreferences.chk"Warn for slow rename detection"=リネームの検出に時間がかかる場合は警告する
dlgSgPreferences.col"Accelerator"=Accelerator
dlgSgPreferences.col"Account"=アカウント
dlgSgPreferences.col"Applies To"=適用対象
dlgSgPreferences.col"Arguments"=引数
dlgSgPreferences.col"Command + Arguments"=Command + Arguments
dlgSgPreferences.col"Command"=コマンド
dlgSgPreferences.col"Default"=デフォルト
dlgSgPreferences.col"Details"=Details
dlgSgPreferences.col"Dictionary File"=辞書ファイル
dlgSgPreferences.col"File Pattern"=ファイルパターン
dlgSgPreferences.col"Key"=キー
dlgSgPreferences.col"Language"=言語
dlgSgPreferences.col"Name"=名前
dlgSgPreferences.col"Patterns"=パターン
dlgSgPreferences.col"Repository"=リポジトリ
dlgSgPreferences.col"Shortcut"=ショートカット
dlgSgPreferences.col"Value"=値
dlgSgPreferences.edt"Date Format\*"=日付形式\*
dlgSgPreferences.edt"Example"=例
dlgSgPreferences.edt"Fetch"=フェッチ
dlgSgPreferences.edt"File Name Matches\*"=ファイル名の一致\*
dlgSgPreferences.edt"Font Family"=Font Family
dlgSgPreferences.edt"Font Size"=Font Size
dlgSgPreferences.edt"Git Executable"=Git 実行ファイル
dlgSgPreferences.edt"Hg Executable"=Hg Executable
dlgSgPreferences.edt"Host"=Host
dlgSgPreferences.edt"Known credentials"=Known credentials
dlgSgPreferences.edt"Language\*"=言語\*
dlgSgPreferences.edt"On start-up"=起動時
dlgSgPreferences.edt"Password"=パスワード
dlgSgPreferences.edt"Port"=Port
dlgSgPreferences.edt"Prefer"=Prefer
dlgSgPreferences.edt"Preview"=プレビュー
dlgSgPreferences.edt"Shortcut"=ショートカット
dlgSgPreferences.edt"Suggest to"=提案する
dlgSgPreferences.edt"Theme"=テーマ
dlgSgPreferences.edt"Theme\*"=テーマ\*
dlgSgPreferences.edt"Time Format\*"=時間形式\*
dlgSgPreferences.edt"Username"=Username
dlgSgPreferences.hnt"Search"=検索
dlgSgPreferences.lbl"Changing these low-level properties can be harmful to the stability or performance of SmartGit. You should only continue if you are sure of what you are doing. Changed properties with a trailing \* need a restart to be applied."=\
 ローレベルのプロパティを変更すると、SmartGitの安定性や性能に悪影響を及ぼす可能性があります。\r自分が何をしているのか確信が持てる場合のみ、作業を続行するべきです。\r変更したプロパティの末尾に\*が付いている場合は、再起動が必要です。
dlgSgPreferences.lbl"Define external tools which will show up in the Tools menu. Those marked with a leading \* in front of the name can be used by the Open command."=\
 ツールメニューに表示される外部ツールを定義します。名前の前に「\*」が付いているものは、「開く」コマンドで使用できます。
dlgSgPreferences.lbl"If you are using SSH to connect to other Git repositories, select what SSH client to use."=\
 SSHを使って他のGitリポジトリに接続する場合は、使用するSSHクライアントを選択します。
dlgSgPreferences.lbl"In order to use all SmartGit functionality, you need to have command line Git installed on your system. Provide here the full path to the installed 'git' executable."=\
 SmartGitのすべての機能を使用するには、システムにコマンドラインGitがインストールされている必要があります。インストールした'git'実行ファイルのフルパスを入力してください。
dlgSgPreferences.lbl"In order to use all SmartGit functionality, you need to have command line Git or Mercurial installed on your system. Provide here the full path to the installed 'git' or 'hg' executable."=\
 In order to use all SmartGit functionality, you need to have command line Git or Mercurial installed on your system. Provide here the full path to the installed 'git' or 'hg' executable.
dlgSgPreferences.lbl"Note: The password will be stored in plain text in SmartGit's configuration area!"=\
 Note: The password will be stored in plain text in SmartGit's configuration area!
dlgSgPreferences.lbl"Please help to improve SmartGit's quality by automatically sending 'crash footprints' which do not contain any sensitive information. You can change this option later in the preferences.\n\nA 'crash footprint' contains details about your machine \(e.g. version of operating system\), SmartGit's version/build number, the JVM state and where the internal error occurred.\n\nIt contains NO POTENTIALLY SENSITIVE INFORMATION like user names, email addresses, file contents, file paths or server names."=\
 SmartGitの品質向上のために、機密情報を含まない「クラッシュフットプリント」を自動的に送信してください。クラッシュフットプリント」には、お使いのマシンの詳細（オペレーティングシステムのバージョンなど）、SmartGitのバージョン/ビルド番号、JVMの状態、内部エラーが発生した場所などが含まれますが、ユーザー名、メールアドレス、ファイルの内容、ファイルパス、サーバー名などの機密情報は一切含まれません。
dlgSgPreferences.lbl"The proxy is primarily used for the Check for New Version. It will also be used for Git HTTP\(s\) connections if no reasonable system proxy configuration seems to be present already \(see documentation for details\)."=\
 このプロキシは、主に「新しいバージョンの確認」に使用されます。\rシステムのプロキシ設定が適切でない場合には、Git HTTP\(S\)の接続にも使用されます。(詳細はドキュメントを参照してください)
dlgSgPreferences.lbl"When comparing files, this list is searched from top to bottom to find a matching diff tool. If none is found, the built-in file compare is used for text files."=\
 ファイルを比較する際には、このリストを上から下に向かって検索し、一致する 比較 ツールを探します。\r見つからない場合は、テキスト ファイルの場合は内蔵のファイル比較が使用されます。
dlgSgPreferences.lbl"When invoking the Conflict Solver feature, this list is searched from top to bottom to find a matching entry. If none is found, the built-in Conflict Solver is used for text files."=\
 コンフリクトソルバー機能を呼び出すと、このリストを上から下へ検索し、一致するエントリーを探します。\r見つからない場合は、テキストファイル用の組み込みのコンフリクトソルバーが使用されます。
dlgSgPreferences.lbl"You may configure hosting provider accounts to simplify accessing your hosted repositories or to enable the GitHub pull request and comment features."=\
 ホスティングプロバイダーのアカウントを設定して、ホストされているリポジトリへのアクセスを簡素化したり、GitHubのプルリクエストやコメント機能を有効にしたりすることができます。
dlgSgPreferences.lbl"\*\) these options require an application restart to be applied"=\
 \*\) these options require an application restart to be applied
dlgSgPreferences.lbl"\*\) this option requires an application restart to be applied"=\
 \*\) このオプションを適用するには、アプリケーションの再起動が必要です
dlgSgPreferences.mni"Copy Key"=キーをコピー
dlgSgPreferences.mni"Edit"=編集
dlgSgPreferences.mni"Key"=Key
dlgSgPreferences.mni"Reset"=リセット
dlgSgPreferences.mni"Value"=Value
dlgSgPreferences.rbt"Auto-detect the system proxy"=システムプロキシを自動検出
dlgSgPreferences.rbt"Automatically download and install updates"=アップデートを自動的にダウンロードしてインストールする
dlgSgPreferences.rbt"Check and report new updates"=新しいアップデートの確認と通知
dlgSgPreferences.rbt"Dark"=ダーク
dlgSgPreferences.rbt"Do not check for new updates"=\
 アップデートを確認しない
dlgSgPreferences.rbt"Don't use a proxy"=プロキシを使わない
dlgSgPreferences.rbt"Exact case \('Foo' will match 'Foo', but not 'foo'\)"=\
 大文字小文字を区別する
dlgSgPreferences.rbt"Ignore case \('Foo' will match 'Foo' and 'foo'\)"=\
 大文字小文字を区別しない
dlgSgPreferences.rbt"Light"=Light
dlgSgPreferences.rbt"Log Graph"=ロググラフ
dlgSgPreferences.rbt"Prefer light-weight updates stored in home directory"=\
 ホームディレクトリに保存される軽量なアップデート
dlgSgPreferences.rbt"Smart upper case \('FoB' will match 'FooBar', but neither 'foobar' nor 'Fob'\)"=\
 Smart upper case \('FoB' will match 'FooBar', but neither 'foobar' nor 'Fob'\)
dlgSgPreferences.rbt"Update SmartGit application in-place \(may require administrator permissions\)"=\
 インプレースでSmartGitを更新する \(管理者権限が必要な場合があります\)
dlgSgPreferences.rbt"Use SmartGit as SSH client"=SmartGitをSSHクライアントとして使用
dlgSgPreferences.rbt"Use following proxy"=以下のプロキシを使用
dlgSgPreferences.rbt"Use system SSH client"=システムSSHクライアントの使用
dlgSgPreferences.rbt"Working Tree"=ワーキングツリー
dlgSgPreferences.tab"Behavior"=動作
dlgSgPreferences.tab"Colors"=色
dlgSgPreferences.tab"Font"=フォント
dlgSgPreferences.tab"Languages"=言語
dlgSgPreferences.tle=環境設定
dlgSgProcessKiller.btn"Exit Process"=プロセスを終了
dlgSgProcessKiller.btn"Wait"=Wait
dlgSgProcessKiller.lbl"This usually happens when SmartGit is configured to use the system SSH client, which needs to ask for credentials. Due to technical issues, SmartGit can't read the SSH client's input request and hence hangs.\n\nIf you think the process is hanging, click the Exit Process button, otherwise Wait."=\
 This usually happens when SmartGit is configured to use the system SSH client, which needs to ask for credentials. Due to technical issues, SmartGit can't read the SSH client's input request and hence hangs.\n\nIf you think the process is hanging, click the Exit Process button, otherwise Wait.
dlgSgProcessKiller.tle=Process Not Responding
dlgSgProviderPullRequestCreateNoTargetRepositories.fur=The repository is no GitHub-fork and there are no other remotes which are forks of this repository.
dlgSgProviderPullRequestCreateNoTargetRepositories.hdl=No target repositories found.
dlgSgProviderPullRequestCreateNoTargetRepositories.tle=プルリクエストを作成
dlgSgProviderPullRequestDropConfirmMr.btn"Drop"=Drop
dlgSgProviderPullRequestDropConfirmMr.fur=The merge request itself will not be deleted on the server.
dlgSgProviderPullRequestDropConfirmMr.hdl%1=本当にマージリクエスト$1のローカルコミットを削除しますか?
dlgSgProviderPullRequestDropConfirmMr.tle=Drop Merge Request
dlgSgProviderPullRequestDropConfirmPr.btn"Drop"=Drop
dlgSgProviderPullRequestDropConfirmPr.fur=The pull request itself will not be deleted on the server.
dlgSgProviderPullRequestDropConfirmPr.hdl%1=Do you really want to drop the local commits of pull request $1?
dlgSgProviderPullRequestDropConfirmPr.tle=Drop Pull Request
dlgSgProviderPullRequestRetractMr.btn"Retract"=Retract
dlgSgProviderPullRequestRetractMr.edt"Comment"=コメント
dlgSgProviderPullRequestRetractMr.hdl=Retract Merge Request
dlgSgProviderPullRequestRetractMr.inf=Enter the comment which will be logged with the closed merge request.
dlgSgProviderPullRequestRetractMr.tle=Retract Merge Request
dlgSgProviderPullRequestRetractPr.btn"Retract"=Retract
dlgSgProviderPullRequestRetractPr.edt"Comment"=コメント
dlgSgProviderPullRequestRetractPr.hdl=Retract Pull Request
dlgSgProviderPullRequestRetractPr.inf=Enter the comment which will be logged with the closed pull request.
dlgSgProviderPullRequestRetractPr.tle=Retract Pull Request
dlgSgPull.btn"Fetch Only"=フェッチのみ
dlgSgPull.btn"Pull"=プル
dlgSgPull.chk"Fetch from all remotes"=Fetch from all remotes
dlgSgPull.chk"More Options"=More Options
dlgSgPull.chk"Remember as default for repository"=リポジトリのデフォルトとして記憶する
dlgSgPull.chk"Update existing and fetch new tags"=\
 既存のタグの更新と新しいタグの取得
dlgSgPull.chk"\*More Options"=\*More Options
dlgSgPull.chk"\u8ffd\u52a0\u306e\u30aa\u30d7\u30b7\u30e7\u30f3"=\u8ffd\u52a0\u306e\u30aa\u30d7\u30b7\u30e7\u30f3
dlgSgPull.edt"Fetch From"=Fetch From
dlgSgPull.hdl=リモートリポジトリからコミットをプル
dlgSgPull.inf"In contrast to Fetch Only, Pull will also incorporate the fetched changes \(expand the options below to configure\)."=\
 「フェッチのみ」と対照的に、「プル」ではフェッチされた変更点も取り込まれます。
dlgSgPull.inf"Select the remote repository to pull. In contrast to Fetch Only, Pull will also incorporate the fetched changes \(expand the options below to configure\)."=\
 Select the remote repository to pull. In contrast to Fetch Only, Pull will also incorporate the fetched changes \(expand the options below to configure\).
dlgSgPull.lbl"More Options"=追加のオプション
dlgSgPull.rbt"Merge fetched remote changes"=取得したリモートの変更をマージ
dlgSgPull.rbt"Rebase local branch onto fetched changes"=\
 取得した変更点に合わせてローカルブランチをリベース
dlgSgPull.tle=プル
dlgSgPullConfiguration.btn"Configure"=設定
dlgSgPullConfiguration.chk"Remember as default for other repositories"=\
 Remember as default for other repositories
dlgSgPullConfiguration.hdl=Configure how to pull
dlgSgPullConfiguration.inf=Specify whether to merge or rebase on Pull for the current repository.
dlgSgPullConfiguration.lbl"Merging produces additional 'merge'-commits and is not recommended. It might however be a convention of your repository \(ask the maintainer to find out\)."=\
 Merging produces additional 'merge'-commits and is not recommended. It might however be a convention of your repository \(ask the maintainer to find out\).
dlgSgPullConfiguration.lbl"Rebasing gives a clean linear history and is recommended in general."=\
 Rebasing gives a clean linear history and is recommended in general.
dlgSgPullConfiguration.rbt"Merge"=マージ
dlgSgPullConfiguration.rbt"Rebase"=リベース
dlgSgPullConfiguration.tle=プル設定
dlgSgPullMergeInsteadOfRebase.btn"Merge"=マージ
dlgSgPullMergeInsteadOfRebase.btn"Rebase"=リベース
dlgSgPullMergeInsteadOfRebase.fur%1=Amongst the changes to rebase there is merge-commit $1. Rebasing merge-commits can easily cause troubles.
dlgSgPullMergeInsteadOfRebase.hdl=Do you want to merge your local changes instead of rebasing?
dlgSgPullMergeInsteadOfRebase.tle=プル
dlgSgPullNoRemoteRepository.btn"Add Remote"=リモートを追加
dlgSgPullNoRemoteRepository.fur=You first need to add a remote repository to pull from.
dlgSgPullNoRemoteRepository.hdl=No remote repository has been found.
dlgSgPullNoRemoteRepository.tle=プル
dlgSgPullOrJustFetch.btn"Fetch"=フェッチ
dlgSgPullOrJustFetch.btn"Pull"=プル
dlgSgPullOrJustFetch.chk"Fetch from all remotes"=Fetch from all remotes
dlgSgPullOrJustFetch.chk"Update existing and fetch new tags"=\
 既存のタグの更新と新しいタグの取得
dlgSgPullOrJustFetch.fur=You can change the Pull behavior in the Repository Settings.
dlgSgPullOrJustFetch.hdl%1=Do you want to pull or just fetch $1 repositories?
dlgSgPullOrJustFetch.tle=プル
dlgSgPushConfirmSingleBranch.btn"Push"=プッシュ
dlgSgPushConfirmSingleBranch.chk=次回から表示しない
dlgSgPushConfirmSingleBranch.fur%1=1つのブランチが'$1'にプッシュされます。
dlgSgPushConfirmSingleBranch.hdl%1=ブランチ'$1'をプッシュしますか？
dlgSgPushConfirmSingleBranch.tle=プッシュ
dlgSgPushForced.btn"Force Push"=強制プッシュ
dlgSgPushForced.fur=リモートブランチへのプッシュは fast-forward できないので、強制的にプッシュする必要があります。リモートブランチでのコミットは失われます。
dlgSgPushForced.hdl=リモートブランチを強制プッシュ（置き換え）しますか？
dlgSgPushForced.tle=プッシュ
dlgSgPushForcedSvn.btn"Force Push"=強制プッシュ
dlgSgPushForcedSvn.fur=You are about to replace the remote branch. Revisions of that branch might not be \(easily\) accessible anymore.
dlgSgPushForcedSvn.hdl=リモートブランチを強制プッシュ（置き換え）しますか？
dlgSgPushForcedSvn.tle=プッシュ
dlgSgPushOverwriteRemoteBranchConfirm.btn"Push"=プッシュ
dlgSgPushOverwriteRemoteBranchConfirm.chk=Overwrite remote changes
dlgSgPushOverwriteRemoteBranchConfirm.fur=You are about to replace the remote branch, which contains commits that you haven't seen at all. Maybe you want to merge/rebase onto the remote changes before?
dlgSgPushOverwriteRemoteBranchConfirm.hdl=本当にリモートブランチを上書きしますか?
dlgSgPushOverwriteRemoteBranchConfirm.tle=プッシュ
dlgSgPushToHeadDoesNotPointToABranch.fur=You have to create a branch for the current commit first.
dlgSgPushToHeadDoesNotPointToABranch.hdl=HEAD does not point to a branch.
dlgSgPushToHeadDoesNotPointToABranch.tle=Push
dlgSgPushToNoMoreGitRemoteFound.fur=There is no other Git-remote to which branches of the selected remote could be pushed.
dlgSgPushToNoMoreGitRemoteFound.hdl=No more Git remote found.
dlgSgPushToNoMoreGitRemoteFound.tle=Push To
dlgSgPushToNoTagsOrLocalBranches.fur=You can only push tags or local branches.
dlgSgPushToNoTagsOrLocalBranches.hdl=No tags or local branches to push.
dlgSgPushToNoTagsOrLocalBranches.tle=プッシュ先
dlgSgPushToRef.btn"Push"=プッシュ
dlgSgPushToRef.chk"Force pushing \(even if it's not fast-forward\)"=\
 強制プッシュ (fast-forwardでなくても)
dlgSgPushToRef.edt"Push To"=プッシュ先
dlgSgPushToRef.edt"Target Repository"=ターゲットリポジトリ
dlgSgPushToRef.err"Enter the remote location to which the commits of the current branch should be pushed to."=\
 Enter the remote location to which the commits of the current branch should be pushed to.
dlgSgPushToRef.err"Please specify a valid Git ref."=\
 Please specify a valid Git ref.
dlgSgPushToRef.hdl"Push '$1' to a remote repository"=\
 リモートリポジトリに '$1' をプッシュ
dlgSgPushToRef.hdl"Push '$1' to remote '$2'"=Push '$1' to remote '$2'
dlgSgPushToRef.inf=Select the target repository where to push the ref\(s\).
dlgSgPushToRef.rbt"Custom Ref:"=指定のブランチ:
dlgSgPushToRef.rbt"Tracked or matching branch"=追跡中または一致するブランチ
dlgSgPushToRef.tle=プッシュ先
dlgSgPushToRemote.btn"Push"=プッシュ
dlgSgPushToRemote.chk"Force pushing \(even if it's not fast-forward\)"=\
 強制プッシュ (fast-forwardでなくても)
dlgSgPushToRemote.chk"Remove remote branches which don't have a local counterpart"=\
 ローカルと対応するブランチがないリモートブランチを削除する
dlgSgPushToRemote.edt"Target Repository"=ターゲットリポジトリ
dlgSgPushToRemote.hdl%1=別のリモートに '$1' ブランチをプッシュする
dlgSgPushToRemote.inf%1='$1' のすべてのブランチがターゲットリポジトリにプッシュされます。\r\(リモートにローカルと対応するブランチが作成されます。\)
dlgSgPushToRemote.tle=プッシュ先
dlgSgPushToRemoteRemoveTargetBranches.btn"Remove"=除去
dlgSgPushToRemoteRemoveTargetBranches.fur=Removed branches and their commits in the target remote which will be lost afterwards.
dlgSgPushToRemoteRemoveTargetBranches.hdl=本当にターゲットのリモートブランチを削除しますか?
dlgSgPushToRemoteRemoveTargetBranches.tle=プッシュ先
dlgSgPushToRemoteResetTargetBranches.btn"Force Push"=強制プッシュ
dlgSgPushToRemoteResetTargetBranches.fur=Forcing push will overwrite branches and their commits in the target remote which will be lost afterwards.
dlgSgPushToRemoteResetTargetBranches.hdl=Do you really want to reset the target remote branches?
dlgSgPushToRemoteResetTargetBranches.tle=プッシュ先
dlgSgPushTrackingConfigureSingle.btn"Configure"=設定
dlgSgPushTrackingConfigureSingle.btn"Skip"=スキップ
dlgSgPushTrackingConfigureSingle.fur=For your current branch tracking \(its corresponding remote branch\) has not been configured yet. Configuring tracking will keep your local branches in sync with the remote branches.
dlgSgPushTrackingConfigureSingle.hdl%1=Do you want to configure tracking for '$1' branch?
dlgSgPushTrackingConfigureSingle.tle=プッシュ
dlgSgRebase.btn"Branches"=ブランチ
dlgSgRebase.btn"Rebase HEAD to"=Rebase HEAD to
dlgSgRebase.hdl=Rebase HEAD to
dlgSgRebase.inf=Select the commit to which the HEAD commits should be rebased.
dlgSgRebase.tle=リベース
dlgSgRebaseContinueAfterSplittingCommit.btn"Continue"=続ける
dlgSgRebaseContinueAfterSplittingCommit.fur%1=The splitting of commit $1 still is in progress and all changes of this commit have been applied.
dlgSgRebaseContinueAfterSplittingCommit.hdl=Do you want to continue after splitting the commit?
dlgSgRebaseContinueAfterSplittingCommit.tle=リベース
dlgSgRebaseContinueConfirm.btn"Continue Rebase"=Continue Rebase
dlgSgRebaseContinueConfirm.fur=Continue the rebase operation after having resolved all conflicts.
dlgSgRebaseContinueConfirm.hdl=Do you want to continue the rebase?
dlgSgRebaseContinueConfirm.tle=リベース
dlgSgRebaseContinueNothingToCommitContinue.btn"Continue Rebase"=Continue Rebase
dlgSgRebaseContinueNothingToCommitContinue.fur=The repository is in 'rebasing' state, but there is nothing to commit, so you may just continue the Rebase.
dlgSgRebaseContinueNothingToCommitContinue.hdl=Do you want to continue the rebase?
dlgSgRebaseContinueNothingToCommitContinue.tle=リベース
dlgSgRebaseContinueNothingToCommitSkip.btn"Skip Commit"=Skip Commit
dlgSgRebaseContinueNothingToCommitSkip.fur=The repository is in 'rebasing' state, but there is nothing to commit, so you may just skip this rebased commit.
dlgSgRebaseContinueNothingToCommitSkip.hdl=Do you want to skip this rebased commit?
dlgSgRebaseContinueNothingToCommitSkip.tle=リベース
dlgSgRebaseContinuePreserveUntrackedFiles.btn"Commit"=コミット
dlgSgRebaseContinuePreserveUntrackedFiles.btn"Preserve"=Preserve
dlgSgRebaseContinuePreserveUntrackedFiles.fur=Your working tree contains untracked files. You may either choose to preserve them in the working tree or include them for the rebased commit.
dlgSgRebaseContinuePreserveUntrackedFiles.hdl=Do you want to preserve untracked files in your working tree?
dlgSgRebaseContinuePreserveUntrackedFiles.tle=リベース
dlgSgRebaseContinueWithoutApplyingAllChanges.btn"Continue Anyway"=Continue Anyway
dlgSgRebaseContinueWithoutApplyingAllChanges.btn"Put Changes into Index"=Put Changes into Index
dlgSgRebaseContinueWithoutApplyingAllChanges.fur%1=The splitting of commit $1 still is in progress, but not all changes of this commit have been applied.\n\nIf this is intentional, you can continue. Otherwise, you should click 'Put Changes into Index' and review your changes.
dlgSgRebaseContinueWithoutApplyingAllChanges.hdl=Do you want to continue splitting the commit without applying all changes?
dlgSgRebaseContinueWithoutApplyingAllChanges.tle=リベース
dlgSgRebaseHeadToCommitConfirmBc.fur%1=This will apply all commits from the working tree branch '$1' \(HEAD\) onto the selected commit.
dlgSgRebaseHeadToCommitConfirmBc.hdl%1=Do you want to rebase '$1' onto the selected commit?
dlgSgRebaseHeadToCommitConfirmBr.fur%2=This will apply all commits from the working tree branch '$1' \(HEAD\) to '$2'.
dlgSgRebaseHeadToCommitConfirmBr.hdl%2=Do you want to rebase '$1' to '$2'?
dlgSgRebaseHeadToCommitConfirm(Br|Bc|Hr|Hc).btn"Rebase HEAD to"=Rebase HEAD to
dlgSgRebaseHeadToCommitConfirm(Br|Bc|Hr|Hc).btn"Rebase Interactively"=Rebase Interactively
dlgSgRebaseHeadToCommitConfirm(Br|Bc|Hr|Hc).tle=Rebase HEAD to Selected Commit
dlgSgRebaseInteractive.btn"Auto-Squash"=Auto-Squash
dlgSgRebaseInteractive.btn"Edit Message"=メッセージの編集
dlgSgRebaseInteractive.btn"Edit"=編集
dlgSgRebaseInteractive.btn"Move Down"=下へ
dlgSgRebaseInteractive.btn"Move Up"=上へ
dlgSgRebaseInteractive.btn"Rebase"=リベース
dlgSgRebaseInteractive.btn"Remove"=除去
dlgSgRebaseInteractive.btn"Squash"=Squash
dlgSgRebaseInteractive.col"IDs"=IDs
dlgSgRebaseInteractive.col"Message"=メッセージ
dlgSgRebaseInteractive.hdl=Rewrite History
dlgSgRebaseInteractive.inf=Reorder or squash commits according to your needs.
dlgSgRebaseInteractive.mni"Neighboring Commits"=Neighboring Commits
dlgSgRebaseInteractive.mni"To Bottom Commit"=To Bottom Commit
dlgSgRebaseInteractive.mni"To Top Commit"=To Top Commit
dlgSgRebaseInteractive.tle=Rebase Interactive
dlgSgRebaseInteractiveMessage.edt"Commit Message"=コミットメッセージ
dlgSgRebaseInteractiveMessage.hdl=コミットメッセージを編集
dlgSgRebaseInteractiveMessage.inf=Provide the new message for the commit.
dlgSgRebaseInteractiveMessage.tle=Edit Message
dlgSgRebaseInteractiveRemoveCommit.btn"Remove"=除去
dlgSgRebaseInteractiveRemoveCommit.fur=It might become hard or impossible to recover the commit again.
dlgSgRebaseInteractiveRemoveCommit.hdl%1=Do you want to remove the selected commit $1?
dlgSgRebaseInteractiveRemoveCommit.tle=Remove Commit
dlgSgRebaseNoop.fur=Rebasing a commit onto itself is technically allowed by Git but it's a no-op and will not give a new commit nor any other meaningful changes.
dlgSgRebaseNoop.hdl=There is nothing to rebase.
dlgSgRebaseNoop.tle=Merge
dlgSgRebaseTagCommit.btn"Add Tag"=タグを追加
dlgSgRebaseTagCommit.btn"Skip Tag"=Skip Tag
dlgSgRebaseTagCommit.fur=After the rebase, the remaining commit won't be reachable anymore.
dlgSgRebaseTagCommit.hdl%1=Should commit $1 be tagged?
dlgSgRebaseTagCommit.tle=リベース
dlgSgRebasingAbortConfirm.btn"Abort Rebase"=Abort Rebase
dlgSgRebasingAbortConfirm.fur=Your working tree is in 'rebasing' state. You may abort rebasing; if you just want to skip the current patch, use Branch \| Rebase \| Rebase HEAD To instead.\n\nAborting will clean any local modification \(by invoking 'git reset --hard'\)!
dlgSgRebasingAbortConfirm.hdl=Do you want to abort the rebasing?
dlgSgRebasingAbortConfirm.tle=リベース
dlgSgRecursiveStage.btn"Stage"=ステージ
dlgSgRecursiveStage.chk"Don't show again"=Don't show again
dlgSgRecursiveStage.hdl=Save working tree changes in the Index for later commit
dlgSgRecursiveStage.inf=Select the files to stage to the Index.
dlgSgRecursiveStage.tle=ステージ
dlgSgRecursiveUnstage.btn"Unstage"=アンステージ
dlgSgRecursiveUnstage.hdl=Revert staged changes from the Index to the working tree
dlgSgRecursiveUnstage.inf=Select the files to unstage from the Index.
dlgSgRecursiveUnstage.tle=アンステージ
dlgSgRecursive(Stage|Unstage).col"Directory"=ディレクトリ
dlgSgRecursive(Stage|Unstage).col"Name"=名前
dlgSgRemoteDeleteConfirm.btn"Delete"=削除
dlgSgRemoteDeleteConfirm.fur=This will just delete the link to the remote repository.
dlgSgRemoteDeleteConfirm.hdl%1=リモートリポジトリ'$1'を削除しますか？
dlgSgRemoteDeleteConfirm.tle=Delete Remote Repository
dlgSgRemoteFetchMore.btn"Fetch"=フェッチ
dlgSgRemoteFetchMore.col"Branch"=ブランチ
dlgSgRemoteFetchMore.hdl=リモートブランチの取得
dlgSgRemoteFetchMore.inf=リモートリポジトリからフェッチするブランチを選択します。
dlgSgRemoteFetchMore.rbt"Fetch additional branches:"=Fetch additional branches:
dlgSgRemoteFetchMore.rbt"Fetch all commits for existing branches \(\"unshallow\"\)"=\
 Fetch all commits for existing branches \("unshallow"\)
dlgSgRemoteFetchMore.tle=Fetch More
dlgSgRemoteFetchMoreNoMoreBranches.fur=All branches which are present in the remote repository are already locally present as well.
dlgSgRemoteFetchMoreNoMoreBranches.hdl=There are no more remote branches to fetch.
dlgSgRemoteFetchMoreNoMoreBranches.tle=Fetch More
dlgSgRemoteProperties.chk"Perform background Poll or Fetch"=バックグラウンドでポールまたはフェッチを実行する
dlgSgRemoteProperties.edt"Push URL"=Push URL
dlgSgRemoteProperties.edt"URL or Path"=URL or Path
dlgSgRemoteProperties.hdl=リモートプロパティの設定
dlgSgRemoteProperties.inf=リモートのURLやその他のプロパティを変更します
dlgSgRemoteProperties.tle=Remote Properties
dlgSgRemoteSelect.edt"Remote"=リモート
dlgSgRemoteSelect.hdl=Initialize remote review database
dlgSgRemoteSelect.inf=Select the remote repository for which you want to initialize the review database.
dlgSgRemoteSelect.tle=Initialize Remote
dlgSgRemoteSetDepth.btn"Set Depth"=Set Depth
dlgSgRemoteSetDepth.edt"Depth"=Depth
dlgSgRemoteSetDepth.hdl=Set repository depth
dlgSgRemoteSetDepth.inf=Use a large number \(e.g. 100000\) to set an unlimited depth.
dlgSgRemoteSetDepth.tle=Set Depth
dlgSgRemotesAdd.btn"Add"=追加
dlgSgRemotesAdd.chk"Verify repository connection"=Verify repository connection
dlgSgRemotesAdd.edt"Name"=名前
dlgSgRemotesAdd.edt"URL or Path"=URL or Path
dlgSgRemotesAdd.hdl=リモートリポジトリの追加
dlgSgRemotesAdd.inf=Enter the URL and a short name for the remote repository.
dlgSgRemotesAdd.mni"Add Hosting Provider"=ホスティングプロバイダーを追加
dlgSgRemotesAdd.tle=リモートリポジトリを追加
dlgSgRemove.btn"Remove"=除去
dlgSgRemove.chk"Delete local files"=ローカルファイルの削除(消去)
dlgSgRemove.col"Directory"=ディレクトリ
dlgSgRemove.col"Name"=名前
dlgSgRemove.hdl=リポジトリからをファイル削除
dlgSgRemove.inf=リポジトリや作業ツリーから削除したい（追跡を停止したい）ファイルを選択します。
dlgSgRemove.tle=除去
dlgSgRenameBranch.btn"Rename"=リネーム
dlgSgRenameBranch.edt"Name"=名前
dlgSgRenameBranch.hdl=Rename branch
dlgSgRenameBranch.inf%1=Enter the new name for the branch '$1'.
dlgSgRenameBranch.tle=リネーム
dlgSgRenameFile.btn"Rename"=リネーム
dlgSgRenameFile.edt"Path"=Path
dlgSgRenameFile.hdl=Rename the file
dlgSgRenameFile.inf=Enter the new path and name of the file.
dlgSgRenameFile.tle=リネーム
dlgSgRenameRemote.btn"Rename"=リネーム
dlgSgRenameRemote.edt"Name"=名前
dlgSgRenameRemote.hdl=Change the name of an existing remote
dlgSgRenameRemote.inf=Provide the new name of the selected remote.
dlgSgRenameRemote.tle=Rename Remote Repository
dlgSgRenameRepository.btn"Rename"=リネーム
dlgSgRenameRepository.edt"Name"=名前
dlgSgRenameRepository.hdl=Rename repository
dlgSgRenameRepository.inf=Provide the new name for the repository. The repository directory will not be renamed.
dlgSgRenameRepository.tle=リネーム
dlgSgRepositoriesSearch.btn"Start Search"=検索
dlgSgRepositoriesSearch.col"Path"=Path
dlgSgRepositoriesSearch.edt"Found repository \(selected ones will be remembered\)"=\
 Found repository \(selected ones will be remembered\)
dlgSgRepositoriesSearch.edt"Search In"=Search In
dlgSgRepositoriesSearch.hdl=既存のローカルリポジトリの検索
dlgSgRepositoriesSearch.inf=検索対象のルートディレクトリを指定し、「検索」をクリックします。
dlgSgRepositoriesSearch.tle=リポジトリの検索
dlgSgRepositoryAddGroup.btn"Add"=追加
dlgSgRepositoryAddGroup.edt"Group Name"=グループ名
dlgSgRepositoryAddGroup.hdl=グループ名を入力してください
dlgSgRepositoryAddGroup.inf=グループ作成後は、その中でリポジトリを移動させることができます。
dlgSgRepositoryAddGroup.tle=グループを作成
dlgSgRepositoryClose.btn"Force Close"=Force Close
dlgSgRepositoryClose.btn"Force Exit"=Force Exit
dlgSgRepositoryClose.fur=Note that currently running Git processes might not be interrupted.
dlgSgRepositoryClose.hdl=本当に今すぐ閉じますか？
dlgSgRepositoryClose.tle=閉じる
dlgSgRepositoryFrameCloseWithoutPush.btn"Close Now"=今すぐ閉じる
dlgSgRepositoryFrameCloseWithoutPush.chk=次回から表示しない
dlgSgRepositoryFrameCloseWithoutPush.fur=You have pushable commits. Maybe you want to push them before closing this window.
dlgSgRepositoryFrameCloseWithoutPush.hdl=Do you want to close without having pushed commits?
dlgSgRepositoryFrameCloseWithoutPush.tle=閉じる
dlgSgRepositoryOpen.btn"Remove"=除去
dlgSgRepositoryOpen.fur=移動した場合は、削除して新しい場所を追加してください。
dlgSgRepositoryOpen.hdl%1=見つからないリポジトリ'$1'を削除しますか？
dlgSgRepositoryOpen.tle=Repository Opening
dlgSgRepositoryRemoveMultiGroup.fur=Repositories inside a removed group will be moved out of the group.
dlgSgRepositoryRemoveMultiGroup.hdl%1=グループ'$1'を削除しますか？
dlgSgRepositoryRemoveMultiRepo.fur=This will keep the repositories on disk, but just let SmartGit forget about them.
dlgSgRepositoryRemoveMultiRepo.hdl%1=リポジトリ'$1'を削除しますか？
dlgSgRepositoryRemoveMultiRepoMultiGroup.fur=This will keep the repositories on disk, but just let SmartGit forget about them. Repositories inside a removed group will be moved out of the group.
dlgSgRepositoryRemoveMultiRepoMultiGroup.hdl%2=リポジトリ'$1'とグループ'$2'を削除しますか？
dlgSgRepositoryRemoveMultiRepoSingleGroup.fur=This will keep the repositories on disk, but just let SmartGit forget about them. Repositories inside a removed group will be moved out of the group.
dlgSgRepositoryRemoveMultiRepoSingleGroup.hdl%2=リポジトリ'$1'とグループ'$2'を削除しますか？
dlgSgRepositoryRemoveSingleGroup.fur=Repositories inside a removed group will be moved out of the group.
dlgSgRepositoryRemoveSingleGroup.hdl%1=グループ'$1'を削除しますか？
dlgSgRepositoryRemoveSingleRepo.fur=This will keep the repositories on disk, but just let SmartGit forget about them.
dlgSgRepositoryRemoveSingleRepo.hdl%1=Do you want to remove the repository "$1"?
dlgSgRepositoryRemoveSingleRepoMultiGroup.fur=This will keep the repositories on disk, but just let SmartGit forget about them. Repositories inside a removed group will be moved out of the group.
dlgSgRepositoryRemoveSingleRepoMultiGroup.hdl%2=Do you want to remove the repository "$1" and $2 groups?
dlgSgRepositoryRemoveSingleRepoSingleGroup.fur=This will keep the repositories on disk, but just let SmartGit forget about them. Repositories inside a removed group will be moved out of the group.
dlgSgRepositoryRemoveSingleRepoSingleGroup.hdl%2=Do you want to remove the repository "$1" and the group "$2"?
dlg(SgRepositoryRemoveMultiGroup|SgRepositoryRemoveMultiRepo|SgRepositoryRemoveMultiRepoMultiGroup|SgRepositoryRemoveMultiRepoSingleGroup|SgRepositoryRemoveSingleGroup|SgRepositoryRemoveSingleRepo|SgRepositoryRemoveSingleRepoMultiGroup|SgRepositoryRemoveSingleRepoSingleGroup).btn"Remove"=除去
dlg(SgRepositoryRemoveMultiGroup|SgRepositoryRemoveMultiRepo|SgRepositoryRemoveMultiRepoMultiGroup|SgRepositoryRemoveMultiRepoSingleGroup|SgRepositoryRemoveSingleGroup|SgRepositoryRemoveSingleRepo|SgRepositoryRemoveSingleRepoMultiGroup|SgRepositoryRemoveSingleRepoSingleGroup).chk=次回から表示しない
dlg(SgRepositoryRemoveMultiGroup|SgRepositoryRemoveMultiRepo|SgRepositoryRemoveMultiRepoMultiGroup|SgRepositoryRemoveMultiRepoSingleGroup|SgRepositoryRemoveSingleGroup|SgRepositoryRemoveSingleRepo|SgRepositoryRemoveSingleRepoMultiGroup|SgRepositoryRemoveSingleRepoSingleGroup).tle=除去
dlgSgRepositorySettings.chk"Always fetch new commits, tags and branches from submodule"=\
 常にサブモジュールから新しいコミット、タグ、ブランチをフェッチする
dlgSgRepositorySettings.chk"Initialize new submodules"=新しいサブモジュールを初期化
dlgSgRepositorySettings.chk"Prune obsolete remote tracked branches"=廃止されたリモート追跡ブランチを削除します。
dlgSgRepositorySettings.chk"Remember as default"=デフォルトとして記憶する
dlgSgRepositorySettings.chk"Sign all commits"=すべてのコミッションに署名する
dlgSgRepositorySettings.chk"Update registered submodules"=登録されているサブモジュールの更新
dlgSgRepositorySettings.edt"Email"=電子メール
dlgSgRepositorySettings.edt"GPG Program"=GPG Program
dlgSgRepositorySettings.edt"Group Patterns"=グループパターン
dlgSgRepositorySettings.edt"Name"=名前
dlgSgRepositorySettings.edt"Signing Key"=署名キー
dlgSgRepositorySettings.edt"Single Patterns"=シングルパターン
dlgSgRepositorySettings.edt"Submodule handling\*"=サブモジュールの取り扱い\*
dlgSgRepositorySettings.edt"Text File Encoding"=テキストファイルのエンコーディング
dlgSgRepositorySettings.hdl=効果的なリポジトリ設定の編集
dlgSgRepositorySettings.inf=ここでは、ユーザー設定ファイルとリポジトリに対する効果的なGit設定を確認・編集することができます。\rオプションをユーザー設定として保存するには、「デフォルトとして記憶する」を選択します。
dlgSgRepositorySettings.lbl"Tags, branches and other refs matched by this configuration will be grouped in the File Log and show up in the Commit details. It will also be used for grouping the 'Tags'-category of the Branches view."=\
 この設定で一致したタグ、ブランチ、その他の参照は、ファイルログにまとめられ、コミットの詳細に表示されます。この設定は、ブランチ ビューの"Tags"カテゴリのグループ化にも使用されます。
dlgSgRepositorySettings.tab"Pull"=プル
dlgSgRepositorySettings.tab"Push"=プッシュ
dlgSgRepositorySettings.tab"Signing"=署名
dlgSgRepositorySettings.tab"Tag-Grouping"=タグ-グルーピング
dlgSgRepositorySettings.tab"User & Encoding"=ユーザーとエンコーディング
dlgSgRepositorySettings.tle=リポジトリの設定
dlgSgRepositorySettings.wrn"The entered email address does not look like a valid one."=\
 The entered email address does not look like a valid one.
dlgSgRepositorySettings.wrn"The name should not contain an email address."=\
 The name should not contain an email address.
dlgSgRepositorySettings.wrn"Without setting your name, you won't be able to commit."=\
 Without setting your name, you won't be able to commit.
dlgSgResetAdv.btn"Reset"=リセット
dlgSgResetAdv.chk"Thoroughly fix line endings according to .gitattributes"=\
 Thoroughly fix line endings according to .gitattributes
dlgSgResetAdv.chk"Thoroughly fix line-endings according to .gitattributes"=\
 Thoroughly fix line-endings according to .gitattributes
dlgSgResetAdv.hdl%1=Reset to commit $1
dlgSgResetAdv.inf=Reset the current branch head to the selected commit and optionally update Index and working tree.
dlgSgResetAdv.rbt"Don't touch the Index nor the working tree - 'soft'"=\
 Don't touch the Index nor the working tree - 'soft'
dlgSgResetAdv.rbt"Reset the Index and the working tree - 'hard'"=\
 Reset the Index and the working tree - 'hard'
dlgSgResetAdv.rbt"Reset the Index and the working tree, skipping modified files - 'keep'"=\
 Reset the Index and the working tree, skipping modified files - 'keep'
dlgSgResetAdv.rbt"Reset the Index and the working tree, skipping working tree modified files - 'merge'"=\
 インデックスと作業ツリーをリセットし、作業ツリーの修正ファイルをスキップする - 'merge'
dlgSgResetAdv.rbt"Reset the Index but not the working tree - 'mixed'"=\
 Reset the Index but not the working tree - 'mixed'
dlgSgResetAdv.tle=リセット
dlgSgResetConfirm.btn"Reset"=リセット
dlgSgResetConfirm.fur=Current staged and local changes will be lost!
dlgSgResetConfirm.hdl%1=Do you want to reset the HEAD to commit $1?
dlgSgResetConfirm.tle=リセット
dlgSgResolve.btn"Resolve"=Resolve
dlgSgResolve.chk"Stage file \(reset conflict state\)"=Stage file \(reset conflict state\)
dlgSgResolve.edt"Content"=Content
dlgSgResolve.hdl=Resolve Conflict
dlgSgResolve.inf=Select which content to use for the resolved file\(s\).
dlgSgResolve.rbt"Leave as is"=Leave as is
dlgSgResolve.rbt"Open Conflict Solver"=Open Conflict Solver
dlgSgResolve.rbt"Set to $1 \(\"ours\", $2\)"=Set to $1 \("ours", $2\)
dlgSgResolve.rbt"Set to $1 \(\"theirs\", $2\)"=Set to $1 \("theirs", $2\)
dlgSgResolve.rbt"Set to rebase target \(\"theirs\", $1\)"=\
 Set to rebase target \("theirs", $1\)
dlgSgResolve.rbt"Set to rebased branch '$1' \(\"ours\", $2\)"=\
 Set to rebased branch '$1' \("ours", $2\)
dlgSgResolve.tle=Resolve
dlgSgResolveSubmodule.btn"Resolve"=Resolve
dlgSgResolveSubmodule.hdl=Resolve Conflict
dlgSgResolveSubmodule.inf=Select to which submodule commit you want to resolve.
dlgSgResolveSubmodule.rbt"Check out and set submodule pointer to 'theirs' version"=\
 Check out and set submodule pointer to 'theirs' version
dlgSgResolveSubmodule.rbt"Leave submodule pointer as is"=Leave submodule pointer as is
dlgSgResolveSubmodule.tle=Resolve
dlgSgRevealCommitLocalOrTracked.btn"Reveal Local"=ローカルを表示
dlgSgRevealCommitLocalOrTracked.btn"Reveal Tracked"=追跡ブランチを表示
dlgSgRevealCommitLocalOrTracked.chk=常にローカルブランチを表示する
dlgSgRevealCommitLocalOrTracked.fur%2=どちらを表示するかを選択してください。\r'$1'\r'$2'
dlgSgRevealCommitLocalOrTracked.hdl=ローカルと追跡されたブランチのどちらを表示しますか？
dlgSgRevealCommitLocalOrTracked.tle=コミットを表示する
dlgSgRevertAndCommitConfirmSingle.btn"Revert && Commit"=Revert && Commit
dlgSgRevertAndCommitConfirmSingle.btn"Revert"=Revert
dlgSgRevertAndCommitConfirmSingle.fur=This will undo the changes introduced with the selected commit.
dlgSgRevertAndCommitConfirmSingle.hdl=Do you want to revert the selected commit?
dlgSgRevertAndCommitConfirmSingle.tle=Revert
dlgSgRevertInProgress.fur=You have to finish the Revert before you can continue. To finish the Revert use Commit, to abort use Discard.
dlgSgRevertInProgress.hdl=There is currently a Revert in progress.
dlgSgRevertInProgress.tle=Revert
dlgSgRevertNotAllConflictsResolved.chk=次回から表示しない
dlgSgRevertNotAllConflictsResolved.fur=You may need to resolve the conflicts before proceeding.
dlgSgRevertNotAllConflictsResolved.hdl=Reverting failed because of conflicts.
dlgSgRevertNotAllConflictsResolved.tle=Revert
dlgSgReviewCommentAdd.btn"Add"=追加
dlgSgReviewCommentAdd.hdl=コメントの追加
dlgSgReviewCommentAdd.tle=コメントを追加
dlgSgReviewCommentEdit.btn"Edit"=編集
dlgSgReviewCommentEdit.hdl=Edit comment
dlgSgReviewCommentEdit.tle=Edit Comment
dlgSgReviewCommentReply.btn"Reply"=返信
dlgSgReviewCommentReply.hdl=Reply to selected comment
dlgSgReviewCommentReply.tle=Reply To Comment
dlgSgReviewComment(Add|Edit|Reply).edt"Text"=Text
dlgSgReviewComment(Add|Edit|Reply).inf=Enter the text of the comment.
dlgSgReviewConfigureDisposeDatabase.btn"Dispose"=Dispose
dlgSgReviewConfigureDisposeDatabase.fur=This will disable the Reviewing system and unpushed local data will be lost.
dlgSgReviewConfigureDisposeDatabase.hdl=本当にローカルレビューのデータをすべて廃棄しますか？
dlgSgReviewConfigureDisposeDatabase.tle=Dispose Database
dlgSgReviewConfigureForGitHub.btn"Continue"=Continue
dlgSgReviewConfigureForGitHub.fur=This repository is connected to a GitHub server. GitHub comes with its own reviewing concepts, like commit comments and pull requests. Hence, you probably do not want to have SmartGit's review database in addition to GitHub's existing capabilities.
dlgSgReviewConfigureForGitHub.hdl=Do you really want to configure SmartGit's review database for your GitHub repository?
dlgSgReviewConfigureForGitHub.tle=レビューシステムの設定
dlgSgReviewConfigureIntializeNew.btn"Initialize"=初期化
dlgSgReviewConfigureIntializeNew.fur=これにより、現在のリポジトリに新しい レビューデータベースが作成され、後で他のリモートにプッシュされる可能性があります。
dlgSgReviewConfigureIntializeNew.hdl=新しいレビューデータベースを初期化しますか？
dlgSgReviewConfigureIntializeNew.tle=レビューシステムの設定
dlgSgReviewConfigureWhat.btn"Dispose Database"=Dispose Database
dlgSgReviewConfigureWhat.btn"Edit Users"=ユーザーの編集
dlgSgReviewConfigureWhat.btn"Initialize a Remote"=Initialize a Remote
dlgSgReviewConfigureWhat.fur=ユーザーデータベースでは、エイリアス（@mikeなど）を定義することができ、レビューコメントの中でチームメイトに声をかけやすくなります。
dlgSgReviewConfigureWhat.hdl=設定したい内容を選択してください。
dlgSgReviewConfigureWhat.tle=レビューデータベースの設定
dlgSgReviewPullRequestClose.edt"Comment"=コメント
dlgSgReviewPullRequestClose.hdl=Close Pull Request
dlgSgReviewPullRequestClose.inf=Enter the comment which will be logged when closing the pull request.
dlgSgReviewPullRequestClose.tle=Close Pull Request
dlgSgReviewPullRequestCreate.btn"Create"=作成
dlgSgReviewPullRequestCreate.edt"Assignees"=Assignees
dlgSgReviewPullRequestCreate.edt"Message"=メッセージ
dlgSgReviewPullRequestCreate.err"Unknown user '$1'."=Unknown user '$1'.
dlgSgReviewPullRequestCreate.hdl=プルリクエストを作成
dlgSgReviewPullRequestCreate.inf=プルリクエストは、あるブランチを別のブランチに統合することを提案するものです。
dlgSgReviewPullRequestCreate.lbl"The message will be displayed for the pull request node and will be the default commit message when integrating the pull request."=\
 The message will be displayed for the pull request node and will be the default commit message when integrating the pull request.
dlgSgReviewPullRequestCreate.lbl"The pull request will be highlighted to those users which are listed as assignees."=\
 プルリクエストは、担当者としてリストされているユーザーに対してハイライト表示されます。
dlgSgReviewPullRequestCreate.tle=プルリクエストを作成
dlgSgReviewPullRequestState.btn"Assign"=割り当て
dlgSgReviewPullRequestState.edt"Assignees"=Assignees
dlgSgReviewPullRequestState.edt"Comment"=コメント
dlgSgReviewPullRequestState.err"Unknown user '$1'."=Unknown user '$1'.
dlgSgReviewPullRequestState.hdl=Assign Pull Request
dlgSgReviewPullRequestState.inf=Enter the user\(s\) to which the Pull Request should be assigned to.
dlgSgReviewPullRequestState.tle=割り当て
dlgSgReviewUserAddEdit.edt"Aliases"=エイリアス
dlgSgReviewUserAddEdit.edt"Contact URI"=連絡先URI
dlgSgReviewUserAddEdit.edt"Email"=電子メール
dlgSgReviewUserAddEdit.edt"Name"=名前
dlgSgReviewUserAddEdit.err"Email address is not valid."=Email address is not valid.
dlgSgReviewUserAddEdit.err"Enter at least one alias."=Enter at least one alias.
dlgSgReviewUserAddEdit.hdl=ユーザの編集
dlgSgReviewUserAddEdit.inf=ユーザーの名前とメールアドレス（Gitで使用されているもの）、スペースまたはカンマで区切られた1つ以上のエイリアス、およびオプションの連絡先情報を入力します。
dlgSgReviewUserAddEdit.lbl"Aliases have to be alphanumeric and can be used in comments, like '@bob please check'."=\
 エイリアスは英数字でなければなりません。"@bob please check" のようにコメントに使用することができます。
dlgSgReviewUserAddEdit.lbl"Contact URIs are the primary way to contact users through SmartGit, e.g. 'mailto:bob@office.com' or 'skype:bob?chat'."=\
 連絡先URIは、SmartGitを通じてユーザーに連絡を取るための主要な手段です。例:'mailto:bob@office.com'   'skype:bob?chat'
dlgSgReviewUserAddEdit.tle=編集
dlgSgReviewUsersEdit.btn"Add"=追加
dlgSgReviewUsersEdit.btn"Edit"=編集
dlgSgReviewUsersEdit.btn"Import"=インポート
dlgSgReviewUsersEdit.btn"Remove"=除去
dlgSgReviewUsersEdit.col"Aliases"=エイリアス
dlgSgReviewUsersEdit.col"Email"=電子メール
dlgSgReviewUsersEdit.col"Name"=名前
dlgSgReviewUsersEdit.hdl=レビューデータベースのユーザー設定
dlgSgReviewUsersEdit.inf=ユーザーは、コメント文に使用されるエイリアスを持つことができ、オプションで連絡先情報を持つことができます。
dlgSgReviewUsersEdit.tle=Users設定
dlgSgSelectBranch.edt"Tracked Branch"=Tracked Branch
dlgSgSelectBranch.hdl=Select tracked branch
dlgSgSelectBranch.inf%1=Select the branch which should be tracked by '$1'.
dlgSgSelectBranch.tle=Set Tracked Branch
dlgSgSetup.btn"Configure Proxy"=プロキシ設定
dlgSgSetup.btn"Exit"=終了
dlgSgSetup.chk"Automatically send 'crash footprints' after an internal error has occurred"=\
 内部エラー発生後、自動的に「クラッシュフットプリント」を送信
dlgSgSetup.chk"I understand and agree to all terms and conditions of the"=\
 I understand and agree to all terms and conditions of the
dlgSgSetup.chk"Send usage statistics"=使用状況の統計情報の送信
dlgSgSetup.chk"Use gravatar.com to show images for the users"=\
 gravatar.comを使用してユーザーアイコンを表示する
dlgSgSetup.edt"Email"=電子メール
dlgSgSetup.edt"Git Executable"=Git 実行ファイル
dlgSgSetup.edt"Hg Executable"=Hg Executable
dlgSgSetup.edt"License File"=ライセンスファイル
dlgSgSetup.edt"Repository search"=Repository search
dlgSgSetup.edt"User Name"=ユーザ名
dlgSgSetup.inf"Decide whether you prefer a Commits \(Log History\) or Working Tree centric SmartGit main window. You can change this option later in the preferences."=\
 Decide whether you prefer a Commits \(Log History\) or Working Tree centric SmartGit main window. You can change this option later in the preferences.
dlgSgSetup.inf"If you are using SSH to connect to other Git repositories, select what SSH client to use. You can change it later in the Preferences."=\
 SSHを使って他のGitリポジトリに接続する場合は、使用するSSHクライアントを選択します。この設定は後から「環境設定」で変更できます。
dlgSgSetup.inf"Please review the following privacy options. gravatar.com can be used to show images of committers that they have uploaded there."=\
 Please review the following privacy options. gravatar.com can be used to show images of committers that they have uploaded there.
dlgSgSetup.inf"Please wait a few moments while searching for a Git or Hg installation."=\
 Please wait a few moments while searching for a Git or Hg installation.
dlgSgSetup.inf"User name and email will be stored as part of your commits. Here you can configure the default values which are stored in .gitconfig and .hgrc \(or mercurial.ini\)."=\
 ユーザー名とメールアドレスは、コミットの一部として保存されます。ここでは、.gitconfig と .hgrc \(又は mercurial.ini\)に保存されるデフォルト値を設定することができます。
dlgSgSetup.inf"User name and email will be stored as part of your commits. Here you can configure the default values which are stored in .gitconfig."=\
 ユーザー名とメールアドレスは、コミットの一部として保存されます。ここでは、.gitconfig に保存されるデフォルト値を設定することができます。
dlgSgSetup.inf"Welcome to SmartGit! Confirm that you are accepting the license agreement and whether your usage will be commercial or not."=\
 SmartGitへようこそ!使用許諾契約書に同意しているか、使用目的が商用であるかを確認してください。
dlgSgSetup.lbl"Please help to improve SmartGit's quality by automatically sending 'crash footprints' which do not contain any sensitive information. You can change this option later in the preferences.\n\nA 'crash footprint' contains details about your machine \(e.g. version of operating system\), SmartGit's version/build number, the JVM state and where the internal error occurred.\n\nIt contains NO POTENTIALLY SENSITIVE INFORMATION like user names, email addresses, file contents, file paths or server names."=\
 SmartGitの品質向上のために、機密情報を含まない「クラッシュフットプリント」を自動的に送信してください。クラッシュフットプリント」には、お使いのマシンの詳細（オペレーティングシステムのバージョンなど）、SmartGitのバージョン/ビルド番号、JVMの状態、内部エラーが発生した場所などが含まれますが、ユーザー名、メールアドレス、ファイルの内容、ファイルパス、サーバー名などの機密情報は一切含まれません。
dlgSgSetup.lbl"You confirm that you will use SmartGit solely for non-commercial purposes."=\
 お客様は、SmartGitを非商業的な目的でのみ使用することを確認します。
dlgSgSetup.lbl"You have purchased a SmartGit license and are eligible to use SmartGit for both commercial and non-commercial purposes."=\
 お客様は、SmartGitのライセンスを購入し、商用・非商用を問わず、SmartGitを使用することができます。
dlgSgSetup.lbl"You may try SmartGit free of charge for 30 days."=\
 You may try SmartGit free of charge for 30 days.
dlgSgSetup.rbt"Commits \(Log History\)"=Commits \(Log History\)
dlgSgSetup.rbt"Free SmartGit evaluation for commercial use"=\
 Free SmartGit evaluation for commercial use
dlgSgSetup.rbt"Non-commercial use only \(most features, no support\)"=\
 Non-commercial use only \(most features, no support\)
dlgSgSetup.rbt"Registered user, commercial use \(all features, support\)"=\
 Registered user, commercial use \(all features, support\)
dlgSgSetup.rbt"Undecided"=Undecided
dlgSgSetup.rbt"Use SmartGit as SSH client"=SmartGitをSSHクライアントとして使用
dlgSgSetup.rbt"Use system SSH client"=システムSSHクライアントの使用
dlgSgSetup.rbt"Working Tree \(SmartGit 19.1 defaults\)"=Working Tree \(SmartGit 19.1 defaults\)
dlgSgSetup.rbt"Working Tree"=ワーキングツリー
dlgSgSetup.tle=Setup SmartGit
dlgSgShowLocalChanges.btn"Compare"=比較
dlgSgShowLocalChanges.hdl=File preview.html.erb modified in Index and working tree
dlgSgShowLocalChanges.inf=Select the file states to compare.
dlgSgShowLocalChanges.rbt"HEAD vs. Index"=HEAD vs. Index
dlgSgShowLocalChanges.rbt"HEAD vs. Working Tree"=HEAD vs. Working Tree
dlgSgShowLocalChanges.rbt"Index vs. Working Tree"=Index vs. Working Tree
dlgSgShowLocalChanges.tle=比較する
dlgSgSshCredentials.btn"Login"=ログイン
dlgSgSshCredentials.chk"Store passphrase"=Store passphrase
dlgSgSshCredentials.chk"Store password"=パスワードの保存
dlgSgSshCredentials.edt"Authentication Type"=認証タイプ
dlgSgSshCredentials.edt"Passphrase"=Passphrase
dlgSgSshCredentials.edt"Password"=パスワード
dlgSgSshCredentials.edt"Private Key File"=秘密鍵ファイル
dlgSgSshCredentials.hdl=SSH Credentials
dlgSgSshCredentials.inf=ユーザー「root」としてSSHサーバー「git」を認証するための認証情報を入力します。
dlgSgSshCredentials.rbt"Password"=パスワード
dlgSgSshCredentials.rbt"Private Key"=秘密鍵
dlgSgSshCredentials.tle=SSH認証
dlgSgSshCredentials.wrn"$1"=$1
dlgSgStageNoFilesFound.fur=Could not find files with modified working tree, untracked or missing files.
dlgSgStageNoFilesFound.hdl=No files found that could be staged.
dlgSgStageNoFilesFound.tle=ステージ
dlgSgStashAll.btn"+ Keep Index"=+ Keep Index
dlgSgStashAll.btn"+ Keep Working Tree"=+ Keep Working Tree
dlgSgStashAll.btn"Stash All"=すべての変更を隠す
dlgSgStashAll.btn"Stash Selection"=選択した変更を隠す
dlgSgStashAll.edt"Message"=メッセージ
dlgSgStashAll.hdl=Stash Index and Working Tree changes
dlgSgStashAll.inf=The saved stash can be applied later. By default, Index and Working Tree are cleaned, but you may keep the Index or both.
dlgSgStashAll.tle=スタッシュに退避
dlgSgStashApply.btn"Apply && Drop"=Apply && Drop
dlgSgStashApply.btn"Apply"=適用
dlgSgStashApply.chk"Restore Index"=Restore Index
dlgSgStashApply.hdl"Apply a previously saved stash"=以前に保存したスタッシュを適用
dlgSgStashApply.hdl"Apply the latest saved stash"=Apply the latest saved stash
dlgSgStashApply.inf=Decide how to apply the stash to the Index or working tree.
dlgSgStashApply.tle=スタッシュを適用する
dlgSgStashApplyWithoutRestoringIndex.btn"Try Without Restoring Index"=Try Without Restoring Index
dlgSgStashApplyWithoutRestoringIndex.fur=Restoring the index failed while applying the patch.
dlgSgStashApplyWithoutRestoringIndex.hdl=Should the stash been applied without restoring the index?
dlgSgStashApplyWithoutRestoringIndex.tle=スタッシュを適用する
dlgSgStashOnDemandConfirmation.btn"Discard"=破棄
dlgSgStashOnDemandConfirmation.btn"Save Stash"=スタッシュに保存
dlgSgStashOnDemandConfirmation.chk=自動的にスタッシュを保存
dlgSgStashOnDemandConfirmation.fur=後で手動で再適用するためのに変更をスタッシュに退避するか、変更を廃棄するか選択してください。
dlgSgStashOnDemandConfirmation.hdl=ワーキングツリー/Indexの変更をどのようにしますか？
dlgSgStashOnDemandConfirmation.tle=リセット
dlgSgStashOnDemandLocalChangesCantBeReapplied.fur=Once you have concluded the Pull, you should manually apply the latest stash to get your local changes back into the working tree.
dlgSgStashOnDemandLocalChangesCantBeReapplied.hdl=Your local changes have been stashed away, but could not be reapplied.
dlgSgStashOnDemandLocalChangesCantBeReapplied.tle=プル
dlgSgStashRename.btn"Rename"=リネーム
dlgSgStashRename.edt"Message"=メッセージ
dlgSgStashRename.hdl=リネーム
dlgSgStashRename.inf=スタッシュの新しいメッセージを入力してください
dlgSgStashRename.tle=リネーム
dlgSgStashesDropConfirm.btn"Drop Stash"=スタッシュを削除
dlgSgStashesDropConfirm.btn"Drop Stashes"=スタッシュを削除
dlgSgStashesDropConfirm.fur=スタッシュに保存された変更内容は失われます。
dlgSgStashesDropConfirm.hdl=選択したスタッシュを削除しますか？
dlgSgStashesDropConfirm.tle=スタッシュを削除
dlgSgSubmoduleAdd.chk"Map SVN trunk, tags and branches to Git"=\
 Map SVN trunk, tags and branches to Git
dlgSgSubmoduleAdd.edt"Local Directory"=Local Directory
dlgSgSubmoduleAdd.edt"Local Path"=Local Path
dlgSgSubmoduleAdd.edt"Repository URL"=リポジトリ URL
dlgSgSubmoduleAdd.edt"URL"=URL
dlgSgSubmoduleAdd.inf"Provide the path where the submodule should be added relative to the outer repository root directory."=\
 Provide the path where the submodule should be added relative to the outer repository root directory.
dlgSgSubmoduleAdd.inf"Specify the repository to clone as submodule."=\
 Specify the repository to clone as submodule.
dlgSgSubmoduleAdd.mni"Add Hosting Provider"=Add Hosting Provider
dlgSgSubmoduleAdd.rbt"Local repository"=ローカルリポジトリ
dlgSgSubmoduleAdd.rbt"Remote repository"=リモートリポジトリ
dlgSgSubmoduleAdd.tle=サブモジュールを追加
dlgSgSubmoduleDeinitConfirm.btn"Deinit"=Deinit
dlgSgSubmoduleDeinitConfirm.fur=The submodule will be skipped from the working tree. To get rid from the \(remote\) repository, you have to use Unregister instead.
dlgSgSubmoduleDeinitConfirm.hdl%1=Do you want to deinit submodule '$1'?
dlgSgSubmoduleDeinitConfirm.tle=Deinit Submodule
dlgSgSubmoduleInitAll.btn"Initialize"=Initialize
dlgSgSubmoduleInitAll.chk"Pull submodule repositories"=Pull submodule repositories
dlgSgSubmoduleInitAll.hdl=Initialize all submodules
dlgSgSubmoduleInitAll.inf=Submodule entries will be added to .git/config. You may customize the URLs afterwards or pull immediately.
dlgSgSubmoduleInitAll.tle=Initialize Submodule
dlgSgSubmoduleRegister.edt"URL"=URL
dlgSgSubmoduleRegister.hdl=Register nested root as submodule
dlgSgSubmoduleRegister.inf=Select the URL for the submodule to register.
dlgSgSubmoduleRegister.tle=Register Submodule
dlgSgSubmoduleResetConfirm.btn"Reset"=リセット
dlgSgSubmoduleResetConfirm.fur=The corresponding commit will be checked out, so the submodule content will match the content of the registered commit.
dlgSgSubmoduleResetConfirm.hdl%1=Do you want to reset submodule '$1' to the commit registered in the repository?
dlgSgSubmoduleResetConfirm.tle=Reset Submodule
dlgSgSubmoduleUnregisterConfirm.btn"Unregister"=Unregister
dlgSgSubmoduleUnregisterConfirm.fur=All relevant files will be adjusted. Afterwards you will only need to perform a commit to finish the operation. To just skip the submodule from the working tree, use Deinit.
dlgSgSubmoduleUnregisterConfirm.tle=Unregister Submodule
dlgSgSvnClientCertificate.btn"Login"=ログイン
dlgSgSvnClientCertificate.chk"Store passphrase"=Store passphrase
dlgSgSvnClientCertificate.edt"Certificate"=証明書
dlgSgSvnClientCertificate.edt"Passphrase"=Passphrase
dlgSgSvnClientCertificate.hdl=Client Certificate
dlgSgSvnClientCertificate.inf%1=Provide the client certificate for authentication to the SVN repository '$1'.
dlgSgSvnClientCertificate.tle=SVN認証
dlgSgSvnClientCertificate.wrn"Authentication to the SVN repository '$1' failed with error: $2"=\
 Authentication to the SVN repository '$1' failed with error: $2'
dlgSgSvnSslFingerprintChanged.btn"Accept"=Accept
dlgSgSvnSslFingerprintChanged.btn"Reject"=Reject
dlgSgSvnSslFingerprintChanged.edt"MD5 fingerprint"=MD5 fingerprint
dlgSgSvnSslFingerprintChanged.edt"SHA fingerprint"=SHA fingerprint
dlgSgSvnSslFingerprintChanged.edt"Server"=サーバ
dlgSgSvnSslFingerprintChanged.lbl"The server fingerprint has changed! Is the change correct?"=\
 The server fingerprint has changed! Is the change correct?
dlgSgSvnSslFingerprintChanged.lbl"This might indicate a security problem! When in doubt, contact your server administrator."=\
 This might indicate a security problem! When in doubt, contact your server administrator.
dlgSgSvnSslFingerprintChanged.tle=SVN認証
dlgSgSyncConfirm.btn"Synchronize"=同期
dlgSgSyncConfirm.chk=次回から表示しない
dlgSgSyncConfirm.fur=まず、ローカルの変更がプッシュされ、次に可能性のあるリモートの変更がプルされます。\r通常のプッシュに比べて優れているのは、リモートの変更が原因で失敗した場合、それらが自動的にプルされることです。
dlgSgSyncConfirm.hdl=同期を実行しますか？
dlgSgSyncConfirm.tle=同期
dlgSgTagAdd.btn"Add Tag && Push"=Add Tag && Push
dlgSgTagAdd.btn"Add Tag"=タグを追加
dlgSgTagAdd.edt"Annotated Tag Message"=Annotated Tag Message
dlgSgTagAdd.edt"Tag"=Tag
dlgSgTagAdd.err"The name must not end with a slash or dot."=\
 The name must not end with a slash or dot.
dlgSgTagAdd.hdl=現在のHEADコミットにタグを追加
dlgSgTagAdd.inf=Enter the name of the tag to create. If entering a message, an annotated tag is created.
dlgSgTagAdd.tle=タグを追加
dlgSgTagAddOverwrite.btn"Overwrite"=上書き
dlgSgTagAddOverwrite.fur=Click 'Cancel' to choose a different tag name.
dlgSgTagAddOverwrite.hdl%1=The tag '$1' already exists. Do you want to overwrite it?
dlgSgTagAddOverwrite.tle=タグを追加
dlgSgTagDeleteConfirmSingle.btn"Delete"=削除
dlgSgTagDeleteConfirmSingle.chk%1=Delete from remote '$1'
dlgSgTagDeleteConfirmSingle.fur=You will not be able to restore it.
dlgSgTagDeleteConfirmSingle.hdl%1=タグ'$1'を削除しますか？
dlgSgTagDeleteConfirmSingle.tle=削除
dlgSgToolAdd.edt"Keyboard Shortcut"=Keyboard Shortcut
dlgSgToolAdd.hdl=外部ツールの追加
dlgSgToolAdd.mni"2nd Commit ID or Ref"=2nd Commit ID or Ref
dlgSgToolAdd.tle=追加
dlgSgToolEdit.edt"Keyboard Shortcut"=キーボード ショートカット
dlgSgToolEdit.err"Please enter the name for this command."=\
 Please enter the name for this command.
dlgSgToolEdit.err"Select the command which should be invoked."=\
 Select the command which should be invoked.
dlgSgToolEdit.hdl=Edit external tool
dlgSgToolEdit.tle=編集
dlgSgTool(Add|Edit).btn"Clear"=クリア
dlgSgTool(Add|Edit).chk"Can be used by the Open command"=\
 「開く」コマンドで使用可能
dlgSgTool(Add|Edit).chk"Request confirmation before invoking:"=起動する前に確認を求める
dlgSgTool(Add|Edit).chk"Show output and wait until finished"=\
 出力を表示し、終了するまで待機する
dlgSgTool(Add|Edit).edt"Accelerator"=Accelerator
dlgSgTool(Add|Edit).edt"Applies To"=適用対象
dlgSgTool(Add|Edit).edt"Arguments"=引数
dlgSgTool(Add|Edit).edt"Command"=コマンド
dlgSgTool(Add|Edit).edt"Handles"=対象
dlgSgTool(Add|Edit).edt"Menu Item Name"=メニュー項目名
dlgSgTool(Add|Edit).inf=Define the name of the tool menu item, the command which should be executed and configure its arguments. The used variables define on what selection the tool may be used.
dlgSgTool(Add|Edit).lbl"Valid wildcards are ?\u00a0\(one arbitrary character\) and \*\u00a0\(any number of arbitrary characters\). Separate multiple patterns by comma. Example:\u00a0\*.txt,\u00a0\*.html"=\
 有効なワイルドカードは下記のとおりです。複数のパターンはコンマで区切ります。\r例：*.txt,*.html \r ? (任意の1文字) \r * (任意の数の任意の文字)
dlgSgTool(Add|Edit).mni"2nd Commit ID or Ref \(optional\)"=\
 2nd Commit ID or Ref \(optional\)
dlgSgTool(Add|Edit).mni"Commit ID or Ref"=Commit ID or Ref
dlgSgTool(Add|Edit).mni"Configured Text File Encoding"=設定されたテキストファイルのエンコーディング
dlgSgTool(Add|Edit).mni"File or Directory Name"=File or Directory Name
dlgSgTool(Add|Edit).mni"File or Directory Path"=File or Directory Path
dlgSgTool(Add|Edit).mni"File or Directory URI"=File or Directory URI
dlgSgTool(Add|Edit).mni"Git Executable"=Git 実行ファイル
dlgSgTool(Add|Edit).mni"Git Installation"=Git Installation
dlgSgTool(Add|Edit).mni"Hg Executable"=Hg Executable
dlgSgTool(Add|Edit).mni"Hg Installation"=Hg Installation
dlgSgTool(Add|Edit).mni"Remote \(Push\) URL"=Remote \(Push\) URL
dlgSgTool(Add|Edit).mni"Repository Root Path"=Repository Root Path
dlgSgTool(Add|Edit).mni"Selection File"=Selection File
dlgSgTool(Add|Edit).mni"Show Directory Selection Dialog"=Show Directory Selection Dialog
dlgSgTool(Add|Edit).mni"Show Open File Dialog"=Show Open File Dialog
dlgSgTool(Add|Edit).mni"Show Save File Dialog"=Show Save File Dialog
dlgSgTool(Add|Edit).mni"SmartGit Installation"=SmartGit Installation
dlgSgTool(Add|Edit).rbt"Both"=両方
dlgSgTool(Add|Edit).rbt"Directories"=ディレクトリ
dlgSgTool(Add|Edit).rbt"Files"=ファイル
dlgSgTool(Add|Edit).rbt"Refs"=Refs
dlgSgTool(Add|Edit).rbt"SHAs"=SHAs
dlgSgToolInvoke.btn"Proceed"=進む
dlgSgToolInvoke.fur=確認すると、外部ツールの起動に進みます。
dlgSgUndoLastCommitConfirm.btn"Undo"=元に戻す\(Undo\)
dlgSgUndoLastCommitConfirm.fur"Message: $1"=Message: $1
dlgSgUndoLastCommitConfirm.fur"Undoing an already pushed commit might cause serious problems!\n\nMessage: $1"=\
 Undoing an already pushed commit might cause serious problems!\n\nMessage: $1
dlgSgUndoLastCommitConfirm.hdl=Do you want to undo the last local commit?
dlgSgUndoLastCommitConfirm.tle=直前のコミットを元に戻す
dlgSgUnstageNoFilesFound.fur=Could not find files with staged changes.
dlgSgUnstageNoFilesFound.hdl=No files found that could be unstaged.
dlgSgUnstageNoFilesFound.tle=アンステージ
dlgSgWelcome.chk"Show this dialog if no repository was opened"=\
 リポジトリが開かれていない場合にこのダイアログを表示する
dlgSgWelcome.hdl=何をしますか？
dlgSgWelcome.inf=新規のローカルリポジトリを開くか、リモートリポジトリをクローンするか、既存のリポジトリを開くかを選択します。
dlgSgWelcome.rbt"Add an existing local or create a new repository"=\
 既存のローカルリポジトリの追加又は新しいリポジトリを作成する
dlgSgWelcome.rbt"Clone existing repository"=既存のリポジトリをクローンする
dlgSgWelcome.rbt"Reopen previously used repository:"=以前使用していたリポジトリを開く
dlgSgWelcome.tle=SmartGitへようこそ
dlgSgWorktreeAdd.edt"Branch"=ブランチ
dlgSgWorktreeAdd.edt"Directory"=ディレクトリ
dlgSgWorktreeAdd.hdl=Create another worktree from this repository
dlgSgWorktreeAdd.inf=Select the branch and directory to use for the new worktree.
dlgSgWorktreeAdd.tle=ワークツリーを追加
dlgSgWorktreeAddNoMoreLocalBranches.fur=You only can create worktrees for existing local branches that don't yet have an associated worktree.
dlgSgWorktreeAddNoMoreLocalBranches.hdl=No \(more\) local branches available.
dlgSgWorktreeAddNoMoreLocalBranches.tle=ワークツリーを追加
dlgSgWorktreePruneNoWorktree.fur=All your worktrees are still available.
dlgSgWorktreePruneNoWorktree.hdl=No worktree to prune.
dlgSgWorktreePruneNoWorktree.tle=廃止されたワークツリーを整理する
dlgShPushTrackingLocalSvnBranches.btn"Push as New"=Push as New
dlgShPushTrackingLocalSvnBranches.btn"Push onto Existing"=Push onto Existing
dlgShPushTrackingLocalSvnBranches.fur=You are going to push local branches back to the SVN repository. These branches may either be pushed as new branches or onto their existing SVN counterparts \(recommended in most cases\).
dlgShPushTrackingLocalSvnBranches.hdl=Do you want to push local branches as new SVN branches?
dlgShPushTrackingLocalSvnBranches.tle=プッシュ
edt"Search For"=Search For
gdlgScConflictSolverAdd.inf=Define the file pattern \(e.g. \*.txt\) and select the merge tool which should be used to resolve conflicting files matching this pattern.
pop"$1 succeeded."=$1 が成功しました。
pop"Command $1 has been aborted."=Command $1 has been aborted.
pop"Modify the previous commit and commit."=\
 前回のコミットを修正し、コミットする。
pop"No more changes."=No more changes.
pop"Select the remote to fetch from."=\
 Select the remote to fetch from.
pop"Select the remote to rename."=Select the remote to rename.
pop"Select the stash to rename."=Select the stash to rename.
pop"There are no obsolete local branches."=\
 廃止されたローカルブランチはありません。
pop"There is no action available for this drop operation."=\
 There is no action available for this drop operation.
pop"Unstage unwanted changes for the 1st commit, and commit."=\
 Unstage unwanted changes for the 1st commit, and commit.
wndAnnotate.edt"Commit"=コミット
wndAnnotate.edt"Highlight"=ハイライト
wndAnnotate.edt"View Commit"=View Commit
wndAnnotate.mniCommit-first=Go to First Commit
wndAnnotate.mniCommit-last=Go to Last Commit
wndAnnotate.mniCommit-next=次のコミットに進む
wndAnnotate.mniCommit-preceding-line=Go to Preceding Commit
wndAnnotate.mniCommit-previous=前のコミットに移動
wndAnnotate.mniCompare=比較する
wndAnnotate.mniCustomize=カスタマイズ
wndAnnotate.mniEdit-copy=コピー
wndAnnotate.mniFile-close=閉じる
wndAnnotate.mniGoto-line=指定の行へ移動
wndAnnotate.mniLog=ログを開く
wndAnnotate.mniSearch-find=検索
wndAnnotate.mniSearch-next=次を検索
wndAnnotate.mniSearch-previous=前を検索
wndAnnotate.mniSet-syntax=Syntax Language
wndAnnotate.mniShowChanges=比較する
wndAnnotate.mniUndo-goto=Undo Go To
wndAnnotate.mniView-settings=設定
wndAnnotate.mniWindowHideView=Hide View
wndAnnotate.mniWindowLineHistory=Line History
wndAnnotate.mnu"Edit"=編集
wndAnnotate.mnu"File"=ファイル
wndAnnotate.mnu"Go To"=移動
wndAnnotate.mnu"View"=表示
wndAnnotate.rbt"Commit Index"=Commit Index
wndAnnotate.rbt"Time"=Time
wndAnnotate.tab"Document"=Document
wndAnnotate.tab"History of current line"=History of current line
wndCompare.mniRefresh=再読込
wndCompare.mniView-layout-left-beside-right=左右に並べて表示
wndCompare.mniView-layout-left-over-right=上下に並べて表示\(上にLeft,下にRight\)
wndCompare.tbtEdit-take-left=Take the left block to the right. Depending on the left block, this will insert, replace or delete at the right.
wndCompare.tbtEdit-take-right=Take the right block to the left. Depending on the right block, this will insert, replace or delete at the left.
wndCompare.tbtGoto-next-diff=次の変更点に進みます。
wndCompare.tbtGoto-previous-diff=前の変更点に移動
wndCompare.tbtRefresh=Reload content from file system and recompare.
wndConflictSolver.mni"Apply Inner-line Difference to Middle"=Apply Inner-line Difference to Middle
wndConflictSolver.mni"Apply Line to Middle"=Apply Line to Middle
wndConflictSolver.mni"Apply Selection to Middle"=Apply Selection to Middle
wndConflictSolver.mniView-layout-all=全て
wndConflictSolver.mniView-layout-left-merge=Left and Merge
wndConflictSolver.mniView-layout-left-right-above-merge=Left and Right Above Merge
wndConflictSolver.mniView-layout-right-merge=Merge and Right
wndConflictSolver.tbr"All"=全て
wndConflictSolver.tbr"Base + Right"=Base + Right
wndConflictSolver.tbr"Base Below"=Base Below
wndConflictSolver.tbr"Base Changes"=Base Changes
wndConflictSolver.tbr"Left + Base"=Left + Base
wndConflictSolver.tbr"Left + Merge"=Left + Merge
wndConflictSolver.tbr"Merge + Right"=Merge + Right
wndConflictSolver.tbr"Merge Below"=Merge Below
wndConflictSolver.tbr"Next Conflict"=次の競合
wndConflictSolver.tbr"Prev. Conflict"=前の競合
wndConflictSolver.tbr"Take Left, Right"=Take Left, Right
wndConflictSolver.tbr"Take Right, Left"=Take Right, Left
wndConflictSolver.tbtEdit-take-left=Take the left block to the merge result. Depending on the left block, this will insert, replace or delete at the merge result.
wndConflictSolver.tbtEdit-take-right-left=Take the right block, then the left one.
wndConflictSolver.tbtFile-open-base=Open the left and right changes from the common base file.
wndConflictSolver.tbtGoto-next-conflict=次の競合に進む
wndConflictSolver.tbtGoto-next-diff=Go to next change.
wndConflictSolver.tbtGoto-previous-conflict=Go to previous conflict.
wndDeepgit.btn"Go Deeper"=Go Deeper
wndDeepgit.col"File"=ファイル
wndDeepgit.col"Modifications"=変更点
wndDeepgit.mni"Copy Selection"=選択範囲をコピー
wndDeepgit.mniAbout=DeepGitについて
wndDeepgit.mniBack=Go Back
wndDeepgit.mniConfigureRefGroups=タグ-グルーピング
wndDeepgit.mniEdit-copy=コピー
wndDeepgit.mniExtendLineToBlock=Extend Lines To Blocks
wndDeepgit.mniFile-close=閉じる
wndDeepgit.mniFilterAddSelection=選択フィルタを追加
wndDeepgit.mniFilterReset=Reset Filter
wndDeepgit.mniFilterSetSelection=Set Selection as Filter
wndDeepgit.mniFollowRenames=Follow Renames
wndDeepgit.mniForward=Go Forward
wndDeepgit.mniGoto-line=指定の行へ移動
wndDeepgit.mniGoto-next-diff=次の変更
wndDeepgit.mniGoto-previous-diff=前の変更
wndDeepgit.mniHighlightBlameChanges=現在のBlameコミットの変更をハイライト
wndDeepgit.mniHighlightOriginChanges=現在のOriginコミットの変更をハイライト
wndDeepgit.mniIgnoreWhitespaceOnlyChanges=Ignore Whitespace Changes
wndDeepgit.mniLicenseAgreement=ライセンス契約
wndDeepgit.mniNextChange=次の変更
wndDeepgit.mniOpenFileLog=Open File Log
wndDeepgit.mniOpenRepositoryLog=Open Repository Log
wndDeepgit.mniOptimizeCreationOrigins=Optimize 'Appeared Here' Origins
wndDeepgit.mniPerspectiveBlameOrigin=Blame+Origins Perspective
wndDeepgit.mniPerspectiveBlameSimple=Blame Perspective
wndDeepgit.mniPerspectiveCommit=Log Perspective
wndDeepgit.mniPerspectiveHistory=Diff Perspective
wndDeepgit.mniPerspectiveOrigins=Origins Perspective
wndDeepgit.mniPreviousChange=前の変更
wndDeepgit.mniResetInlineHelp=Reshow All Inline Help
wndDeepgit.mniSearch-find=検索
wndDeepgit.mniSearch-next=次を検索
wndDeepgit.mniSearch-previous=前を検索
wndDeepgit.mniSetEncoding=Encoding
wndDeepgit.mniShowLineNumbers=行番号の表示
wndDeepgit.mniShowOnRefs=Show On Refs in Navigation
wndDeepgit.mniToggleLineHistory=Line History
wndDeepgit.mniViewToolbar=ツールバーを表示
wndDeepgit.mniWindowHorizontalLayout=Horizontal Blame + Origins Layout
wndDeepgit.mniWindowVerticalLayout=Vertical Blame + Origins Layout
wndDeepgit.mnu"Edit"=編集
wndDeepgit.mnu"File"=ファイル
wndDeepgit.mnu"Go To"=移動
wndDeepgit.mnu"Help"=ヘルプ
wndDeepgit.mnu"View"=表示
wndDeepgit.tbr"Back"=戻る
wndDeepgit.tbr"Blame"=ブレーム
wndDeepgit.tbr"Blame+Origins"=Blame+Origins
wndDeepgit.tbr"Diff"=Diff
wndDeepgit.tbr"Forward"=進む
wndDeepgit.tbr"Log"=ログ
wndDeepgit.tbr"Origins"=Origins
wndDeepgit.tbt"Go to next change."=Go to next change.
wndDeepgit.tbt"Go to previous change."=前の変更点に移動
wndDeepgit.tbtBack=前のブレームに戻る...
wndDeepgit.tbtForward=次のブレームに進む...
wndDeepgit.tbtPerspectiveBlameOrigin=Find where the line originates from in cases where you need to choose from one of possible Origins.
wndDeepgit.tbtPerspectiveBlameSimple=Find where the line originates from in simple cases when there are no alternative Origins.
wndDeepgit.tbtPerspectiveCommit=Investigate Log.
wndDeepgit.tbtPerspectiveHistory=Investigate Diff between file's revisions.
wndDeepgit.tbtPerspectiveOrigins=Find out what else happened where the line originates from.\n\nSelected origin candidate can't be investigated because it doesn't reflect a real change.
wndEditor.mniEdit-undo=取り消し\(Undo\)
wndGit.indexEditor.mni"Discard Inner-line Change"=Discard Inner-line Change
wndGit.indexEditor.mni"Discard Line"=Discard Line
wndGit.indexEditor.mni"Discard Selection"=Discard Selection
wndGit.indexEditor.mni"Stage Inner-line Change"=Stage Inner-line Change
wndGit.indexEditor.mni"Stage Line"=Stage Line
wndGit.indexEditor.mni"Stage Selection"=Stage Selection
wndGit.indexEditor.mni"Unstage Inner-line Change"=Unstage Inner-line Change
wndGit.indexEditor.mni"Unstage Line"=Unstage Line
wndGit.indexEditor.mni"Unstage Selection"=Unstage Selection
wndGit.indexEditor.mniView-layout-all=全て
wndGit.indexEditor.mniView-layout-head-index=HEAD と Index
wndGit.indexEditor.mniView-layout-head-index-wt=全て
wndGit.indexEditor.mniView-layout-head-wt-above-index=HEAD and Working Tree Above Index
wndGit.indexEditor.mniView-layout-index-wt=Index と Working Tree
wndGit.indexEditor.mniView-layout-left-merge=HEAD and Index
wndGit.indexEditor.mniView-layout-left-right-above-merge=HEAD and Working Tree Above Index
wndGit.indexEditor.mniView-layout-right-merge=Index and Working Tree
wndGit.indexEditor.tbtEdit-take-left=Take the left block to the merge result. Depending on the left block, this will insert, replace or delete at the merge result.
wndGit.indexEditor.tbtEdit-take-right=Take the right block to the merge result. Depending on the right block, this will insert, replace or delete at the merge result.
wndGit.indexEditor.tbtFile-save=Save file modifications.
wndGit.indexEditor.tbtGoto-next-diff=Go to next change.
wndGit.indexEditor.tbtGoto-previous-diff=前の変更点に移動します。
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mni"Copy Selection"=選択範囲をコピー
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniCustomize=カスタマイズ
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniEdit-copy=コピー
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniEdit-cut=切り取り
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniEdit-ignore-case-changes=行比較で大文字小文字を区別しない
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniEdit-paste=貼り付け
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniEdit-redo=やり直し\(Redo\)
wnd(Compare|ConflictSolver|Git.indexEditor).mniEdit-take-left=左のブロックを採用
wnd(Compare|ConflictSolver|Git.indexEditor).mniEdit-take-left-right=Take Left, then Right Block
wnd(Compare|ConflictSolver|Git.indexEditor).mniEdit-take-right=右のブロックを採用
wnd(Compare|ConflictSolver|Git.indexEditor).mniEdit-take-right-left=Take Right, then Left Block
wnd(Compare|ConflictSolver|Git.indexEditor).mniEdit-undo=取り消し\(Undo\)
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniFile-close=閉じる
wnd(Compare|ConflictSolver|Git.indexEditor).mniFile-export-html=HTMLファイルとしてエクスポート
wnd(Compare|ConflictSolver|Git.indexEditor).mniFile-open-base=Open Base File Changes
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniFile-save=保存
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniGoto-line=指定の行へ移動
wnd(Compare|ConflictSolver|Git.indexEditor).mniGoto-next-conflict=次の競合
wnd(Compare|ConflictSolver|Git.indexEditor).mniGoto-next-diff=次の変更
wnd(Compare|ConflictSolver|Git.indexEditor).mniGoto-previous-conflict=前の競合
wnd(Compare|ConflictSolver|Git.indexEditor).mniGoto-previous-diff=前の変更
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniSearch-find=検索
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniSearch-next=次を検索
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniSearch-previous=前を検索
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniSearch-replace=検索と置換
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mniSet-syntax=Syntax Language
wnd(Compare|ConflictSolver|Git.indexEditor).mniShow-line-numbers=行番号の表示
wnd(Compare|ConflictSolver|Git.indexEditor).mniView-ignore-whitespaces-all=行比較で空白をすべて無視する
wnd(Compare|ConflictSolver|Git.indexEditor).mniView-ignore-whitespaces-leading-trailing=行比較で先頭と行末の空白を無視する
wnd(Compare|ConflictSolver|Git.indexEditor).mniView-ignore-whitespaces-none=行比較で空白を無視しない
wnd(Compare|ConflictSolver|Git.indexEditor).mniView-refresh=再読込
wnd(Compare|ConflictSolver|Git.indexEditor).mniView-remember-as-default=デフォルトとして記憶する
wnd(Compare|ConflictSolver|Git.indexEditor).mniView-settings=設定
wnd(Compare|ConflictSolver|Git.indexEditor).mniView-show-current-line-control=現在の行を長いテキストボックスで表示
wnd(Compare|ConflictSolver|Git.indexEditor).mniView-synchronize-scrolling=Synchronize Scrolling
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mnu"Edit"=編集
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mnu"File"=ファイル
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mnu"Go To"=移動
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).mnu"View"=表示
wnd(Compare|ConflictSolver|Git.indexEditor).tbr"Next Change"=次の変更
wnd(Compare|ConflictSolver|Git.indexEditor).tbr"Prev. Change"=前の変更
wnd(Compare|ConflictSolver|Git.indexEditor).tbr"Reload"=再読込
wnd(Compare|ConflictSolver|Git.indexEditor|Editor).tbr"Save"=保存
wnd(Compare|ConflictSolver|Git.indexEditor).tbr"Take Left"=左を採用
wnd(Compare|ConflictSolver|Git.indexEditor).tbr"Take Right"=右を採用
wndLog.mni"Add 2 Git repositories to Group 'GitRepository'"=\
 Add 2 Git repositories to Group 'GitRepository'
wndLog.mni"Copy Selection in Column"=Copy Selection in Column
wndLog.mni"Ext."=Ext.
wndLog.mni"Last Changed On"=Last Changed On
wndLog.mni"Name"=Name
wndLog.mni"Relative Directory"=Relative Directory
wndLog.mni"Relative Path"=Relative Path
wndLog.mni"Renamed Path"=Renamed Path
wndLog.mni"Size"=Size
wndLog.mni"State"=State
wndLog.mniChangesView.compact=Compact
wndLog.mniChangesView.ignoreLineSeparators=Ignore Line-Ending Changes
wndLog.mniChangesView.sideBySide=Side by Side
wndLog.mniChangesView.unified=Unified
wndLog.mniSearch-find=Find
wndLog.mniSearch-next=Find Next
wndLog.mniSearch-previous=Find Previous
wndLog.tab"Changes \(EOL: Unix\)"=Changes \(EOL: Unix\)
wndLog.tab"Changes \(EOL: Windows\)"=Changes \(EOL: Windows\)
wndLog.tbt"If selected and Index as well as Working Tree changes are available, show them separately."=\
 If selected and Index as well as Working Tree changes are available, show them separately.
wndLog.tbt"If selected, files from subdirectories are shown."=\
 If selected, files from subdirectories are shown.
wndLog.tbt"Refresh information from Bitbucket."=Refresh information from Bitbucket.
wndLog.tbt"Refresh information from GitHub."=Refresh information from GitHub.
wndLog.tbtBranchAdd=Add a new branch for the current commit.
wndLog.tbtFlowFeatureFinish=Finish a Git-Flow feature.
wndLog.tbtFlowFeatureStart=Start a new Git-Flow feature.
wndLog.tbtFlowHotfixStart=Start a new Git-Flow hotfix.
wndLog.tbtRemoteFetch=Fetch commits from all remote repositories.
wndLog.tbtStashDrop=Drop one or more stashes from the repository.
wndLog.tbtWindowLayoutSetReview=Switch to the Review perspective.
wndProject.mniChangesView.compact=Compact
wndProject.mniChangesView.ignoreLineSeparators=Ignore Line-Ending Changes
wndProject.mniChangesView.sideBySide=Side by Side
wndProject.mniChangesView.unified=Unified
wndProject.mniSearch-find=Find
wndProject.mniSearch-next=Find Next
wndProject.mniSearch-previous=Find Previous
wnd(Log|Project).btn"Abort"=中断
wnd(Log|Project).btn"Commit"=コミット
wnd(Log|Project).btn"Conflict Solver"=コンフリクトソルバー
wnd(Log|Project).btn"Continue"=続ける
wnd(Log|Project).btn"Mark HEAD as Bad"=Mark HEAD as Bad
wnd(Log|Project).btn"Mark HEAD as Good"=Mark HEAD as Good
wnd(Log|Project).btn"Recreate Conflict"=Recreate Conflict
wnd(Log|Project).btn"Rerun Thoroughly"=Rerun Thoroughly
wnd(Log|Project).btn"Reset"=リセット
wnd(Log|Project).btn"Reveal"=Reveal
wnd(Log|Project).btn"Stage"=ステージ
wnd(Log|Project).btn"Step"=Step
wnd(Log|Project).btn"Swap"=Swap
wnd(Log|Project).btn"Take Ours"=Take Ours
wnd(Log|Project).btn"Take Theirs"=Take Theirs
wnd(Log|Project).chk"Add 'Signed-off-by' signature"=コミットメッセージにSigned-off-by 署名を追加する
wnd(Log|Project).chk"Amend last commit instead of creating new one"=\
 新規にコミットせず、前回のコミットを修正する
wnd(Log|Project).chk"Amend last commit"=前回のコミットを修正
wnd(Log|Project).chk"Bypass commit hook"=コミットフックをバイパスする
wnd(Log|Project).chk"Create simple commit \('squash'\)"=Create simple commit \('squash'\)
wnd(Log|Project).col"Assignee"=Assignee
wnd(Log|Project).col"Author"=Author
wnd(Log|Project).col"Copied From"=Copied From
wnd(Log|Project).col"Copied from"=Copied from
wnd(Log|Project).col"Date"=Date
wnd(Log|Project).col"Ext."=Ext.
wnd(Log|Project).col"Index State"=Index State
wnd(Log|Project).col"Last Changed On"=Last Changed On
wnd(Log|Project).col"Modification"=変更
wnd(Log|Project).col"Name"=名前
wnd(Log|Project).col"Path"=Path
wnd(Log|Project).col"Relative Directory"=相対ディレクトリ
wnd(Log|Project).col"Relative Path"=相対パス
wnd(Log|Project).col"Renamed Path"=Renamed Path
wnd(Log|Project).col"Size"=サイズ
wnd(Log|Project).col"State"=状態
wnd(Log|Project).col"Text"=Text
wnd(Log|Project).col"Working Tree State"=Working Tree State
wnd(Log|Project).hnt"File Filter"=File Filter
wnd(Log|Project).lbl"$1 files hidden"=$1 files hidden
wnd(Log|Project).lbl"Directories"=ディレクトリ
wnd(Log|Project).lbl"Directory"=ディレクトリ
wnd(Log|Project).lbl"File"=ファイル
wnd(Log|Project).lbl"Files"=ファイル
wnd(Log|Project).lblStatusBarMessage"$1"=$1
wnd(Log|Project|Compare|ConflictSolver|Git.indexEditor).lblStatusBarMessage"Ready"=準備完了
wnd(Log|Project).mni"  Show Rewritten Behind Commits"=\
 Show Rewritten Behind Commits
wnd(Log|Project).mni"<no entry>"=<no entry>
wnd(Log|Project).mni"<none>"=<none>
wnd(Log|Project).mni"Abbreviated"=Abbreviated
wnd(Log|Project).mni"Add GitHub Comment"=GitHubコメントの追加
wnd(Log|Project).mni"Add GitLab Comment"=GitLabコメントの追加
wnd(Log|Project).mni"Add Review Comment"=レビューコメントを追加
wnd(Log|Project).mni"All"=全て
wnd(Log|Project).mni"Apply Patch"=Apply Patch
wnd(Log|Project).mni"Assign"=割り当て
wnd(Log|Project).mni"Assignee"=Assignee
wnd(Log|Project).mni"Author Abbreviated"=Author Abbreviated
wnd(Log|Project).mni"Author Avatar"=Author Avatar
wnd(Log|Project).mni"Author with Full Name and Email"=\
 Author with Full Name and Email
wnd(Log|Project).mni"Author with Full Name"=Author with Full Name
wnd(Log|Project).mni"Author"=Author
wnd(Log|Project).mni"Branch Coloring"=Branch Coloring
wnd(Log|Project).mni"Branches and Tags"=Branches and Tags
wnd(Log|Project).mni"Branching:"=Branching:
wnd(Log|Project).mni"Cancel"=キャンセル
wnd(Log|Project).mni"Check Out"=チェックアウト
wnd(Log|Project).mni"Checkout"=チェックアウト
wnd(Log|Project).mni"Cherry-Pick Commits to $1"=Cherry-Pick Commits to $1
wnd(Log|Project).mni"Clear History"=履歴をクリア
wnd(Log|Project).mni"Close"=閉じる
wnd(Log|Project).mni"Coloring:"=Coloring:
wnd(Log|Project).mni"Columns"=列
wnd(Log|Project).mni"Columns:"=列:
wnd(Log|Project).mni"Comment $1"=コメント $1
wnd(Log|Project).mni"Commit"=コミット
wnd(Log|Project).mni"Committer"=コミッタ
wnd(Log|Project).mni"Compact Author"=Compact Author
wnd(Log|Project).mni"Copy Full ID"=フルIDをコピー
wnd(Log|Project).mni"Copy ID"=IDをコピー
wnd(Log|Project).mni"Copy Selection in Column"=Copy Selection in Column
wnd(Log|Project).mni"Copy Selection"=選択範囲をコピー
wnd(Log|Project).mni"Copy URL"=URL をコピー
wnd(Log|Project).mni"Copy"=コピー
wnd(Log|Project).mni"Create Merge Request"=マージリクエストを作成
wnd(Log|Project).mni"Create Pull Request"=プルリクエストを作成
wnd(Log|Project).mni"Cut"=切り取り
wnd(Log|Project).mni"Date"=Date
wnd(Log|Project).mni"Default Coloring"=Default Coloring
wnd(Log|Project).mni"Delete 'Comment $1'"=Delete 'Comment $1'
wnd(Log|Project).mni"Delete"=削除
wnd(Log|Project).mni"Diff Tool"=Diffツール
wnd(Log|Project).mni"Discard Hunk"=Discard Hunk
wnd(Log|Project).mni"Discard Inner-line Change"=Discard Inner-line Change
wnd(Log|Project).mni"Discard Line"=Discard Line
wnd(Log|Project).mni"Discard Selection"=Discard Selection
wnd(Log|Project).mni"Drop Local Data"=Drop Local Data
wnd(Log|Project).mni"Edit 'Comment $1'"=Edit 'Comment $1'
wnd(Log|Project).mni"Edit in Index Editor"=Edit in Index Editor
wnd(Log|Project).mni"Edit"=編集
wnd(Log|Project).mni"Ext."=Ext.
wnd(Log|Project).mni"Fast-Forward Merge"=Fast-Forward マージ
wnd(Log|Project).mni"Fetch Merge Request"=Fetch Merge Request
wnd(Log|Project).mni"Fetch Pull Request"=Fetch Pull Request
wnd(Log|Project).mni"File Content \(very expensive\)"=File Content \(very expensive\)
wnd(Log|Project).mni"File \(expensive\)"=File \(expensive\)
wnd(Log|Project).mni"Files from Subdirectories"=Files from Subdirectories
wnd(Log|Project).mni"Follow All Parents"=Follow All Parents
wnd(Log|Project).mni"Follow Only First Parent"=Follow Only First Parent
wnd(Log|Project).mni"Forget Pattern"=Forget Pattern
wnd(Log|Project).mni"Forget"=Forget
wnd(Log|Project).mni"Format Patch"=Format Patch
wnd(Log|Project).mni"Full Author With Email"=Full Author With Email
wnd(Log|Project).mni"Full Author"=Full Author
wnd(Log|Project).mni"Full Name With Email"=Full Name With Email
wnd(Log|Project).mni"Full Name"=Full Name
wnd(Log|Project).mni"Git Config"=Git Config
wnd(Log|Project).mni"Git-LFS Version"=Git-LFS Version
wnd(Log|Project).mni"ID"=ID
wnd(Log|Project).mni"Integrate"=Integrate
wnd(Log|Project).mni"Jump To"=Jump To
wnd(Log|Project).mni"LFS"=LFS
wnd(Log|Project).mni"Last Changed On"=Last Changed On
wnd(Log|Project).mni"Mark as Bad"=Mark as Bad
wnd(Log|Project).mni"Mark as Good"=Mark as Good
wnd(Log|Project).mni"Merge Directly To"=Merge Directly To
wnd(Log|Project).mni"Merge Merge Request"=Merge Merge Request
wnd(Log|Project).mni"Merge Pull Request"=Merge Pull Request
wnd(Log|Project).mni"Merge"=マージ
wnd(Log|Project).mni"Message"=メッセージ
wnd(Log|Project).mni"Modification"=Modification
wnd(Log|Project).mni"More options"=追加のオプション
wnd(Log|Project).mni"Move Commit"=Move Commit
wnd(Log|Project).mni"Move To"=移動先
wnd(Log|Project).mni"Move and Squash Commit"=Move and Squash Commit
wnd(Log|Project).mni"Name"=名前
wnd(Log|Project).mni"Neither"=Neither
wnd(Log|Project).mni"New Group"=New Group
wnd(Log|Project).mni"No Group"=No Group
wnd(Log|Project).mni"Only If Changed"=Only If Changed
wnd(Log|Project).mni"Only Selected"=Only Selected
wnd(Log|Project).mni"Open in Browser"=Open in Browser
wnd(Log|Project).mni"Open in Web Browser"=Open in Web Browser
wnd(Log|Project).mni"Other Branch"=Other Branch
wnd(Log|Project).mni"Paste"=貼り付け
wnd(Log|Project).mni"Path"=パス
wnd(Log|Project).mni"Please select Index or Working Tree."=\
 インデックスまたはワーキングツリーを選択してください。
wnd(Log|Project).mni"Print Git Version"=Print Git Version
wnd(Log|Project).mni"Pull, then Push"=プル→プッシュ
wnd(Log|Project).mni"Push To"=プッシュ先
wnd(Log|Project).mni"Push"=プッシュ
wnd(Log|Project).mni"Push, then Pull"=プッシュ→プル
wnd(Log|Project).mni"Quick Stash All"=Quick Stash All
wnd(Log|Project).mni"Quick Stash Selection"=Quick Stash Selection
wnd(Log|Project).mni"Rebase $1 commit from $2 to $3"=\
 Rebase $1 commit from $2 to $3
wnd(Log|Project).mni"Rebase $1 commits from $2 to $3"=\
 Rebase $1 commits from $2 to $3
wnd(Log|Project).mni"Regular Expressions"=Regular Expressions
wnd(Log|Project).mni"Reject Pull Request"=Reject Pull Request
wnd(Log|Project).mni"Relative Directory"=相対ディレクトリ
wnd(Log|Project).mni"Relative Path"=相対パス
wnd(Log|Project).mni"Remember Pattern"=Remember Pattern
wnd(Log|Project).mni"Rename"=リネーム
wnd(Log|Project).mni"Renamed Path"=リネームされたパス
wnd(Log|Project).mni"Reorder Commits"=Reorder Commits
wnd(Log|Project).mni"Reply '$1'"=Reply '$1'
wnd(Log|Project).mni"Reply"=返信
wnd(Log|Project).mni"Reset HEAD to $1"=Reset HEAD to $1
wnd(Log|Project).mni"Reset to Default"=デフォルトにリセット
wnd(Log|Project).mni"Resolve"=Resolve
wnd(Log|Project).mni"Retract Merge Request"=マージリクエストの撤回
wnd(Log|Project).mni"Retract Pull Request"=Retract Pull Request
wnd(Log|Project).mni"Revert $1"=Revert $1
wnd(Log|Project).mni"Review"=レビュー
wnd(Log|Project).mni"SHA"=SHA
wnd(Log|Project).mni"Select from JIRA"=Select from JIRA
wnd(Log|Project).mni"Select from Log"=ログから選択
wnd(Log|Project).mni"Set '$1' to $2"=Set '$1' to $2
wnd(Log|Project).mni"Show All Refs"=Show All Refs
wnd(Log|Project).mni"Show Auxiliary Branch"=Show Auxiliary Branch
wnd(Log|Project).mni"Show Branch Labels"=Show Branch Labels
wnd(Log|Project).mni"Show Common Commits"=Show Common Commits
wnd(Log|Project).mni"Show Incoming Commits"=Show Incoming Commits
wnd(Log|Project).mni"Show More Commits \(Temporarily\)"=Show More Commits \(Temporarily\)
wnd(Log|Project).mni"Show Only Selected Branches and Tags"=\
 Show Only Selected Branches and Tags
wnd(Log|Project).mni"Show Only Selected Refs"=Show Only Selected Refs
wnd(Log|Project).mni"Show Working Tree On Demand"=Show Working Tree On Demand
wnd(Log|Project).mni"Show Working Tree Permanently"=Show Working Tree Permanently
wnd(Log|Project).mni"Size"=サイズ
wnd(Log|Project).mni"Sort Merge Parents First"=Sort Merge Parents First
wnd(Log|Project).mni"Sort Primary Parents First"=Sort Primary Parents First
wnd(Log|Project).mni"Stage Hunk"=Stage Hunk
wnd(Log|Project).mni"Stage Inner-line Change"=Stage Inner-line Change
wnd(Log|Project).mni"Stage Innerline Change"=Stage Innerline Change
wnd(Log|Project).mni"Stage Line"=Stage Line
wnd(Log|Project).mni"Stage Lines"=Stage Lines
wnd(Log|Project).mni"Stage Selection"=Stage Selection
wnd(Log|Project).mni"Stash Selection"=Stash Selection
wnd(Log|Project).mni"State"=状態
wnd(Log|Project).mni"Subtree"=サブツリー
wnd(Log|Project).mni"Template!"=Template!
wnd(Log|Project).mni"Test"=Test
wnd(Log|Project).mni"Text"=Text
wnd(Log|Project).mni"Toggle Hosting Provider Integration"=Toggle Hosting Provider Integration
wnd(Log|Project).mni"Toggle"=トグル
wnd(Log|Project).mni"Varying Coloring"=Varying Coloring
wnd(Log|Project).mniAbout=SmartGitについて
wnd(Log|Project).mniAdd=追加
wnd(Log|Project).mniAnnotate=ブレーム
wnd(Log|Project).mniAssume-unchanged-toggle=Toggle 'Assume Unchanged'
wnd(Log|Project).mniBisectBad=Mark HEAD as Bad
wnd(Log|Project).mniBisectExit=リセット
wnd(Log|Project).mniBisectGood=Mark HEAD as Good
wnd(Log|Project).mniBisectStart=開始
wnd(Log|Project).mniBranchAbort=中断
wnd(Log|Project).mniBranchAdd=ブランチを追加
wnd(Log|Project).mniBranchAddTag=タグを追加
wnd(Log|Project).mniBranchClose=閉じる
wnd(Log|Project).mniBranchDelete=削除
wnd(Log|Project).mniBranchRename=リネーム
wnd(Log|Project).mniBranchResetTracking=Stop Tracking
wnd(Log|Project).mniBranchSetTracking=Set Tracked Branch
wnd(Log|Project).mniBranchSplit=Modify or Split Commit
wnd(Log|Project).mniBranchSplitFiles=Split Off Files
wnd(Log|Project).mniBranchesGitFlowRemoteOnly=Show remote branches in their Git-Flow sections
wnd(Log|Project).mniBranchesGitFlowTracked=Show remote, tracked branches
wnd(Log|Project).mniBranchesSectionize=タグやブランチをパスのような名前でグループ化 \(foo/bar\)
wnd(Log|Project).mniBranchesSectionizeAfterLastSlash=After last slash
wnd(Log|Project).mniBranchesSectionizeCompact=単一項目は階層化しない
wnd(Log|Project).mniBranchesSectionsBeforeRefs=グループを最初に表示する
wnd(Log|Project).mniBranchesSelectObsolete=廃止されたローカルブランチを選択
wnd(Log|Project).mniBranchesSortByName=名前でソート
wnd(Log|Project).mniBranchesSortByNameReversed=名前でソート \(番号は降順\)
wnd(Log|Project).mniBranchesSortByTime=コミットされた時間で並べ替え
wnd(Log|Project).mniChangesView.compact=Compact
wnd(Log|Project).mniChangesView.ignoreLineSeparators=Ignore Line-Ending Changes
wnd(Log|Project).mniChangesView.sideBySide=Side by Side
wnd(Log|Project).mniChangesView.unified=Unified
wnd(Log|Project).mniCheckForLatestBuild=最新ビルドの確認
wnd(Log|Project).mniCheckForNewVersion=新しいバージョンの確認
wnd(Log|Project).mniCheckout=チェックアウト
wnd(Log|Project).mniCherryPick=チェリーピック
wnd(Log|Project).mniClean=Clean Working Tree
wnd(Log|Project).mniClearOutput=出力をクリア
wnd(Log|Project).mniCommit=コミット
wnd(Log|Project).mniCompact-display=Compact Change Display
wnd(Log|Project).mniCompareWithWorkingTree=Compare with Working Tree
wnd(Log|Project).mniConfigureTagGrouping=タグ-グルーピング
wnd(Log|Project).mniConfigureToolbar=ツールバーの設定
wnd(Log|Project).mniConflictSolver=コンフリクトソルバー
wnd(Log|Project).mniContactSupport=サポートに連絡
wnd(Log|Project).mniCopyCommitId=IDをコピー
wnd(Log|Project).mniCopyCommitMessage=メッセージをコピー
wnd(Log|Project).mniCopyName=名前をコピー
wnd(Log|Project).mniCopyPath=パスをコピー
wnd(Log|Project).mniCopyRelativePath=Copy Relative Path
wnd(Log|Project).mniCustomize=カスタマイズ
wnd(Log|Project).mniDebugCreateHeapDump=Create Heap Dump
wnd(Log|Project).mniDebugCreateThreadDumps=Create Periodical Thread Dumps
wnd(Log|Project).mniDebugEnableRefreshTraceLogging=Starting Tracing Refreshing
wnd(Log|Project).mniDebugLogFileMonitorEvents=Log File Monitor Events
wnd(Log|Project).mniDebugLogFileMonitorState=Log File Monitor State
wnd(Log|Project).mniDebugLogOpenRepositories=Log Open Repositories
wnd(Log|Project).mniDebugRestart=再起動
wnd(Log|Project).mniDebugRunGc=Run GC
wnd(Log|Project).mniDelete=削除
wnd(Log|Project).mniDiscard=破棄
wnd(Log|Project).mniEdit-ignore-case-changes=行比較で大文字小文字を区別しない
wnd(Log|Project).mniEditCommitAuthor=Autherを編集
wnd(Log|Project).mniEditCommitMessage=コミットメッセージを編集
wnd(Log|Project).mniEditFile=ファイルを編集
wnd(Log|Project).mniExit=終了
wnd(Log|Project).mniFetch=プル
wnd(Log|Project).mniFile-close=閉じる
wnd(Log|Project).mniFilterCommits=Filter Commits
wnd(Log|Project).mniFilterFiles=Filter Files
wnd(Log|Project).mniFindAction=コマンドを検索
wnd(Log|Project).mniFindObject=オブジェクトを検索
wnd(Log|Project).mniFixup=Fixup
wnd(Log|Project).mniFlowConfigure=設定
wnd(Log|Project).mniFlowContext=Git-Flow
wnd(Log|Project).mniFlowFeatureFinish=Finish Feature
wnd(Log|Project).mniFlowFeatureStart=Start Feature
wnd(Log|Project).mniFlowHotfixFinish=Finish Hotfix
wnd(Log|Project).mniFlowHotfixStart=Start Hotfix
wnd(Log|Project).mniFlowIntegrateDevelop=Integrate Develop
wnd(Log|Project).mniFlowReleaseFinish=Finish Release
wnd(Log|Project).mniFlowReleaseStart=Start Release
wnd(Log|Project).mniFlowSupportStart=Start Support Branch
wnd(Log|Project).mniForgetCommit=Forget Commit
wnd(Log|Project).mniGoto-next-diff=次の変更
wnd(Log|Project).mniGoto-previous-diff=前の変更
wnd(Log|Project).mniGotoChildrenCommit=Select Child Commit
wnd(Log|Project).mniGotoParentsCommit=Select Parent Commit
wnd(Log|Project).mniIgnore=無視
wnd(Log|Project).mniIgnore-line-separators=Ignore Line-Ending Changes
wnd(Log|Project).mniIgnoreReveal=無視リストを編集
wnd(Log|Project).mniIncludeTrackedRemoteBranches=Include Tracked Remote Branches
wnd(Log|Project).mniIndexEditor=Index Editor
wnd(Log|Project).mniInvestigate=履歴調査
wnd(Log|Project).mniLfsInstall=Install
wnd(Log|Project).mniLfsLock=Lock
wnd(Log|Project).mniLfsPrune=Prune
wnd(Log|Project).mniLfsTrack=Track
wnd(Log|Project).mniLfsUnlock=Unlock
wnd(Log|Project).mniLicenseAgreement=ライセンス契約
wnd(Log|Project).mniLocalGc=ガベージコレクタ
wnd(Log|Project).mniLog=ログ
wnd(Log|Project).mniLogCommitsColoringBranch=Branch Coloring
wnd(Log|Project).mniLogCommitsColoringDefault=Default Coloring
wnd(Log|Project).mniLogCommitsColoringLegacy=Varying Coloring
wnd(Log|Project).mniLogCommitsColoringMerge=マージ可能なカラーリング
wnd(Log|Project).mniLogRepository=Show Log Window
wnd(Log|Project).mniLogShowAllParents=Follow All Parents
wnd(Log|Project).mniLogShowOnlyFirstParents=Show Only First Parents
wnd(Log|Project).mniLogTopoFiltering=Show Graph While Filtering
wnd(Log|Project).mniLogWorkingTreeIndexOnDemand=Show Working Tree  Index On Demand
wnd(Log|Project).mniLogWorkingTreeIndexPermanent=Show Working Tree  Index Permanently
wnd(Log|Project).mniMailingList=SmartGitウェブサイト
wnd(Log|Project).mniMerge=マージ
wnd(Log|Project).mniNewWindow=新しいウィンドウ
wnd(Log|Project).mniOpen=ワーキングツリーから開く
wnd(Log|Project).mniOpenDocumentation=オンラインドキュメント
wnd(Log|Project).mniOpenRootLog=Open Root Log
wnd(Log|Project).mniOpenUserEcho=機能リクエスト
wnd(Log|Project).mniOpenWorkingTree=Open Working Tree
wnd(Log|Project).mniPreferences=環境設定
wnd(Log|Project).mniPreviewCommentNext=次のコメント
wnd(Log|Project).mniPreviewCommentPrevious=前のコメント
wnd(Log|Project).mniPreviewCompareAutomatic=自動
wnd(Log|Project).mniPreviewCompareHeadVsIndex=HEAD vs. Index
wnd(Log|Project).mniPreviewCompareIndexVsWT=Index vs. Working Tree
wnd(Log|Project).mniPreviewRefresh=再読込
wnd(Log|Project).mniPreviewShowCurrentLines=現在の行を長いテキストボックスで表示
wnd(Log|Project).mniPreviewUndo=取り消し\(Undo\)
wnd(Log|Project).mniPush=プッシュ
wnd(Log|Project).mniPushCommits=Push Up To
wnd(Log|Project).mniPushTo=プッシュ先
wnd(Log|Project).mniPushToGerrit=Push to Gerrit
wnd(Log|Project).mniRebaseAbort=中断
wnd(Log|Project).mniRebaseContinue=Continue
wnd(Log|Project).mniRebaseHeadTo=Rebase HEAD To
wnd(Log|Project).mniRebaseInteractive=Rebase Interactive From
wnd(Log|Project).mniRebaseSkip=Skip
wnd(Log|Project).mniRebaseStep=Step
wnd(Log|Project).mniRebaseToHead=Rebase to HEAD
wnd(Log|Project).mniRebaseToHead"Rebase to HEAD \($1\)"=Rebase to HEAD \($1\)
wnd(Log|Project).mniRebaseToHead"Rebase to HEAD"=Rebase to HEAD
wnd(Log|Project).mniRefresh=更新
wnd(Log|Project).mniRegister=登録
wnd(Log|Project).mniRemoteAdd=追加
wnd(Log|Project).mniRemoteCopyUrl=URL をコピー
wnd(Log|Project).mniRemoteDelete=削除
wnd(Log|Project).mniRemoteFetch=フェッチ
wnd(Log|Project).mniRemoteFetchMore=Fetch More
wnd(Log|Project).mniRemoteProperties=プロパティ
wnd(Log|Project).mniRemoteRename=リネーム
wnd(Log|Project).mniRemove=除去
wnd(Log|Project).mniRename=リネーム
wnd(Log|Project).mniRepositoryAdd=追加 or 作成
wnd(Log|Project).mniRepositoryAddGroup=グループを作成
wnd(Log|Project).mniRepositoryClone=クローン
wnd(Log|Project).mniRepositoryClose=閉じる
wnd(Log|Project).mniRepositoryEditConfig=リポジトリ
wnd(Log|Project).mniRepositoryEditConfigUser=ユーザー
wnd(Log|Project).mniRepositoryFavorite=お気に入り
wnd(Log|Project).mniRepositoryOpen=リポジトリを開く
wnd(Log|Project).mniRepositoryOpenInNewWindow=リポジトリを新しいウィンドウで開く
wnd(Log|Project).mniRepositoryRemove=除去
wnd(Log|Project).mniRepositoryRename=リネーム
wnd(Log|Project).mniRepositorySearch=リポジトリの検索
wnd(Log|Project).mniRepositorySelectObsolete=廃止されたリポジトリを選択する
wnd(Log|Project).mniRepositorySettings=リポジトリ設定
wnd(Log|Project).mniReset=リセット
wnd(Log|Project).mniResetAdvanced=Reset Advanced
wnd(Log|Project).mniResolve=Resolve
wnd(Log|Project).mniResolveOurs=Take Ours
wnd(Log|Project).mniResolveRecreateConflict=Recreate Conflict
wnd(Log|Project).mniResolveTheirs=Take Theirs
wnd(Log|Project).mniRevealCommit=コミットを表示する
wnd(Log|Project).mniRevealCommitExtend=選択されたコミットと比較
wnd(Log|Project).mniRevealCommitWithHead=HEAD と比較
wnd(Log|Project).mniRevealPrevCommit=前のコミットを表示する
wnd(Log|Project).mniRevealWorkingTree=Reveal Working Tree
wnd(Log|Project).mniRevert=Revert
wnd(Log|Project).mniReviewCommentCreate=コメントを追加
wnd(Log|Project).mniReviewConfigure=設定
wnd(Log|Project).mniReviewDumpDatabase=Dump Database
wnd(Log|Project).mniReviewPullRequestCreate=プルリクエストを作成
wnd(Log|Project).mniReviewPullRequestCreate"Create Merge Request"=マージリクエストを作成
wnd(Log|Project).mniReviewPullRequestCreate"Create Pull Request"=プルリクエストを作成
wnd(Log|Project).mniReviewShowClosedPullRequests=Show Closed Pull Requests
wnd(Log|Project).mniReviewSync=同期
wnd(Log|Project).mniRewriteTextFile=Fix Line-Endings
wnd(Log|Project).mniSaveAs=名前を付けて保存
wnd(Log|Project).mniSearch-find=検索
wnd(Log|Project).mniSearch-next=次を検索
wnd(Log|Project).mniSearch-previous=前を検索
wnd(Log|Project).mniSelectCommittableFiles=Select Committable Files
wnd(Log|Project).mniSelectDirectory=Select Directory
wnd(Log|Project).mniSelectRoot=Select Repository Root
wnd(Log|Project).mniSet-syntax=Syntax Language
wnd(Log|Project).mniSetDepth=Set Depth
wnd(Log|Project).mniShow-line-numbers=行番号の表示
wnd(Log|Project).mniShowChanges=比較する
wnd(Log|Project).mniSkipWorkTree=Toggle 'Skip Worktree'
wnd(Log|Project).mniSortCommitsAsIs=Sort Commits by Time
wnd(Log|Project).mniSortCommitsMergeParentsFirst=Sort Commits with Merge Parents first
wnd(Log|Project).mniSortCommitsPrimaryParentsFirst=Sort Commits with Primary Parents first
wnd(Log|Project).mniSquashCommits=Squash Commits
wnd(Log|Project).mniStage=ステージ
wnd(Log|Project).mniStashApply=スタッシュを適用する
wnd(Log|Project).mniStashDrop=スタッシュを削除
wnd(Log|Project).mniStashRename=リネーム
wnd(Log|Project).mniStashSave=Stash All
wnd(Log|Project).mniStashSaveSelection=Stash Selection
wnd(Log|Project).mniSubmoduleDeactivate=Deactivate
wnd(Log|Project).mniSubmoduleDeinit=Deinit
wnd(Log|Project).mniSubmoduleInit=初期化
wnd(Log|Project).mniSubmoduleRegister=追加
wnd(Log|Project).mniSubmoduleReset=リセット
wnd(Log|Project).mniSubmoduleSync=同期
wnd(Log|Project).mniSubmoduleUnregister=登録を解除
wnd(Log|Project).mniSubtreeAdd=追加
wnd(Log|Project).mniSubtreeMerge=マージ
wnd(Log|Project).mniSubtreePush=プッシュ
wnd(Log|Project).mniSubtreeReset=リセット
wnd(Log|Project).mniSubtreeSplit=Split
wnd(Log|Project).mniSync=同期
wnd(Log|Project).mniUndoLastCommit=直前のコミットを元に戻す
wnd(Log|Project).mniUnstage=アンステージ
wnd(Log|Project).mniView-ignore-whitespaces-all=行比較で空白をすべて無視する
wnd(Log|Project).mniView-ignore-whitespaces-leading-trailing=行比較で先頭と行末の空白を無視する
wnd(Log|Project).mniView-ignore-whitespaces-none=行比較で空白を無視しない
wnd(Log|Project).mniView-remember-as-default=デフォルトとして記憶する
wnd(Log|Project).mniView-settings=設定
wnd(Log|Project).mniView-show-current-line-control=現在の行を長いテキストボックスで表示
wnd(Log|Project).mniViewFromSubmodules=Show Files From Submodules
wnd(Log|Project).mniViewIgnored=Show Ignored Files
wnd(Log|Project).mniViewRecursive=Files from Subdirectories
wnd(Log|Project).mniViewRenameSource=Show Rename Source Files
wnd(Log|Project).mniViewSeparateWtAndIndex=Separate Working Tree and Index
wnd(Log|Project).mniViewSetAnchorCommit=Set Anchor Commit
wnd(Log|Project).mniViewSkipped=Show Skipped Files
wnd(Log|Project).mniViewStaged=Show Staged Files
wnd(Log|Project).mniViewStyleIndex=Only Index
wnd(Log|Project).mniViewStyleMixed=Mixed
wnd(Log|Project).mniViewStyleWorkingTree=Only Working Tree
wnd(Log|Project).mniViewToolBar=ツールバーを表示
wnd(Log|Project).mniViewUnchanged=未変更ファイルの表示
wnd(Log|Project).mniViewUnchangedAssumed=Show Assume-Unchanged Files
wnd(Log|Project).mniViewUnversioned=Show Unversioned Files
wnd(Annotate|Compare|ConflictSolver|Deepgit|Git.indexEditor|Editor|Log|Project).mniWindow-fullScreen=フルスクリーン
wnd(Annotate|Compare|ConflictSolver|Deepgit|Git.indexEditor|Editor|Log|Project).mniWindow-maximizeMaximize=最大化
wnd(Annotate|Compare|ConflictSolver|Deepgit|Git.indexEditor|Editor|Log|Project).mniWindow-maximizeRestore=最大化を解除する
wnd(Annotate|Compare|ConflictSolver|Deepgit|Git.indexEditor|Editor|Log|Project).mniWindow-minimize=最小化
wnd(Log|Project).mniWindowBranches=ブランチ
wnd(Log|Project).mniWindowChanges=変更点
wnd(Log|Project).mniWindowClose=閉じる
wnd(Log|Project).mniWindowComments=コメント
wnd(Log|Project).mniWindowCommit=コミット
wnd(Log|Project).mniWindowDebugLog=Debug Log
wnd(Log|Project).mniWindowDirectories=リポジトリ
wnd(Log|Project).mniWindowFiles=ファイル
wnd(Log|Project).mniWindowGraph=グラフ
wnd(Log|Project).mniWindowHideView=Hide View
wnd(Log|Project).mniWindowJournal=Journal
wnd(Log|Project).mniWindowLayoutSetMain=Main Perspective
wnd(Log|Project).mniWindowLayoutSetReview=Review Perspective
wnd(Annotate|Compare|ConflictSolver|Deepgit|Git.indexEditor|Editor|Log|Project).mniWindowMaximizeRestore"Maximize View"=ビューを最大化
wnd(Annotate|Compare|ConflictSolver|Deepgit|Git.indexEditor|Editor|Log|Project).mniWindowMaximizeRestore"Restore Maximized View"=最大化したビューを元に戻す
wnd(Log|Project).mniWindowOutput=出力
wnd(Log|Project).mniWindowWorkingTree=ワーキングツリーウィンドウを表示する
wnd(Log|Project).mniWorktreeAdd=ワークツリーを追加
wnd(Log|Project).mniWorktreePrune=Prune Obsolete Worktrees
wnd(Log|Project).mniWorktreeRemove=廃止されたワークツリーを整理する
wnd(Annotate|Compare|ConflictSolver|Deepgit|Git.indexEditor|Editor|Log|Project).mnu"< No Windows >"=< No Windows >
wnd(Log|Project).mnu"Bisect"=Bisect
wnd(Log|Project).mnu"Branch"=ブランチ
wnd(Log|Project).mnu"Branches"=ブランチ
wnd(Log|Project).mnu"Changes"=変更点
wnd(Log|Project).mnu"Commits"=コミット
wnd(Log|Project).mnu"Debug"=デバッグ
wnd(Log|Project).mnu"Edit Git Config"=Git Config を編集
wnd(Log|Project).mnu"Edit"=編集
wnd(Log|Project).mnu"Git-Flow"=Git-Flow
wnd(Log|Project).mnu"Help"=ヘルプ
wnd(Log|Project).mnu"LFS"=LFS
wnd(Log|Project).mnu"Local"=ローカル
wnd(Log|Project).mnu"Query"=クエリ
wnd(Log|Project).mnu"Rebase"=リベース
wnd(Log|Project).mnu"Remote"=リモート
wnd(Log|Project).mnu"Repositories"=リポジトリ
wnd(Log|Project).mnu"Repository"=リポジトリ
wnd(Log|Project).mnu"Resolve"=Resolve
wnd(Log|Project).mnu"Review"=レビュー
wnd(Log|Project).mnu"Submodule"=サブモジュール
wnd(Log|Project).mnu"Subtree"=サブツリー
wnd(Log|Project).mnu"Tools"=ツール
wnd(Log|Project).mnu"View"=表示
wnd(Annotate|Compare|ConflictSolver|Deepgit|Git.indexEditor|Editor|Log|Project).mnu"Window"=ウィンドウ
wnd(Log|Project).tab"Branches"=ブランチ
wnd(Log|Project).tab"Changes of $1 - $2 \($3\)"=\
 変更点 $1 - $2 \($3\)
wnd(Log|Project).tab"Changes of $1 - $2"=変更点 $1 - $2
wnd(Log|Project).tab"Changes of $1 \($2\) - $3"=\
 変更点 $1 \($2\) - $3
wnd(Log|Project).tab"Changes of $1 \($2\)"=変更点 $1 \($2\)
wnd(Log|Project).tab"Changes"=変更点
wnd(Log|Project).tab"Comments \($1\)"=コメント \($1\)
wnd(Log|Project).tab"Comments"=コメント
wnd(Log|Project).tab"Commit Message"=コミットメッセージ
wnd(Log|Project).tab"Commit"=コミット
wnd(Log|Project).tab"Debug Log"=Debug Log
wnd(Log|Project).tab"Files \(Working Tree\)"=Files \(Working Tree\)
wnd(Log|Project).tab"Files"=ファイル
wnd(Log|Project).tab"Graph \(Initializing Log-Cache...\)"=Graph \(Initializing Log-Cache...\)
wnd(Log|Project).tab"Graph \(Initializing Subtree-Cache...\)"=Graph \(Initializing Subtree-Cache...\)
wnd(Log|Project).tab"Graph \(Initializing...\)"=Graph \(Initializing...\)
wnd(Log|Project).tab"Graph \(Loading...\)"=Graph \(Loading...\)
wnd(Log|Project).tab"Graph \(Running log...\)"=Graph \(Running log...\)
wnd(Log|Project).tab"Graph \(Scanning WT...\)"=Graph \(Scanning WT...\)
wnd(Log|Project).tab"Graph"=グラフ
wnd(Log|Project).tab"Journal"=Journal
wnd(Log|Project).tab"Output"=出力
wnd(Log|Project).tab"Repositories"=リポジトリ
wnd(Log|Project).tbr"Add Tag"=タグを追加
wnd(Log|Project).tbr"Add"=追加
wnd(Log|Project).tbr"Apply Stash"=スタッシュを適用
wnd(Log|Project).tbr"Blame"=ブレーム
wnd(Log|Project).tbr"Branch"=ブランチ
wnd(Log|Project).tbr"Changes"=変更点
wnd(Log|Project).tbr"Check Out"=チェックアウト
wnd(Log|Project).tbr"Cherry-Pick"=チェリーピック
wnd(Log|Project).tbr"Commit"=コミット
wnd(Log|Project).tbr"Compact"=Compact
wnd(Log|Project).tbr"Conflict Solver"=コンフリクトソルバー
wnd(Log|Project).tbr"Delete"=削除
wnd(Log|Project).tbr"Discard"=破棄
wnd(Log|Project).tbr"Drop Stash"=スタッシュを削除
wnd(Log|Project).tbr"Fetch"=フェッチ
wnd(Log|Project).tbr"Finish"=Finish
wnd(Log|Project).tbr"Git-Flow"=Git-Flow
wnd(Log|Project).tbr"Ignore"=無視
wnd(Log|Project).tbr"Index Editor"=Index Editor
wnd(Log|Project).tbr"Integrate"=Integrate
wnd(Log|Project).tbr"Investigate"=履歴調査
wnd(Log|Project).tbr"Log Selection"=Log Selection
wnd(Log|Project).tbr"Log"=ログ
wnd(Log|Project).tbr"Main"=Main
wnd(Log|Project).tbr"Merge"=マージ
wnd(Log|Project).tbr"Pull"=プル
wnd(Log|Project).tbr"Push To"=プッシュ先
wnd(Log|Project).tbr"Push"=プッシュ
wnd(Log|Project).tbr"Rebase"=リベース
wnd(Log|Project).tbr"Refresh"=更新
wnd(Log|Project).tbr"Remove"=除去
wnd(Log|Project).tbr"Reset Adv."=Reset Adv.
wnd(Log|Project).tbr"Reset"=リセット
wnd(Log|Project).tbr"Revert"=Revert
wnd(Log|Project).tbr"Review"=レビュー
wnd(Log|Project).tbr"Save Stash"=スタッシュに保存
wnd(Log|Project).tbr"Side by Side"=並べて表示
wnd(Log|Project).tbr"Stage"=ステージ
wnd(Log|Project).tbr"Start"=スタート
wnd(Log|Project).tbr"Sync"=同期
wnd(Log|Project).tbr"Unified"=単独表示
wnd(Log|Project).tbr"Unstage"=アンステージ
wnd(Log|Project).tbt"Clear logging."=ログをクリア
wnd(Log|Project).tbt"Commit Message History"=Commit Message History
wnd(Log|Project).tbt"Hidden toolbar items..."=Hidden toolbar items...
wnd(Log|Project).tbt"Hosting provider is not configured for the current repository. Go to the Preferences to add a configuration."=\
 Hosting provider is not configured for the current repository. Go to the Preferences to add a configuration.
wnd(Log|Project).tbt"If selected and Index as well as Working Tree changes are available, show them separately."=\
 If selected and Index as well as Working Tree changes are available, show them separately.
wnd(Log|Project).tbt"If selected, files from subdirectories are shown."=\
 If selected, files from subdirectories are shown.
wnd(Log|Project).tbt"If selected, the directories will be shown."=\
 If selected, the directories will be shown.
wnd(Log|Project).tbt"Indicates how many files or directories are selected."=\
 Indicates how many files or directories are selected.
wnd(Log|Project).tbt"Interpret the search pattern as regular expression."=\
 検索パターンを正規表現として解釈します。
wnd(Log|Project).tbt"Options"=Options
wnd(Log|Project).tbt"Reading incoming merge requests from '$1'."=\
 $1 から受信したマージ要求を読み取る
wnd(Log|Project).tbt"Reading repository info from '$1'."=Reading repository info from '$1'.
wnd(Log|Project).tbt"Refresh information from GitLab."=Refresh information from GitLab.
wnd(Log|Project).tbt"Show directories tree"=Show directories tree
wnd(Log|Project).tbtAnnotate=Show a blame \(annotated\) view of the selected file.
wnd(Log|Project).tbtBranchAdd=現在のコミットに新しいブランチを追加します。
wnd(Log|Project).tbtBranchAddTag=現在のコミットに新しいタグを追加します。
wnd(Log|Project).tbtCheckout=既存のコミットをチェックアウトします。
wnd(Log|Project).tbtCherryPick=Merge changes from other branches.
wnd(Log|Project).tbtClearOutput=「出力」ペーンをクリアします。
wnd(Log|Project).tbtCommit=ローカルの変更をコミットします。
wnd(Log|Project).tbtConflictSolver=Open the Conflict Solver \(or configured external merge tool\) to resolve conflicts.
wnd(Log|Project).tbtDelete=選択したローカルファイルまたはディレクトリを削除します。
wnd(Log|Project).tbtDiscard=ローカルの変更を破棄します
wnd(Log|Project).tbtFetch=リモートリポジトリからコミットを取得し、（オプションで）ローカルの可能なコミットと統合します。
wnd(Log|Project).tbtFlowContext=Finish a Git-Flow feature.
wnd(Log|Project).tbtFlowFeatureFinish=Finish a Git-Flow feature.
wnd(Log|Project).tbtFlowFeatureStart=Start a new Git-Flow feature.
wnd(Log|Project).tbtFlowHotfixFinish=Finish a Git-Flow hotfix.
wnd(Log|Project).tbtFlowHotfixStart=Start a new Git-Flow hotfix.
wnd(Log|Project).tbtFlowIntegrateDevelop=Integrate new base commits into a Git-Flow feature.
wnd(Log|Project).tbtGoto-next-diff=次の変更点に進みます。
wnd(Log|Project).tbtGoto-previous-diff=前の変更点に移動します。
wnd(Log|Project).tbtIgnore=Mark unversioned local files/directories to be ignored.
wnd(Log|Project).tbtIndexEditor=行単位のステージングなど、選択したファイルのインデックスの状態を編集することができます。
wnd(Log|Project).tbtInvestigate=Investigate history line-wise with DeepGit.
wnd(Log|Project).tbtLog=選択したファイルやディレクトリの履歴を表示します。
wnd(Log|Project).tbtLogRepository=リポジトリ全体の履歴を表示します。
wnd(Log|Project).tbtMerge=他のブランチからの変更をマージします。
wnd(Log|Project).tbtPush=ローカルのコミットをリモートの origin リポジトリにプッシュします。
wnd(Log|Project).tbtPushTo=Push local commits to a remote repository, allowing to choose the target repository.
wnd(Log|Project).tbtRebaseHeadTo=Apply the HEAD commits to the selected commit.
wnd(Log|Project).tbtRefresh=Refresh the log view.
wnd(Log|Project).tbtRemoteFetch=すべてのリモートリポジトリからコミットを取得します。
wnd(Log|Project).tbtRemove=選択したファイルやディレクトリをリポジトリから削除します。
wnd(Log|Project).tbtReset=現在のHEADを別のコミットにリセットします。
wnd(Log|Project).tbtResetAdvanced=Reset current HEAD to another commit and keep the difference in Index or Working Tree.
wnd(Log|Project).tbtRevealHomeCommit=Reveal HEAD/working tree in graph.
wnd(Log|Project).tbtRevealPrevCommit=Reveal selected commits before invoking Reveal Working Tree.
wnd(Log|Project).tbtRevealWorkingTree=Reveal working tree node in graph.
wnd(Log|Project).tbtRevert=Undo the changes of an existing commit by "reverse" merging it.
wnd(Log|Project).tbtShowChanges=Open the file compare for the selected file.
wnd(Log|Project).tbtStage=作業中のツリーファイルをインデックスに格納し、次のコミットに備えます。
wnd(Log|Project).tbtStashApply=スタッシュからローカルに変更を再適用します。
wnd(Log|Project).tbtStashDrop=Drop one or more stashes from the repository.
wnd(Log|Project).tbtStashSave=現在のローカルの変更をスタッシュに退避します。
wnd(Log|Project).tbtSync=現在のブランチのローカルコミットをプッシュし、リモートの変更をプルします。
wnd(Log|Project).tbtUnstage=インデックスからステージングされた変更を削除します。
wnd(Log|Project).tbtViewFromSubmodules=選択すると、サブモジュールのファイルが表示されます。
wnd(Log|Project).tbtViewIgnored=選択すると、無視されたファイルが表示されます。
wnd(Log|Project).tbtViewRecursive=If selected, files from subdirectories are shown.
wnd(Log|Project).tbtViewRenameSource=If selected, removed/missing source files of detected renames will be shown.
wnd(Log|Project).tbtViewSeparateWtAndIndex=If selected and Index as well as Working Tree changes are available, show them separately.
wnd(Log|Project).tbtViewSkipped=選択すると、スキップされたファイルが表示されます。
wnd(Log|Project).tbtViewStaged=If selected, files with staged \(Index\) changes and without working tree changes will be shown.
wnd(Log|Project).tbtViewUnchanged=選択すると、変更されていないファイルが表示されます。
wnd(Log|Project).tbtViewUnchangedAssumed=選択すると、「assume-unchanged」フラグを持つファイルが表示されます。
wnd(Log|Project).tbtViewUnversioned=選択すると、まだバージョン管理されていないファイルが表示されます。
wnd(Log|Project).tbtWindowLayoutSetMain=Switch to the Main perspective.
wnd(Log|Project).tbtWindowLayoutSetReview=Switch to the Review perspective.
